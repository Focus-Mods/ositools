// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScriptExtensions.proto

#ifndef PROTOBUF_INCLUDED_ScriptExtensions_2eproto
#define PROTOBUF_INCLUDED_ScriptExtensions_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ScriptExtensions_2eproto 

namespace protobuf_ScriptExtensions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_ScriptExtensions_2eproto
namespace dse {
class MessageWrapper;
class MessageWrapperDefaultTypeInternal;
extern MessageWrapperDefaultTypeInternal _MessageWrapper_default_instance_;
class MsgC2SExtenderHello;
class MsgC2SExtenderHelloDefaultTypeInternal;
extern MsgC2SExtenderHelloDefaultTypeInternal _MsgC2SExtenderHello_default_instance_;
class MsgC2SRequestNetworkFixedStrings;
class MsgC2SRequestNetworkFixedStringsDefaultTypeInternal;
extern MsgC2SRequestNetworkFixedStringsDefaultTypeInternal _MsgC2SRequestNetworkFixedStrings_default_instance_;
class MsgPostLuaMessage;
class MsgPostLuaMessageDefaultTypeInternal;
extern MsgPostLuaMessageDefaultTypeInternal _MsgPostLuaMessage_default_instance_;
class MsgS2CKick;
class MsgS2CKickDefaultTypeInternal;
extern MsgS2CKickDefaultTypeInternal _MsgS2CKick_default_instance_;
class MsgS2CResetLuaMessage;
class MsgS2CResetLuaMessageDefaultTypeInternal;
extern MsgS2CResetLuaMessageDefaultTypeInternal _MsgS2CResetLuaMessage_default_instance_;
class MsgS2CSyncNetworkFixedStrings;
class MsgS2CSyncNetworkFixedStringsDefaultTypeInternal;
extern MsgS2CSyncNetworkFixedStringsDefaultTypeInternal _MsgS2CSyncNetworkFixedStrings_default_instance_;
class MsgS2CSyncStat;
class MsgS2CSyncStatDefaultTypeInternal;
extern MsgS2CSyncStatDefaultTypeInternal _MsgS2CSyncStat_default_instance_;
class StatIndexedProperty;
class StatIndexedPropertyDefaultTypeInternal;
extern StatIndexedPropertyDefaultTypeInternal _StatIndexedProperty_default_instance_;
class StatProperty;
class StatPropertyDefaultTypeInternal;
extern StatPropertyDefaultTypeInternal _StatProperty_default_instance_;
class StatPropertyList;
class StatPropertyListDefaultTypeInternal;
extern StatPropertyListDefaultTypeInternal _StatPropertyList_default_instance_;
class StatRequirement;
class StatRequirementDefaultTypeInternal;
extern StatRequirementDefaultTypeInternal _StatRequirement_default_instance_;
}  // namespace dse
namespace google {
namespace protobuf {
template<> ::dse::MessageWrapper* Arena::CreateMaybeMessage<::dse::MessageWrapper>(Arena*);
template<> ::dse::MsgC2SExtenderHello* Arena::CreateMaybeMessage<::dse::MsgC2SExtenderHello>(Arena*);
template<> ::dse::MsgC2SRequestNetworkFixedStrings* Arena::CreateMaybeMessage<::dse::MsgC2SRequestNetworkFixedStrings>(Arena*);
template<> ::dse::MsgPostLuaMessage* Arena::CreateMaybeMessage<::dse::MsgPostLuaMessage>(Arena*);
template<> ::dse::MsgS2CKick* Arena::CreateMaybeMessage<::dse::MsgS2CKick>(Arena*);
template<> ::dse::MsgS2CResetLuaMessage* Arena::CreateMaybeMessage<::dse::MsgS2CResetLuaMessage>(Arena*);
template<> ::dse::MsgS2CSyncNetworkFixedStrings* Arena::CreateMaybeMessage<::dse::MsgS2CSyncNetworkFixedStrings>(Arena*);
template<> ::dse::MsgS2CSyncStat* Arena::CreateMaybeMessage<::dse::MsgS2CSyncStat>(Arena*);
template<> ::dse::StatIndexedProperty* Arena::CreateMaybeMessage<::dse::StatIndexedProperty>(Arena*);
template<> ::dse::StatProperty* Arena::CreateMaybeMessage<::dse::StatProperty>(Arena*);
template<> ::dse::StatPropertyList* Arena::CreateMaybeMessage<::dse::StatPropertyList>(Arena*);
template<> ::dse::StatRequirement* Arena::CreateMaybeMessage<::dse::StatRequirement>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dse {

// ===================================================================

class MsgPostLuaMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.MsgPostLuaMessage) */ {
 public:
  MsgPostLuaMessage();
  virtual ~MsgPostLuaMessage();

  MsgPostLuaMessage(const MsgPostLuaMessage& from);

  inline MsgPostLuaMessage& operator=(const MsgPostLuaMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgPostLuaMessage(MsgPostLuaMessage&& from) noexcept
    : MsgPostLuaMessage() {
    *this = ::std::move(from);
  }

  inline MsgPostLuaMessage& operator=(MsgPostLuaMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const MsgPostLuaMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgPostLuaMessage* internal_default_instance() {
    return reinterpret_cast<const MsgPostLuaMessage*>(
               &_MsgPostLuaMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(MsgPostLuaMessage* other);
  void Swap(MsgPostLuaMessage* other);
  friend void swap(MsgPostLuaMessage& a, MsgPostLuaMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgPostLuaMessage* New() const final {
    return CreateMaybeMessage<MsgPostLuaMessage>(NULL);
  }

  MsgPostLuaMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgPostLuaMessage>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgPostLuaMessage& from);
  void MergeFrom(const MsgPostLuaMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgPostLuaMessage* other);
  protected:
  explicit MsgPostLuaMessage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string channel_name = 1;
  void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  const ::std::string& channel_name() const;
  void set_channel_name(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_name(::std::string&& value);
  #endif
  void set_channel_name(const char* value);
  void set_channel_name(const char* value, size_t size);
  ::std::string* mutable_channel_name();
  ::std::string* release_channel_name();
  void set_allocated_channel_name(::std::string* channel_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_channel_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_channel_name(
      ::std::string* channel_name);

  // string payload = 2;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_payload();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_payload(
      ::std::string* payload);

  // @@protoc_insertion_point(class_scope:dse.MsgPostLuaMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr channel_name_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgS2CResetLuaMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.MsgS2CResetLuaMessage) */ {
 public:
  MsgS2CResetLuaMessage();
  virtual ~MsgS2CResetLuaMessage();

  MsgS2CResetLuaMessage(const MsgS2CResetLuaMessage& from);

  inline MsgS2CResetLuaMessage& operator=(const MsgS2CResetLuaMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgS2CResetLuaMessage(MsgS2CResetLuaMessage&& from) noexcept
    : MsgS2CResetLuaMessage() {
    *this = ::std::move(from);
  }

  inline MsgS2CResetLuaMessage& operator=(MsgS2CResetLuaMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const MsgS2CResetLuaMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgS2CResetLuaMessage* internal_default_instance() {
    return reinterpret_cast<const MsgS2CResetLuaMessage*>(
               &_MsgS2CResetLuaMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(MsgS2CResetLuaMessage* other);
  void Swap(MsgS2CResetLuaMessage* other);
  friend void swap(MsgS2CResetLuaMessage& a, MsgS2CResetLuaMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgS2CResetLuaMessage* New() const final {
    return CreateMaybeMessage<MsgS2CResetLuaMessage>(NULL);
  }

  MsgS2CResetLuaMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgS2CResetLuaMessage>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgS2CResetLuaMessage& from);
  void MergeFrom(const MsgS2CResetLuaMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CResetLuaMessage* other);
  protected:
  explicit MsgS2CResetLuaMessage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool bootstrap_scripts = 1;
  void clear_bootstrap_scripts();
  static const int kBootstrapScriptsFieldNumber = 1;
  bool bootstrap_scripts() const;
  void set_bootstrap_scripts(bool value);

  // @@protoc_insertion_point(class_scope:dse.MsgS2CResetLuaMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool bootstrap_scripts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgS2CSyncNetworkFixedStrings : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.MsgS2CSyncNetworkFixedStrings) */ {
 public:
  MsgS2CSyncNetworkFixedStrings();
  virtual ~MsgS2CSyncNetworkFixedStrings();

  MsgS2CSyncNetworkFixedStrings(const MsgS2CSyncNetworkFixedStrings& from);

  inline MsgS2CSyncNetworkFixedStrings& operator=(const MsgS2CSyncNetworkFixedStrings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgS2CSyncNetworkFixedStrings(MsgS2CSyncNetworkFixedStrings&& from) noexcept
    : MsgS2CSyncNetworkFixedStrings() {
    *this = ::std::move(from);
  }

  inline MsgS2CSyncNetworkFixedStrings& operator=(MsgS2CSyncNetworkFixedStrings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const MsgS2CSyncNetworkFixedStrings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgS2CSyncNetworkFixedStrings* internal_default_instance() {
    return reinterpret_cast<const MsgS2CSyncNetworkFixedStrings*>(
               &_MsgS2CSyncNetworkFixedStrings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(MsgS2CSyncNetworkFixedStrings* other);
  void Swap(MsgS2CSyncNetworkFixedStrings* other);
  friend void swap(MsgS2CSyncNetworkFixedStrings& a, MsgS2CSyncNetworkFixedStrings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgS2CSyncNetworkFixedStrings* New() const final {
    return CreateMaybeMessage<MsgS2CSyncNetworkFixedStrings>(NULL);
  }

  MsgS2CSyncNetworkFixedStrings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgS2CSyncNetworkFixedStrings>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgS2CSyncNetworkFixedStrings& from);
  void MergeFrom(const MsgS2CSyncNetworkFixedStrings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CSyncNetworkFixedStrings* other);
  protected:
  explicit MsgS2CSyncNetworkFixedStrings(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string network_string = 1;
  int network_string_size() const;
  void clear_network_string();
  static const int kNetworkStringFieldNumber = 1;
  const ::std::string& network_string(int index) const;
  ::std::string* mutable_network_string(int index);
  void set_network_string(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_network_string(int index, ::std::string&& value);
  #endif
  void set_network_string(int index, const char* value);
  void set_network_string(int index, const char* value, size_t size);
  ::std::string* add_network_string();
  void add_network_string(const ::std::string& value);
  #if LANG_CXX11
  void add_network_string(::std::string&& value);
  #endif
  void add_network_string(const char* value);
  void add_network_string(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& network_string() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_network_string();

  // @@protoc_insertion_point(class_scope:dse.MsgS2CSyncNetworkFixedStrings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> network_string_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgC2SRequestNetworkFixedStrings : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.MsgC2SRequestNetworkFixedStrings) */ {
 public:
  MsgC2SRequestNetworkFixedStrings();
  virtual ~MsgC2SRequestNetworkFixedStrings();

  MsgC2SRequestNetworkFixedStrings(const MsgC2SRequestNetworkFixedStrings& from);

  inline MsgC2SRequestNetworkFixedStrings& operator=(const MsgC2SRequestNetworkFixedStrings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgC2SRequestNetworkFixedStrings(MsgC2SRequestNetworkFixedStrings&& from) noexcept
    : MsgC2SRequestNetworkFixedStrings() {
    *this = ::std::move(from);
  }

  inline MsgC2SRequestNetworkFixedStrings& operator=(MsgC2SRequestNetworkFixedStrings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const MsgC2SRequestNetworkFixedStrings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgC2SRequestNetworkFixedStrings* internal_default_instance() {
    return reinterpret_cast<const MsgC2SRequestNetworkFixedStrings*>(
               &_MsgC2SRequestNetworkFixedStrings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(MsgC2SRequestNetworkFixedStrings* other);
  void Swap(MsgC2SRequestNetworkFixedStrings* other);
  friend void swap(MsgC2SRequestNetworkFixedStrings& a, MsgC2SRequestNetworkFixedStrings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgC2SRequestNetworkFixedStrings* New() const final {
    return CreateMaybeMessage<MsgC2SRequestNetworkFixedStrings>(NULL);
  }

  MsgC2SRequestNetworkFixedStrings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgC2SRequestNetworkFixedStrings>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgC2SRequestNetworkFixedStrings& from);
  void MergeFrom(const MsgC2SRequestNetworkFixedStrings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgC2SRequestNetworkFixedStrings* other);
  protected:
  explicit MsgC2SRequestNetworkFixedStrings(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dse.MsgC2SRequestNetworkFixedStrings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgC2SExtenderHello : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.MsgC2SExtenderHello) */ {
 public:
  MsgC2SExtenderHello();
  virtual ~MsgC2SExtenderHello();

  MsgC2SExtenderHello(const MsgC2SExtenderHello& from);

  inline MsgC2SExtenderHello& operator=(const MsgC2SExtenderHello& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgC2SExtenderHello(MsgC2SExtenderHello&& from) noexcept
    : MsgC2SExtenderHello() {
    *this = ::std::move(from);
  }

  inline MsgC2SExtenderHello& operator=(MsgC2SExtenderHello&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const MsgC2SExtenderHello& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgC2SExtenderHello* internal_default_instance() {
    return reinterpret_cast<const MsgC2SExtenderHello*>(
               &_MsgC2SExtenderHello_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(MsgC2SExtenderHello* other);
  void Swap(MsgC2SExtenderHello* other);
  friend void swap(MsgC2SExtenderHello& a, MsgC2SExtenderHello& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgC2SExtenderHello* New() const final {
    return CreateMaybeMessage<MsgC2SExtenderHello>(NULL);
  }

  MsgC2SExtenderHello* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgC2SExtenderHello>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgC2SExtenderHello& from);
  void MergeFrom(const MsgC2SExtenderHello& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgC2SExtenderHello* other);
  protected:
  explicit MsgC2SExtenderHello(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dse.MsgC2SExtenderHello)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatRequirement : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.StatRequirement) */ {
 public:
  StatRequirement();
  virtual ~StatRequirement();

  StatRequirement(const StatRequirement& from);

  inline StatRequirement& operator=(const StatRequirement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatRequirement(StatRequirement&& from) noexcept
    : StatRequirement() {
    *this = ::std::move(from);
  }

  inline StatRequirement& operator=(StatRequirement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const StatRequirement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatRequirement* internal_default_instance() {
    return reinterpret_cast<const StatRequirement*>(
               &_StatRequirement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(StatRequirement* other);
  void Swap(StatRequirement* other);
  friend void swap(StatRequirement& a, StatRequirement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatRequirement* New() const final {
    return CreateMaybeMessage<StatRequirement>(NULL);
  }

  StatRequirement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatRequirement>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const StatRequirement& from);
  void MergeFrom(const StatRequirement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatRequirement* other);
  protected:
  explicit StatRequirement(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string string_param = 3;
  void clear_string_param();
  static const int kStringParamFieldNumber = 3;
  const ::std::string& string_param() const;
  void set_string_param(const ::std::string& value);
  #if LANG_CXX11
  void set_string_param(::std::string&& value);
  #endif
  void set_string_param(const char* value);
  void set_string_param(const char* value, size_t size);
  ::std::string* mutable_string_param();
  ::std::string* release_string_param();
  void set_allocated_string_param(::std::string* string_param);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_string_param();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_string_param(
      ::std::string* string_param);

  // int32 requirement = 1;
  void clear_requirement();
  static const int kRequirementFieldNumber = 1;
  ::google::protobuf::int32 requirement() const;
  void set_requirement(::google::protobuf::int32 value);

  // int32 int_param = 2;
  void clear_int_param();
  static const int kIntParamFieldNumber = 2;
  ::google::protobuf::int32 int_param() const;
  void set_int_param(::google::protobuf::int32 value);

  // bool negate = 4;
  void clear_negate();
  static const int kNegateFieldNumber = 4;
  bool negate() const;
  void set_negate(bool value);

  // @@protoc_insertion_point(class_scope:dse.StatRequirement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr string_param_;
  ::google::protobuf::int32 requirement_;
  ::google::protobuf::int32 int_param_;
  bool negate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatProperty : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.StatProperty) */ {
 public:
  StatProperty();
  virtual ~StatProperty();

  StatProperty(const StatProperty& from);

  inline StatProperty& operator=(const StatProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatProperty(StatProperty&& from) noexcept
    : StatProperty() {
    *this = ::std::move(from);
  }

  inline StatProperty& operator=(StatProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const StatProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatProperty* internal_default_instance() {
    return reinterpret_cast<const StatProperty*>(
               &_StatProperty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(StatProperty* other);
  void Swap(StatProperty* other);
  friend void swap(StatProperty& a, StatProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatProperty* New() const final {
    return CreateMaybeMessage<StatProperty>(NULL);
  }

  StatProperty* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatProperty>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const StatProperty& from);
  void MergeFrom(const StatProperty& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatProperty* other);
  protected:
  explicit StatProperty(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string string_params = 4;
  int string_params_size() const;
  void clear_string_params();
  static const int kStringParamsFieldNumber = 4;
  const ::std::string& string_params(int index) const;
  ::std::string* mutable_string_params(int index);
  void set_string_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_string_params(int index, ::std::string&& value);
  #endif
  void set_string_params(int index, const char* value);
  void set_string_params(int index, const char* value, size_t size);
  ::std::string* add_string_params();
  void add_string_params(const ::std::string& value);
  #if LANG_CXX11
  void add_string_params(::std::string&& value);
  #endif
  void add_string_params(const char* value);
  void add_string_params(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& string_params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_params();

  // repeated int32 int_params = 5;
  int int_params_size() const;
  void clear_int_params();
  static const int kIntParamsFieldNumber = 5;
  ::google::protobuf::int32 int_params(int index) const;
  void set_int_params(int index, ::google::protobuf::int32 value);
  void add_int_params(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int_params() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int_params();

  // repeated float float_params = 6;
  int float_params_size() const;
  void clear_float_params();
  static const int kFloatParamsFieldNumber = 6;
  float float_params(int index) const;
  void set_float_params(int index, float value);
  void add_float_params(float value);
  const ::google::protobuf::RepeatedField< float >&
      float_params() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_float_params();

  // repeated bool bool_params = 7;
  int bool_params_size() const;
  void clear_bool_params();
  static const int kBoolParamsFieldNumber = 7;
  bool bool_params(int index) const;
  void set_bool_params(int index, bool value);
  void add_bool_params(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      bool_params() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_bool_params();

  // repeated int32 surface_boosts = 8;
  int surface_boosts_size() const;
  void clear_surface_boosts();
  static const int kSurfaceBoostsFieldNumber = 8;
  ::google::protobuf::int32 surface_boosts(int index) const;
  void set_surface_boosts(int index, ::google::protobuf::int32 value);
  void add_surface_boosts(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      surface_boosts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_surface_boosts();

  // string conditions = 3;
  void clear_conditions();
  static const int kConditionsFieldNumber = 3;
  const ::std::string& conditions() const;
  void set_conditions(const ::std::string& value);
  #if LANG_CXX11
  void set_conditions(::std::string&& value);
  #endif
  void set_conditions(const char* value);
  void set_conditions(const char* value, size_t size);
  ::std::string* mutable_conditions();
  ::std::string* release_conditions();
  void set_allocated_conditions(::std::string* conditions);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_conditions();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_conditions(
      ::std::string* conditions);

  // string name = 9;
  void clear_name();
  static const int kNameFieldNumber = 9;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // uint32 property_context = 1;
  void clear_property_context();
  static const int kPropertyContextFieldNumber = 1;
  ::google::protobuf::uint32 property_context() const;
  void set_property_context(::google::protobuf::uint32 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dse.StatProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_params_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int_params_;
  mutable int _int_params_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > float_params_;
  mutable int _float_params_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > bool_params_;
  mutable int _bool_params_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > surface_boosts_;
  mutable int _surface_boosts_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr conditions_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 property_context_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatPropertyList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.StatPropertyList) */ {
 public:
  StatPropertyList();
  virtual ~StatPropertyList();

  StatPropertyList(const StatPropertyList& from);

  inline StatPropertyList& operator=(const StatPropertyList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatPropertyList(StatPropertyList&& from) noexcept
    : StatPropertyList() {
    *this = ::std::move(from);
  }

  inline StatPropertyList& operator=(StatPropertyList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const StatPropertyList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatPropertyList* internal_default_instance() {
    return reinterpret_cast<const StatPropertyList*>(
               &_StatPropertyList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(StatPropertyList* other);
  void Swap(StatPropertyList* other);
  friend void swap(StatPropertyList& a, StatPropertyList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatPropertyList* New() const final {
    return CreateMaybeMessage<StatPropertyList>(NULL);
  }

  StatPropertyList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatPropertyList>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const StatPropertyList& from);
  void MergeFrom(const StatPropertyList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatPropertyList* other);
  protected:
  explicit StatPropertyList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dse.StatProperty properties = 2;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 2;
  ::dse::StatProperty* mutable_properties(int index);
  ::google::protobuf::RepeatedPtrField< ::dse::StatProperty >*
      mutable_properties();
  const ::dse::StatProperty& properties(int index) const;
  ::dse::StatProperty* add_properties();
  const ::google::protobuf::RepeatedPtrField< ::dse::StatProperty >&
      properties() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:dse.StatPropertyList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::dse::StatProperty > properties_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatIndexedProperty : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.StatIndexedProperty) */ {
 public:
  StatIndexedProperty();
  virtual ~StatIndexedProperty();

  StatIndexedProperty(const StatIndexedProperty& from);

  inline StatIndexedProperty& operator=(const StatIndexedProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatIndexedProperty(StatIndexedProperty&& from) noexcept
    : StatIndexedProperty() {
    *this = ::std::move(from);
  }

  inline StatIndexedProperty& operator=(StatIndexedProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const StatIndexedProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatIndexedProperty* internal_default_instance() {
    return reinterpret_cast<const StatIndexedProperty*>(
               &_StatIndexedProperty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(StatIndexedProperty* other);
  void Swap(StatIndexedProperty* other);
  friend void swap(StatIndexedProperty& a, StatIndexedProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatIndexedProperty* New() const final {
    return CreateMaybeMessage<StatIndexedProperty>(NULL);
  }

  StatIndexedProperty* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatIndexedProperty>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const StatIndexedProperty& from);
  void MergeFrom(const StatIndexedProperty& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatIndexedProperty* other);
  protected:
  explicit StatIndexedProperty(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string stringval = 2;
  void clear_stringval();
  static const int kStringvalFieldNumber = 2;
  const ::std::string& stringval() const;
  void set_stringval(const ::std::string& value);
  #if LANG_CXX11
  void set_stringval(::std::string&& value);
  #endif
  void set_stringval(const char* value);
  void set_stringval(const char* value, size_t size);
  ::std::string* mutable_stringval();
  ::std::string* release_stringval();
  void set_allocated_stringval(::std::string* stringval);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_stringval();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringval(
      ::std::string* stringval);

  // int32 intval = 1;
  void clear_intval();
  static const int kIntvalFieldNumber = 1;
  ::google::protobuf::int32 intval() const;
  void set_intval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dse.StatIndexedProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr stringval_;
  ::google::protobuf::int32 intval_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgS2CSyncStat : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.MsgS2CSyncStat) */ {
 public:
  MsgS2CSyncStat();
  virtual ~MsgS2CSyncStat();

  MsgS2CSyncStat(const MsgS2CSyncStat& from);

  inline MsgS2CSyncStat& operator=(const MsgS2CSyncStat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgS2CSyncStat(MsgS2CSyncStat&& from) noexcept
    : MsgS2CSyncStat() {
    *this = ::std::move(from);
  }

  inline MsgS2CSyncStat& operator=(MsgS2CSyncStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const MsgS2CSyncStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgS2CSyncStat* internal_default_instance() {
    return reinterpret_cast<const MsgS2CSyncStat*>(
               &_MsgS2CSyncStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(MsgS2CSyncStat* other);
  void Swap(MsgS2CSyncStat* other);
  friend void swap(MsgS2CSyncStat& a, MsgS2CSyncStat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgS2CSyncStat* New() const final {
    return CreateMaybeMessage<MsgS2CSyncStat>(NULL);
  }

  MsgS2CSyncStat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgS2CSyncStat>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgS2CSyncStat& from);
  void MergeFrom(const MsgS2CSyncStat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CSyncStat* other);
  protected:
  explicit MsgS2CSyncStat(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dse.StatIndexedProperty indexed_properties = 4;
  int indexed_properties_size() const;
  void clear_indexed_properties();
  static const int kIndexedPropertiesFieldNumber = 4;
  ::dse::StatIndexedProperty* mutable_indexed_properties(int index);
  ::google::protobuf::RepeatedPtrField< ::dse::StatIndexedProperty >*
      mutable_indexed_properties();
  const ::dse::StatIndexedProperty& indexed_properties(int index) const;
  ::dse::StatIndexedProperty* add_indexed_properties();
  const ::google::protobuf::RepeatedPtrField< ::dse::StatIndexedProperty >&
      indexed_properties() const;

  // repeated .dse.StatRequirement requirements = 6;
  int requirements_size() const;
  void clear_requirements();
  static const int kRequirementsFieldNumber = 6;
  ::dse::StatRequirement* mutable_requirements(int index);
  ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement >*
      mutable_requirements();
  const ::dse::StatRequirement& requirements(int index) const;
  ::dse::StatRequirement* add_requirements();
  const ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement >&
      requirements() const;

  // repeated .dse.StatRequirement memorization_requirements = 7;
  int memorization_requirements_size() const;
  void clear_memorization_requirements();
  static const int kMemorizationRequirementsFieldNumber = 7;
  ::dse::StatRequirement* mutable_memorization_requirements(int index);
  ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement >*
      mutable_memorization_requirements();
  const ::dse::StatRequirement& memorization_requirements(int index) const;
  ::dse::StatRequirement* add_memorization_requirements();
  const ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement >&
      memorization_requirements() const;

  // repeated string combo_categories = 8;
  int combo_categories_size() const;
  void clear_combo_categories();
  static const int kComboCategoriesFieldNumber = 8;
  const ::std::string& combo_categories(int index) const;
  ::std::string* mutable_combo_categories(int index);
  void set_combo_categories(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_combo_categories(int index, ::std::string&& value);
  #endif
  void set_combo_categories(int index, const char* value);
  void set_combo_categories(int index, const char* value, size_t size);
  ::std::string* add_combo_categories();
  void add_combo_categories(const ::std::string& value);
  #if LANG_CXX11
  void add_combo_categories(::std::string&& value);
  #endif
  void add_combo_categories(const char* value);
  void add_combo_categories(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& combo_categories() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_combo_categories();

  // repeated .dse.StatPropertyList property_lists = 9;
  int property_lists_size() const;
  void clear_property_lists();
  static const int kPropertyListsFieldNumber = 9;
  ::dse::StatPropertyList* mutable_property_lists(int index);
  ::google::protobuf::RepeatedPtrField< ::dse::StatPropertyList >*
      mutable_property_lists();
  const ::dse::StatPropertyList& property_lists(int index) const;
  ::dse::StatPropertyList* add_property_lists();
  const ::google::protobuf::RepeatedPtrField< ::dse::StatPropertyList >&
      property_lists() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string ai_flags = 5;
  void clear_ai_flags();
  static const int kAiFlagsFieldNumber = 5;
  const ::std::string& ai_flags() const;
  void set_ai_flags(const ::std::string& value);
  #if LANG_CXX11
  void set_ai_flags(::std::string&& value);
  #endif
  void set_ai_flags(const char* value);
  void set_ai_flags(const char* value, size_t size);
  ::std::string* mutable_ai_flags();
  ::std::string* release_ai_flags();
  void set_allocated_ai_flags(::std::string* ai_flags);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ai_flags();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ai_flags(
      ::std::string* ai_flags);

  // sint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 modifier_list = 3;
  void clear_modifier_list();
  static const int kModifierListFieldNumber = 3;
  ::google::protobuf::int32 modifier_list() const;
  void set_modifier_list(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dse.MsgS2CSyncStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::dse::StatIndexedProperty > indexed_properties_;
  ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement > requirements_;
  ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement > memorization_requirements_;
  ::google::protobuf::RepeatedPtrField< ::std::string> combo_categories_;
  ::google::protobuf::RepeatedPtrField< ::dse::StatPropertyList > property_lists_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ai_flags_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 modifier_list_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgS2CKick : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.MsgS2CKick) */ {
 public:
  MsgS2CKick();
  virtual ~MsgS2CKick();

  MsgS2CKick(const MsgS2CKick& from);

  inline MsgS2CKick& operator=(const MsgS2CKick& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgS2CKick(MsgS2CKick&& from) noexcept
    : MsgS2CKick() {
    *this = ::std::move(from);
  }

  inline MsgS2CKick& operator=(MsgS2CKick&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const MsgS2CKick& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgS2CKick* internal_default_instance() {
    return reinterpret_cast<const MsgS2CKick*>(
               &_MsgS2CKick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(MsgS2CKick* other);
  void Swap(MsgS2CKick* other);
  friend void swap(MsgS2CKick& a, MsgS2CKick& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgS2CKick* New() const final {
    return CreateMaybeMessage<MsgS2CKick>(NULL);
  }

  MsgS2CKick* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgS2CKick>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgS2CKick& from);
  void MergeFrom(const MsgS2CKick& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2CKick* other);
  protected:
  explicit MsgS2CKick(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_message();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_message(
      ::std::string* message);

  // @@protoc_insertion_point(class_scope:dse.MsgS2CKick)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageWrapper : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dse.MessageWrapper) */ {
 public:
  MessageWrapper();
  virtual ~MessageWrapper();

  MessageWrapper(const MessageWrapper& from);

  inline MessageWrapper& operator=(const MessageWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageWrapper(MessageWrapper&& from) noexcept
    : MessageWrapper() {
    *this = ::std::move(from);
  }

  inline MessageWrapper& operator=(MessageWrapper&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const MessageWrapper& default_instance();

  enum MsgCase {
    kPostLua = 1,
    kS2CResetLua = 2,
    kS2CSyncStrings = 3,
    kC2SRequestStrings = 4,
    kC2SExtenderHello = 5,
    kS2CSyncStat = 6,
    kS2CKick = 7,
    MSG_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageWrapper* internal_default_instance() {
    return reinterpret_cast<const MessageWrapper*>(
               &_MessageWrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(MessageWrapper* other);
  void Swap(MessageWrapper* other);
  friend void swap(MessageWrapper& a, MessageWrapper& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageWrapper* New() const final {
    return CreateMaybeMessage<MessageWrapper>(NULL);
  }

  MessageWrapper* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageWrapper>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MessageWrapper& from);
  void MergeFrom(const MessageWrapper& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageWrapper* other);
  protected:
  explicit MessageWrapper(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dse.MsgPostLuaMessage post_lua = 1;
  bool has_post_lua() const;
  void clear_post_lua();
  static const int kPostLuaFieldNumber = 1;
  private:
  const ::dse::MsgPostLuaMessage& _internal_post_lua() const;
  public:
  const ::dse::MsgPostLuaMessage& post_lua() const;
  ::dse::MsgPostLuaMessage* release_post_lua();
  ::dse::MsgPostLuaMessage* mutable_post_lua();
  void set_allocated_post_lua(::dse::MsgPostLuaMessage* post_lua);
  void unsafe_arena_set_allocated_post_lua(
      ::dse::MsgPostLuaMessage* post_lua);
  ::dse::MsgPostLuaMessage* unsafe_arena_release_post_lua();

  // .dse.MsgS2CResetLuaMessage s2c_reset_lua = 2;
  bool has_s2c_reset_lua() const;
  void clear_s2c_reset_lua();
  static const int kS2CResetLuaFieldNumber = 2;
  private:
  const ::dse::MsgS2CResetLuaMessage& _internal_s2c_reset_lua() const;
  public:
  const ::dse::MsgS2CResetLuaMessage& s2c_reset_lua() const;
  ::dse::MsgS2CResetLuaMessage* release_s2c_reset_lua();
  ::dse::MsgS2CResetLuaMessage* mutable_s2c_reset_lua();
  void set_allocated_s2c_reset_lua(::dse::MsgS2CResetLuaMessage* s2c_reset_lua);
  void unsafe_arena_set_allocated_s2c_reset_lua(
      ::dse::MsgS2CResetLuaMessage* s2c_reset_lua);
  ::dse::MsgS2CResetLuaMessage* unsafe_arena_release_s2c_reset_lua();

  // .dse.MsgS2CSyncNetworkFixedStrings s2c_sync_strings = 3;
  bool has_s2c_sync_strings() const;
  void clear_s2c_sync_strings();
  static const int kS2CSyncStringsFieldNumber = 3;
  private:
  const ::dse::MsgS2CSyncNetworkFixedStrings& _internal_s2c_sync_strings() const;
  public:
  const ::dse::MsgS2CSyncNetworkFixedStrings& s2c_sync_strings() const;
  ::dse::MsgS2CSyncNetworkFixedStrings* release_s2c_sync_strings();
  ::dse::MsgS2CSyncNetworkFixedStrings* mutable_s2c_sync_strings();
  void set_allocated_s2c_sync_strings(::dse::MsgS2CSyncNetworkFixedStrings* s2c_sync_strings);
  void unsafe_arena_set_allocated_s2c_sync_strings(
      ::dse::MsgS2CSyncNetworkFixedStrings* s2c_sync_strings);
  ::dse::MsgS2CSyncNetworkFixedStrings* unsafe_arena_release_s2c_sync_strings();

  // .dse.MsgC2SRequestNetworkFixedStrings c2s_request_strings = 4;
  bool has_c2s_request_strings() const;
  void clear_c2s_request_strings();
  static const int kC2SRequestStringsFieldNumber = 4;
  private:
  const ::dse::MsgC2SRequestNetworkFixedStrings& _internal_c2s_request_strings() const;
  public:
  const ::dse::MsgC2SRequestNetworkFixedStrings& c2s_request_strings() const;
  ::dse::MsgC2SRequestNetworkFixedStrings* release_c2s_request_strings();
  ::dse::MsgC2SRequestNetworkFixedStrings* mutable_c2s_request_strings();
  void set_allocated_c2s_request_strings(::dse::MsgC2SRequestNetworkFixedStrings* c2s_request_strings);
  void unsafe_arena_set_allocated_c2s_request_strings(
      ::dse::MsgC2SRequestNetworkFixedStrings* c2s_request_strings);
  ::dse::MsgC2SRequestNetworkFixedStrings* unsafe_arena_release_c2s_request_strings();

  // .dse.MsgC2SExtenderHello c2s_extender_hello = 5;
  bool has_c2s_extender_hello() const;
  void clear_c2s_extender_hello();
  static const int kC2SExtenderHelloFieldNumber = 5;
  private:
  const ::dse::MsgC2SExtenderHello& _internal_c2s_extender_hello() const;
  public:
  const ::dse::MsgC2SExtenderHello& c2s_extender_hello() const;
  ::dse::MsgC2SExtenderHello* release_c2s_extender_hello();
  ::dse::MsgC2SExtenderHello* mutable_c2s_extender_hello();
  void set_allocated_c2s_extender_hello(::dse::MsgC2SExtenderHello* c2s_extender_hello);
  void unsafe_arena_set_allocated_c2s_extender_hello(
      ::dse::MsgC2SExtenderHello* c2s_extender_hello);
  ::dse::MsgC2SExtenderHello* unsafe_arena_release_c2s_extender_hello();

  // .dse.MsgS2CSyncStat s2c_sync_stat = 6;
  bool has_s2c_sync_stat() const;
  void clear_s2c_sync_stat();
  static const int kS2CSyncStatFieldNumber = 6;
  private:
  const ::dse::MsgS2CSyncStat& _internal_s2c_sync_stat() const;
  public:
  const ::dse::MsgS2CSyncStat& s2c_sync_stat() const;
  ::dse::MsgS2CSyncStat* release_s2c_sync_stat();
  ::dse::MsgS2CSyncStat* mutable_s2c_sync_stat();
  void set_allocated_s2c_sync_stat(::dse::MsgS2CSyncStat* s2c_sync_stat);
  void unsafe_arena_set_allocated_s2c_sync_stat(
      ::dse::MsgS2CSyncStat* s2c_sync_stat);
  ::dse::MsgS2CSyncStat* unsafe_arena_release_s2c_sync_stat();

  // .dse.MsgS2CKick s2c_kick = 7;
  bool has_s2c_kick() const;
  void clear_s2c_kick();
  static const int kS2CKickFieldNumber = 7;
  private:
  const ::dse::MsgS2CKick& _internal_s2c_kick() const;
  public:
  const ::dse::MsgS2CKick& s2c_kick() const;
  ::dse::MsgS2CKick* release_s2c_kick();
  ::dse::MsgS2CKick* mutable_s2c_kick();
  void set_allocated_s2c_kick(::dse::MsgS2CKick* s2c_kick);
  void unsafe_arena_set_allocated_s2c_kick(
      ::dse::MsgS2CKick* s2c_kick);
  ::dse::MsgS2CKick* unsafe_arena_release_s2c_kick();

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:dse.MessageWrapper)
 private:
  void set_has_post_lua();
  void set_has_s2c_reset_lua();
  void set_has_s2c_sync_strings();
  void set_has_c2s_request_strings();
  void set_has_c2s_extender_hello();
  void set_has_s2c_sync_stat();
  void set_has_s2c_kick();

  inline bool has_msg() const;
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union MsgUnion {
    MsgUnion() {}
    ::dse::MsgPostLuaMessage* post_lua_;
    ::dse::MsgS2CResetLuaMessage* s2c_reset_lua_;
    ::dse::MsgS2CSyncNetworkFixedStrings* s2c_sync_strings_;
    ::dse::MsgC2SRequestNetworkFixedStrings* c2s_request_strings_;
    ::dse::MsgC2SExtenderHello* c2s_extender_hello_;
    ::dse::MsgS2CSyncStat* s2c_sync_stat_;
    ::dse::MsgS2CKick* s2c_kick_;
  } msg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgPostLuaMessage

// string channel_name = 1;
inline void MsgPostLuaMessage::clear_channel_name() {
  channel_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& MsgPostLuaMessage::channel_name() const {
  // @@protoc_insertion_point(field_get:dse.MsgPostLuaMessage.channel_name)
  return channel_name_.Get();
}
inline void MsgPostLuaMessage::set_channel_name(const ::std::string& value) {
  
  channel_name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.MsgPostLuaMessage.channel_name)
}
#if LANG_CXX11
inline void MsgPostLuaMessage::set_channel_name(::std::string&& value) {
  
  channel_name_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.MsgPostLuaMessage.channel_name)
}
#endif
inline void MsgPostLuaMessage::set_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.MsgPostLuaMessage.channel_name)
}
inline void MsgPostLuaMessage::set_channel_name(const char* value,
    size_t size) {
  
  channel_name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.MsgPostLuaMessage.channel_name)
}
inline ::std::string* MsgPostLuaMessage::mutable_channel_name() {
  
  // @@protoc_insertion_point(field_mutable:dse.MsgPostLuaMessage.channel_name)
  return channel_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MsgPostLuaMessage::release_channel_name() {
  // @@protoc_insertion_point(field_release:dse.MsgPostLuaMessage.channel_name)
  
  return channel_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void MsgPostLuaMessage::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name != NULL) {
    
  } else {
    
  }
  channel_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.MsgPostLuaMessage.channel_name)
}
inline ::std::string* MsgPostLuaMessage::unsafe_arena_release_channel_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MsgPostLuaMessage.channel_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return channel_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void MsgPostLuaMessage::unsafe_arena_set_allocated_channel_name(
    ::std::string* channel_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (channel_name != NULL) {
    
  } else {
    
  }
  channel_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      channel_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MsgPostLuaMessage.channel_name)
}

// string payload = 2;
inline void MsgPostLuaMessage::clear_payload() {
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& MsgPostLuaMessage::payload() const {
  // @@protoc_insertion_point(field_get:dse.MsgPostLuaMessage.payload)
  return payload_.Get();
}
inline void MsgPostLuaMessage::set_payload(const ::std::string& value) {
  
  payload_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.MsgPostLuaMessage.payload)
}
#if LANG_CXX11
inline void MsgPostLuaMessage::set_payload(::std::string&& value) {
  
  payload_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.MsgPostLuaMessage.payload)
}
#endif
inline void MsgPostLuaMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.MsgPostLuaMessage.payload)
}
inline void MsgPostLuaMessage::set_payload(const char* value,
    size_t size) {
  
  payload_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.MsgPostLuaMessage.payload)
}
inline ::std::string* MsgPostLuaMessage::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:dse.MsgPostLuaMessage.payload)
  return payload_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MsgPostLuaMessage::release_payload() {
  // @@protoc_insertion_point(field_release:dse.MsgPostLuaMessage.payload)
  
  return payload_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void MsgPostLuaMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.MsgPostLuaMessage.payload)
}
inline ::std::string* MsgPostLuaMessage::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MsgPostLuaMessage.payload)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return payload_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void MsgPostLuaMessage::unsafe_arena_set_allocated_payload(
    ::std::string* payload) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      payload, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MsgPostLuaMessage.payload)
}

// -------------------------------------------------------------------

// MsgS2CResetLuaMessage

// bool bootstrap_scripts = 1;
inline void MsgS2CResetLuaMessage::clear_bootstrap_scripts() {
  bootstrap_scripts_ = false;
}
inline bool MsgS2CResetLuaMessage::bootstrap_scripts() const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CResetLuaMessage.bootstrap_scripts)
  return bootstrap_scripts_;
}
inline void MsgS2CResetLuaMessage::set_bootstrap_scripts(bool value) {
  
  bootstrap_scripts_ = value;
  // @@protoc_insertion_point(field_set:dse.MsgS2CResetLuaMessage.bootstrap_scripts)
}

// -------------------------------------------------------------------

// MsgS2CSyncNetworkFixedStrings

// repeated string network_string = 1;
inline int MsgS2CSyncNetworkFixedStrings::network_string_size() const {
  return network_string_.size();
}
inline void MsgS2CSyncNetworkFixedStrings::clear_network_string() {
  network_string_.Clear();
}
inline const ::std::string& MsgS2CSyncNetworkFixedStrings::network_string(int index) const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncNetworkFixedStrings.network_string)
  return network_string_.Get(index);
}
inline ::std::string* MsgS2CSyncNetworkFixedStrings::mutable_network_string(int index) {
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CSyncNetworkFixedStrings.network_string)
  return network_string_.Mutable(index);
}
inline void MsgS2CSyncNetworkFixedStrings::set_network_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dse.MsgS2CSyncNetworkFixedStrings.network_string)
  network_string_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgS2CSyncNetworkFixedStrings::set_network_string(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:dse.MsgS2CSyncNetworkFixedStrings.network_string)
  network_string_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgS2CSyncNetworkFixedStrings::set_network_string(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  network_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dse.MsgS2CSyncNetworkFixedStrings.network_string)
}
inline void MsgS2CSyncNetworkFixedStrings::set_network_string(int index, const char* value, size_t size) {
  network_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dse.MsgS2CSyncNetworkFixedStrings.network_string)
}
inline ::std::string* MsgS2CSyncNetworkFixedStrings::add_network_string() {
  // @@protoc_insertion_point(field_add_mutable:dse.MsgS2CSyncNetworkFixedStrings.network_string)
  return network_string_.Add();
}
inline void MsgS2CSyncNetworkFixedStrings::add_network_string(const ::std::string& value) {
  network_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dse.MsgS2CSyncNetworkFixedStrings.network_string)
}
#if LANG_CXX11
inline void MsgS2CSyncNetworkFixedStrings::add_network_string(::std::string&& value) {
  network_string_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dse.MsgS2CSyncNetworkFixedStrings.network_string)
}
#endif
inline void MsgS2CSyncNetworkFixedStrings::add_network_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  network_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dse.MsgS2CSyncNetworkFixedStrings.network_string)
}
inline void MsgS2CSyncNetworkFixedStrings::add_network_string(const char* value, size_t size) {
  network_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dse.MsgS2CSyncNetworkFixedStrings.network_string)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgS2CSyncNetworkFixedStrings::network_string() const {
  // @@protoc_insertion_point(field_list:dse.MsgS2CSyncNetworkFixedStrings.network_string)
  return network_string_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgS2CSyncNetworkFixedStrings::mutable_network_string() {
  // @@protoc_insertion_point(field_mutable_list:dse.MsgS2CSyncNetworkFixedStrings.network_string)
  return &network_string_;
}

// -------------------------------------------------------------------

// MsgC2SRequestNetworkFixedStrings

// -------------------------------------------------------------------

// MsgC2SExtenderHello

// uint32 version = 1;
inline void MsgC2SExtenderHello::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgC2SExtenderHello::version() const {
  // @@protoc_insertion_point(field_get:dse.MsgC2SExtenderHello.version)
  return version_;
}
inline void MsgC2SExtenderHello::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:dse.MsgC2SExtenderHello.version)
}

// -------------------------------------------------------------------

// StatRequirement

// int32 requirement = 1;
inline void StatRequirement::clear_requirement() {
  requirement_ = 0;
}
inline ::google::protobuf::int32 StatRequirement::requirement() const {
  // @@protoc_insertion_point(field_get:dse.StatRequirement.requirement)
  return requirement_;
}
inline void StatRequirement::set_requirement(::google::protobuf::int32 value) {
  
  requirement_ = value;
  // @@protoc_insertion_point(field_set:dse.StatRequirement.requirement)
}

// int32 int_param = 2;
inline void StatRequirement::clear_int_param() {
  int_param_ = 0;
}
inline ::google::protobuf::int32 StatRequirement::int_param() const {
  // @@protoc_insertion_point(field_get:dse.StatRequirement.int_param)
  return int_param_;
}
inline void StatRequirement::set_int_param(::google::protobuf::int32 value) {
  
  int_param_ = value;
  // @@protoc_insertion_point(field_set:dse.StatRequirement.int_param)
}

// string string_param = 3;
inline void StatRequirement::clear_string_param() {
  string_param_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StatRequirement::string_param() const {
  // @@protoc_insertion_point(field_get:dse.StatRequirement.string_param)
  return string_param_.Get();
}
inline void StatRequirement::set_string_param(const ::std::string& value) {
  
  string_param_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.StatRequirement.string_param)
}
#if LANG_CXX11
inline void StatRequirement::set_string_param(::std::string&& value) {
  
  string_param_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.StatRequirement.string_param)
}
#endif
inline void StatRequirement::set_string_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_param_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.StatRequirement.string_param)
}
inline void StatRequirement::set_string_param(const char* value,
    size_t size) {
  
  string_param_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.StatRequirement.string_param)
}
inline ::std::string* StatRequirement::mutable_string_param() {
  
  // @@protoc_insertion_point(field_mutable:dse.StatRequirement.string_param)
  return string_param_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StatRequirement::release_string_param() {
  // @@protoc_insertion_point(field_release:dse.StatRequirement.string_param)
  
  return string_param_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StatRequirement::set_allocated_string_param(::std::string* string_param) {
  if (string_param != NULL) {
    
  } else {
    
  }
  string_param_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_param,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.StatRequirement.string_param)
}
inline ::std::string* StatRequirement::unsafe_arena_release_string_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.StatRequirement.string_param)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return string_param_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StatRequirement::unsafe_arena_set_allocated_string_param(
    ::std::string* string_param) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (string_param != NULL) {
    
  } else {
    
  }
  string_param_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      string_param, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.StatRequirement.string_param)
}

// bool negate = 4;
inline void StatRequirement::clear_negate() {
  negate_ = false;
}
inline bool StatRequirement::negate() const {
  // @@protoc_insertion_point(field_get:dse.StatRequirement.negate)
  return negate_;
}
inline void StatRequirement::set_negate(bool value) {
  
  negate_ = value;
  // @@protoc_insertion_point(field_set:dse.StatRequirement.negate)
}

// -------------------------------------------------------------------

// StatProperty

// uint32 property_context = 1;
inline void StatProperty::clear_property_context() {
  property_context_ = 0u;
}
inline ::google::protobuf::uint32 StatProperty::property_context() const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.property_context)
  return property_context_;
}
inline void StatProperty::set_property_context(::google::protobuf::uint32 value) {
  
  property_context_ = value;
  // @@protoc_insertion_point(field_set:dse.StatProperty.property_context)
}

// uint32 type = 2;
inline void StatProperty::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 StatProperty::type() const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.type)
  return type_;
}
inline void StatProperty::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:dse.StatProperty.type)
}

// string conditions = 3;
inline void StatProperty::clear_conditions() {
  conditions_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StatProperty::conditions() const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.conditions)
  return conditions_.Get();
}
inline void StatProperty::set_conditions(const ::std::string& value) {
  
  conditions_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.StatProperty.conditions)
}
#if LANG_CXX11
inline void StatProperty::set_conditions(::std::string&& value) {
  
  conditions_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.StatProperty.conditions)
}
#endif
inline void StatProperty::set_conditions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  conditions_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.StatProperty.conditions)
}
inline void StatProperty::set_conditions(const char* value,
    size_t size) {
  
  conditions_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.StatProperty.conditions)
}
inline ::std::string* StatProperty::mutable_conditions() {
  
  // @@protoc_insertion_point(field_mutable:dse.StatProperty.conditions)
  return conditions_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StatProperty::release_conditions() {
  // @@protoc_insertion_point(field_release:dse.StatProperty.conditions)
  
  return conditions_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StatProperty::set_allocated_conditions(::std::string* conditions) {
  if (conditions != NULL) {
    
  } else {
    
  }
  conditions_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conditions,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.StatProperty.conditions)
}
inline ::std::string* StatProperty::unsafe_arena_release_conditions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.StatProperty.conditions)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return conditions_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StatProperty::unsafe_arena_set_allocated_conditions(
    ::std::string* conditions) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (conditions != NULL) {
    
  } else {
    
  }
  conditions_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      conditions, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.StatProperty.conditions)
}

// repeated string string_params = 4;
inline int StatProperty::string_params_size() const {
  return string_params_.size();
}
inline void StatProperty::clear_string_params() {
  string_params_.Clear();
}
inline const ::std::string& StatProperty::string_params(int index) const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.string_params)
  return string_params_.Get(index);
}
inline ::std::string* StatProperty::mutable_string_params(int index) {
  // @@protoc_insertion_point(field_mutable:dse.StatProperty.string_params)
  return string_params_.Mutable(index);
}
inline void StatProperty::set_string_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dse.StatProperty.string_params)
  string_params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StatProperty::set_string_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:dse.StatProperty.string_params)
  string_params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StatProperty::set_string_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dse.StatProperty.string_params)
}
inline void StatProperty::set_string_params(int index, const char* value, size_t size) {
  string_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dse.StatProperty.string_params)
}
inline ::std::string* StatProperty::add_string_params() {
  // @@protoc_insertion_point(field_add_mutable:dse.StatProperty.string_params)
  return string_params_.Add();
}
inline void StatProperty::add_string_params(const ::std::string& value) {
  string_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dse.StatProperty.string_params)
}
#if LANG_CXX11
inline void StatProperty::add_string_params(::std::string&& value) {
  string_params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dse.StatProperty.string_params)
}
#endif
inline void StatProperty::add_string_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dse.StatProperty.string_params)
}
inline void StatProperty::add_string_params(const char* value, size_t size) {
  string_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dse.StatProperty.string_params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StatProperty::string_params() const {
  // @@protoc_insertion_point(field_list:dse.StatProperty.string_params)
  return string_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StatProperty::mutable_string_params() {
  // @@protoc_insertion_point(field_mutable_list:dse.StatProperty.string_params)
  return &string_params_;
}

// repeated int32 int_params = 5;
inline int StatProperty::int_params_size() const {
  return int_params_.size();
}
inline void StatProperty::clear_int_params() {
  int_params_.Clear();
}
inline ::google::protobuf::int32 StatProperty::int_params(int index) const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.int_params)
  return int_params_.Get(index);
}
inline void StatProperty::set_int_params(int index, ::google::protobuf::int32 value) {
  int_params_.Set(index, value);
  // @@protoc_insertion_point(field_set:dse.StatProperty.int_params)
}
inline void StatProperty::add_int_params(::google::protobuf::int32 value) {
  int_params_.Add(value);
  // @@protoc_insertion_point(field_add:dse.StatProperty.int_params)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StatProperty::int_params() const {
  // @@protoc_insertion_point(field_list:dse.StatProperty.int_params)
  return int_params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StatProperty::mutable_int_params() {
  // @@protoc_insertion_point(field_mutable_list:dse.StatProperty.int_params)
  return &int_params_;
}

// repeated float float_params = 6;
inline int StatProperty::float_params_size() const {
  return float_params_.size();
}
inline void StatProperty::clear_float_params() {
  float_params_.Clear();
}
inline float StatProperty::float_params(int index) const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.float_params)
  return float_params_.Get(index);
}
inline void StatProperty::set_float_params(int index, float value) {
  float_params_.Set(index, value);
  // @@protoc_insertion_point(field_set:dse.StatProperty.float_params)
}
inline void StatProperty::add_float_params(float value) {
  float_params_.Add(value);
  // @@protoc_insertion_point(field_add:dse.StatProperty.float_params)
}
inline const ::google::protobuf::RepeatedField< float >&
StatProperty::float_params() const {
  // @@protoc_insertion_point(field_list:dse.StatProperty.float_params)
  return float_params_;
}
inline ::google::protobuf::RepeatedField< float >*
StatProperty::mutable_float_params() {
  // @@protoc_insertion_point(field_mutable_list:dse.StatProperty.float_params)
  return &float_params_;
}

// repeated bool bool_params = 7;
inline int StatProperty::bool_params_size() const {
  return bool_params_.size();
}
inline void StatProperty::clear_bool_params() {
  bool_params_.Clear();
}
inline bool StatProperty::bool_params(int index) const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.bool_params)
  return bool_params_.Get(index);
}
inline void StatProperty::set_bool_params(int index, bool value) {
  bool_params_.Set(index, value);
  // @@protoc_insertion_point(field_set:dse.StatProperty.bool_params)
}
inline void StatProperty::add_bool_params(bool value) {
  bool_params_.Add(value);
  // @@protoc_insertion_point(field_add:dse.StatProperty.bool_params)
}
inline const ::google::protobuf::RepeatedField< bool >&
StatProperty::bool_params() const {
  // @@protoc_insertion_point(field_list:dse.StatProperty.bool_params)
  return bool_params_;
}
inline ::google::protobuf::RepeatedField< bool >*
StatProperty::mutable_bool_params() {
  // @@protoc_insertion_point(field_mutable_list:dse.StatProperty.bool_params)
  return &bool_params_;
}

// repeated int32 surface_boosts = 8;
inline int StatProperty::surface_boosts_size() const {
  return surface_boosts_.size();
}
inline void StatProperty::clear_surface_boosts() {
  surface_boosts_.Clear();
}
inline ::google::protobuf::int32 StatProperty::surface_boosts(int index) const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.surface_boosts)
  return surface_boosts_.Get(index);
}
inline void StatProperty::set_surface_boosts(int index, ::google::protobuf::int32 value) {
  surface_boosts_.Set(index, value);
  // @@protoc_insertion_point(field_set:dse.StatProperty.surface_boosts)
}
inline void StatProperty::add_surface_boosts(::google::protobuf::int32 value) {
  surface_boosts_.Add(value);
  // @@protoc_insertion_point(field_add:dse.StatProperty.surface_boosts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StatProperty::surface_boosts() const {
  // @@protoc_insertion_point(field_list:dse.StatProperty.surface_boosts)
  return surface_boosts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StatProperty::mutable_surface_boosts() {
  // @@protoc_insertion_point(field_mutable_list:dse.StatProperty.surface_boosts)
  return &surface_boosts_;
}

// string name = 9;
inline void StatProperty::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StatProperty::name() const {
  // @@protoc_insertion_point(field_get:dse.StatProperty.name)
  return name_.Get();
}
inline void StatProperty::set_name(const ::std::string& value) {
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.StatProperty.name)
}
#if LANG_CXX11
inline void StatProperty::set_name(::std::string&& value) {
  
  name_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.StatProperty.name)
}
#endif
inline void StatProperty::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.StatProperty.name)
}
inline void StatProperty::set_name(const char* value,
    size_t size) {
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.StatProperty.name)
}
inline ::std::string* StatProperty::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dse.StatProperty.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StatProperty::release_name() {
  // @@protoc_insertion_point(field_release:dse.StatProperty.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StatProperty::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.StatProperty.name)
}
inline ::std::string* StatProperty::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.StatProperty.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StatProperty::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.StatProperty.name)
}

// -------------------------------------------------------------------

// StatPropertyList

// string name = 1;
inline void StatPropertyList::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StatPropertyList::name() const {
  // @@protoc_insertion_point(field_get:dse.StatPropertyList.name)
  return name_.Get();
}
inline void StatPropertyList::set_name(const ::std::string& value) {
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.StatPropertyList.name)
}
#if LANG_CXX11
inline void StatPropertyList::set_name(::std::string&& value) {
  
  name_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.StatPropertyList.name)
}
#endif
inline void StatPropertyList::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.StatPropertyList.name)
}
inline void StatPropertyList::set_name(const char* value,
    size_t size) {
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.StatPropertyList.name)
}
inline ::std::string* StatPropertyList::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dse.StatPropertyList.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StatPropertyList::release_name() {
  // @@protoc_insertion_point(field_release:dse.StatPropertyList.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StatPropertyList::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.StatPropertyList.name)
}
inline ::std::string* StatPropertyList::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.StatPropertyList.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StatPropertyList::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.StatPropertyList.name)
}

// repeated .dse.StatProperty properties = 2;
inline int StatPropertyList::properties_size() const {
  return properties_.size();
}
inline void StatPropertyList::clear_properties() {
  properties_.Clear();
}
inline ::dse::StatProperty* StatPropertyList::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:dse.StatPropertyList.properties)
  return properties_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dse::StatProperty >*
StatPropertyList::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:dse.StatPropertyList.properties)
  return &properties_;
}
inline const ::dse::StatProperty& StatPropertyList::properties(int index) const {
  // @@protoc_insertion_point(field_get:dse.StatPropertyList.properties)
  return properties_.Get(index);
}
inline ::dse::StatProperty* StatPropertyList::add_properties() {
  // @@protoc_insertion_point(field_add:dse.StatPropertyList.properties)
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dse::StatProperty >&
StatPropertyList::properties() const {
  // @@protoc_insertion_point(field_list:dse.StatPropertyList.properties)
  return properties_;
}

// -------------------------------------------------------------------

// StatIndexedProperty

// int32 intval = 1;
inline void StatIndexedProperty::clear_intval() {
  intval_ = 0;
}
inline ::google::protobuf::int32 StatIndexedProperty::intval() const {
  // @@protoc_insertion_point(field_get:dse.StatIndexedProperty.intval)
  return intval_;
}
inline void StatIndexedProperty::set_intval(::google::protobuf::int32 value) {
  
  intval_ = value;
  // @@protoc_insertion_point(field_set:dse.StatIndexedProperty.intval)
}

// string stringval = 2;
inline void StatIndexedProperty::clear_stringval() {
  stringval_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StatIndexedProperty::stringval() const {
  // @@protoc_insertion_point(field_get:dse.StatIndexedProperty.stringval)
  return stringval_.Get();
}
inline void StatIndexedProperty::set_stringval(const ::std::string& value) {
  
  stringval_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.StatIndexedProperty.stringval)
}
#if LANG_CXX11
inline void StatIndexedProperty::set_stringval(::std::string&& value) {
  
  stringval_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.StatIndexedProperty.stringval)
}
#endif
inline void StatIndexedProperty::set_stringval(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stringval_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.StatIndexedProperty.stringval)
}
inline void StatIndexedProperty::set_stringval(const char* value,
    size_t size) {
  
  stringval_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.StatIndexedProperty.stringval)
}
inline ::std::string* StatIndexedProperty::mutable_stringval() {
  
  // @@protoc_insertion_point(field_mutable:dse.StatIndexedProperty.stringval)
  return stringval_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StatIndexedProperty::release_stringval() {
  // @@protoc_insertion_point(field_release:dse.StatIndexedProperty.stringval)
  
  return stringval_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void StatIndexedProperty::set_allocated_stringval(::std::string* stringval) {
  if (stringval != NULL) {
    
  } else {
    
  }
  stringval_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringval,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.StatIndexedProperty.stringval)
}
inline ::std::string* StatIndexedProperty::unsafe_arena_release_stringval() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.StatIndexedProperty.stringval)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return stringval_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StatIndexedProperty::unsafe_arena_set_allocated_stringval(
    ::std::string* stringval) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (stringval != NULL) {
    
  } else {
    
  }
  stringval_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      stringval, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.StatIndexedProperty.stringval)
}

// -------------------------------------------------------------------

// MsgS2CSyncStat

// string name = 1;
inline void MsgS2CSyncStat::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& MsgS2CSyncStat::name() const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.name)
  return name_.Get();
}
inline void MsgS2CSyncStat::set_name(const ::std::string& value) {
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.MsgS2CSyncStat.name)
}
#if LANG_CXX11
inline void MsgS2CSyncStat::set_name(::std::string&& value) {
  
  name_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.MsgS2CSyncStat.name)
}
#endif
inline void MsgS2CSyncStat::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.MsgS2CSyncStat.name)
}
inline void MsgS2CSyncStat::set_name(const char* value,
    size_t size) {
  
  name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.MsgS2CSyncStat.name)
}
inline ::std::string* MsgS2CSyncStat::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CSyncStat.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MsgS2CSyncStat::release_name() {
  // @@protoc_insertion_point(field_release:dse.MsgS2CSyncStat.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void MsgS2CSyncStat::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.MsgS2CSyncStat.name)
}
inline ::std::string* MsgS2CSyncStat::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MsgS2CSyncStat.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void MsgS2CSyncStat::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MsgS2CSyncStat.name)
}

// sint32 level = 2;
inline void MsgS2CSyncStat::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 MsgS2CSyncStat::level() const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.level)
  return level_;
}
inline void MsgS2CSyncStat::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:dse.MsgS2CSyncStat.level)
}

// int32 modifier_list = 3;
inline void MsgS2CSyncStat::clear_modifier_list() {
  modifier_list_ = 0;
}
inline ::google::protobuf::int32 MsgS2CSyncStat::modifier_list() const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.modifier_list)
  return modifier_list_;
}
inline void MsgS2CSyncStat::set_modifier_list(::google::protobuf::int32 value) {
  
  modifier_list_ = value;
  // @@protoc_insertion_point(field_set:dse.MsgS2CSyncStat.modifier_list)
}

// repeated .dse.StatIndexedProperty indexed_properties = 4;
inline int MsgS2CSyncStat::indexed_properties_size() const {
  return indexed_properties_.size();
}
inline void MsgS2CSyncStat::clear_indexed_properties() {
  indexed_properties_.Clear();
}
inline ::dse::StatIndexedProperty* MsgS2CSyncStat::mutable_indexed_properties(int index) {
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CSyncStat.indexed_properties)
  return indexed_properties_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dse::StatIndexedProperty >*
MsgS2CSyncStat::mutable_indexed_properties() {
  // @@protoc_insertion_point(field_mutable_list:dse.MsgS2CSyncStat.indexed_properties)
  return &indexed_properties_;
}
inline const ::dse::StatIndexedProperty& MsgS2CSyncStat::indexed_properties(int index) const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.indexed_properties)
  return indexed_properties_.Get(index);
}
inline ::dse::StatIndexedProperty* MsgS2CSyncStat::add_indexed_properties() {
  // @@protoc_insertion_point(field_add:dse.MsgS2CSyncStat.indexed_properties)
  return indexed_properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dse::StatIndexedProperty >&
MsgS2CSyncStat::indexed_properties() const {
  // @@protoc_insertion_point(field_list:dse.MsgS2CSyncStat.indexed_properties)
  return indexed_properties_;
}

// string ai_flags = 5;
inline void MsgS2CSyncStat::clear_ai_flags() {
  ai_flags_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& MsgS2CSyncStat::ai_flags() const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.ai_flags)
  return ai_flags_.Get();
}
inline void MsgS2CSyncStat::set_ai_flags(const ::std::string& value) {
  
  ai_flags_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.MsgS2CSyncStat.ai_flags)
}
#if LANG_CXX11
inline void MsgS2CSyncStat::set_ai_flags(::std::string&& value) {
  
  ai_flags_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.MsgS2CSyncStat.ai_flags)
}
#endif
inline void MsgS2CSyncStat::set_ai_flags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ai_flags_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.MsgS2CSyncStat.ai_flags)
}
inline void MsgS2CSyncStat::set_ai_flags(const char* value,
    size_t size) {
  
  ai_flags_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.MsgS2CSyncStat.ai_flags)
}
inline ::std::string* MsgS2CSyncStat::mutable_ai_flags() {
  
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CSyncStat.ai_flags)
  return ai_flags_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MsgS2CSyncStat::release_ai_flags() {
  // @@protoc_insertion_point(field_release:dse.MsgS2CSyncStat.ai_flags)
  
  return ai_flags_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void MsgS2CSyncStat::set_allocated_ai_flags(::std::string* ai_flags) {
  if (ai_flags != NULL) {
    
  } else {
    
  }
  ai_flags_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ai_flags,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.MsgS2CSyncStat.ai_flags)
}
inline ::std::string* MsgS2CSyncStat::unsafe_arena_release_ai_flags() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MsgS2CSyncStat.ai_flags)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return ai_flags_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void MsgS2CSyncStat::unsafe_arena_set_allocated_ai_flags(
    ::std::string* ai_flags) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ai_flags != NULL) {
    
  } else {
    
  }
  ai_flags_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ai_flags, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MsgS2CSyncStat.ai_flags)
}

// repeated .dse.StatRequirement requirements = 6;
inline int MsgS2CSyncStat::requirements_size() const {
  return requirements_.size();
}
inline void MsgS2CSyncStat::clear_requirements() {
  requirements_.Clear();
}
inline ::dse::StatRequirement* MsgS2CSyncStat::mutable_requirements(int index) {
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CSyncStat.requirements)
  return requirements_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement >*
MsgS2CSyncStat::mutable_requirements() {
  // @@protoc_insertion_point(field_mutable_list:dse.MsgS2CSyncStat.requirements)
  return &requirements_;
}
inline const ::dse::StatRequirement& MsgS2CSyncStat::requirements(int index) const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.requirements)
  return requirements_.Get(index);
}
inline ::dse::StatRequirement* MsgS2CSyncStat::add_requirements() {
  // @@protoc_insertion_point(field_add:dse.MsgS2CSyncStat.requirements)
  return requirements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement >&
MsgS2CSyncStat::requirements() const {
  // @@protoc_insertion_point(field_list:dse.MsgS2CSyncStat.requirements)
  return requirements_;
}

// repeated .dse.StatRequirement memorization_requirements = 7;
inline int MsgS2CSyncStat::memorization_requirements_size() const {
  return memorization_requirements_.size();
}
inline void MsgS2CSyncStat::clear_memorization_requirements() {
  memorization_requirements_.Clear();
}
inline ::dse::StatRequirement* MsgS2CSyncStat::mutable_memorization_requirements(int index) {
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CSyncStat.memorization_requirements)
  return memorization_requirements_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement >*
MsgS2CSyncStat::mutable_memorization_requirements() {
  // @@protoc_insertion_point(field_mutable_list:dse.MsgS2CSyncStat.memorization_requirements)
  return &memorization_requirements_;
}
inline const ::dse::StatRequirement& MsgS2CSyncStat::memorization_requirements(int index) const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.memorization_requirements)
  return memorization_requirements_.Get(index);
}
inline ::dse::StatRequirement* MsgS2CSyncStat::add_memorization_requirements() {
  // @@protoc_insertion_point(field_add:dse.MsgS2CSyncStat.memorization_requirements)
  return memorization_requirements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dse::StatRequirement >&
MsgS2CSyncStat::memorization_requirements() const {
  // @@protoc_insertion_point(field_list:dse.MsgS2CSyncStat.memorization_requirements)
  return memorization_requirements_;
}

// repeated string combo_categories = 8;
inline int MsgS2CSyncStat::combo_categories_size() const {
  return combo_categories_.size();
}
inline void MsgS2CSyncStat::clear_combo_categories() {
  combo_categories_.Clear();
}
inline const ::std::string& MsgS2CSyncStat::combo_categories(int index) const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.combo_categories)
  return combo_categories_.Get(index);
}
inline ::std::string* MsgS2CSyncStat::mutable_combo_categories(int index) {
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CSyncStat.combo_categories)
  return combo_categories_.Mutable(index);
}
inline void MsgS2CSyncStat::set_combo_categories(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dse.MsgS2CSyncStat.combo_categories)
  combo_categories_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgS2CSyncStat::set_combo_categories(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:dse.MsgS2CSyncStat.combo_categories)
  combo_categories_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgS2CSyncStat::set_combo_categories(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  combo_categories_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dse.MsgS2CSyncStat.combo_categories)
}
inline void MsgS2CSyncStat::set_combo_categories(int index, const char* value, size_t size) {
  combo_categories_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dse.MsgS2CSyncStat.combo_categories)
}
inline ::std::string* MsgS2CSyncStat::add_combo_categories() {
  // @@protoc_insertion_point(field_add_mutable:dse.MsgS2CSyncStat.combo_categories)
  return combo_categories_.Add();
}
inline void MsgS2CSyncStat::add_combo_categories(const ::std::string& value) {
  combo_categories_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dse.MsgS2CSyncStat.combo_categories)
}
#if LANG_CXX11
inline void MsgS2CSyncStat::add_combo_categories(::std::string&& value) {
  combo_categories_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dse.MsgS2CSyncStat.combo_categories)
}
#endif
inline void MsgS2CSyncStat::add_combo_categories(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  combo_categories_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dse.MsgS2CSyncStat.combo_categories)
}
inline void MsgS2CSyncStat::add_combo_categories(const char* value, size_t size) {
  combo_categories_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dse.MsgS2CSyncStat.combo_categories)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgS2CSyncStat::combo_categories() const {
  // @@protoc_insertion_point(field_list:dse.MsgS2CSyncStat.combo_categories)
  return combo_categories_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgS2CSyncStat::mutable_combo_categories() {
  // @@protoc_insertion_point(field_mutable_list:dse.MsgS2CSyncStat.combo_categories)
  return &combo_categories_;
}

// repeated .dse.StatPropertyList property_lists = 9;
inline int MsgS2CSyncStat::property_lists_size() const {
  return property_lists_.size();
}
inline void MsgS2CSyncStat::clear_property_lists() {
  property_lists_.Clear();
}
inline ::dse::StatPropertyList* MsgS2CSyncStat::mutable_property_lists(int index) {
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CSyncStat.property_lists)
  return property_lists_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dse::StatPropertyList >*
MsgS2CSyncStat::mutable_property_lists() {
  // @@protoc_insertion_point(field_mutable_list:dse.MsgS2CSyncStat.property_lists)
  return &property_lists_;
}
inline const ::dse::StatPropertyList& MsgS2CSyncStat::property_lists(int index) const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CSyncStat.property_lists)
  return property_lists_.Get(index);
}
inline ::dse::StatPropertyList* MsgS2CSyncStat::add_property_lists() {
  // @@protoc_insertion_point(field_add:dse.MsgS2CSyncStat.property_lists)
  return property_lists_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dse::StatPropertyList >&
MsgS2CSyncStat::property_lists() const {
  // @@protoc_insertion_point(field_list:dse.MsgS2CSyncStat.property_lists)
  return property_lists_;
}

// -------------------------------------------------------------------

// MsgS2CKick

// string message = 1;
inline void MsgS2CKick::clear_message() {
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& MsgS2CKick::message() const {
  // @@protoc_insertion_point(field_get:dse.MsgS2CKick.message)
  return message_.Get();
}
inline void MsgS2CKick::set_message(const ::std::string& value) {
  
  message_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:dse.MsgS2CKick.message)
}
#if LANG_CXX11
inline void MsgS2CKick::set_message(::std::string&& value) {
  
  message_.SetLite(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:dse.MsgS2CKick.message)
}
#endif
inline void MsgS2CKick::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:dse.MsgS2CKick.message)
}
inline void MsgS2CKick::set_message(const char* value,
    size_t size) {
  
  message_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:dse.MsgS2CKick.message)
}
inline ::std::string* MsgS2CKick::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:dse.MsgS2CKick.message)
  return message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MsgS2CKick::release_message() {
  // @@protoc_insertion_point(field_release:dse.MsgS2CKick.message)
  
  return message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void MsgS2CKick::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:dse.MsgS2CKick.message)
}
inline ::std::string* MsgS2CKick::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MsgS2CKick.message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void MsgS2CKick::unsafe_arena_set_allocated_message(
    ::std::string* message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (message != NULL) {
    
  } else {
    
  }
  message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MsgS2CKick.message)
}

// -------------------------------------------------------------------

// MessageWrapper

// .dse.MsgPostLuaMessage post_lua = 1;
inline bool MessageWrapper::has_post_lua() const {
  return msg_case() == kPostLua;
}
inline void MessageWrapper::set_has_post_lua() {
  _oneof_case_[0] = kPostLua;
}
inline void MessageWrapper::clear_post_lua() {
  if (has_post_lua()) {
    if (GetArenaNoVirtual() == NULL) {
      delete msg_.post_lua_;
    }
    clear_has_msg();
  }
}
inline const ::dse::MsgPostLuaMessage& MessageWrapper::_internal_post_lua() const {
  return *msg_.post_lua_;
}
inline ::dse::MsgPostLuaMessage* MessageWrapper::release_post_lua() {
  // @@protoc_insertion_point(field_release:dse.MessageWrapper.post_lua)
  if (has_post_lua()) {
    clear_has_msg();
      ::dse::MsgPostLuaMessage* temp = msg_.post_lua_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.post_lua_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::dse::MsgPostLuaMessage& MessageWrapper::post_lua() const {
  // @@protoc_insertion_point(field_get:dse.MessageWrapper.post_lua)
  return has_post_lua()
      ? *msg_.post_lua_
      : *reinterpret_cast< ::dse::MsgPostLuaMessage*>(&::dse::_MsgPostLuaMessage_default_instance_);
}
inline ::dse::MsgPostLuaMessage* MessageWrapper::unsafe_arena_release_post_lua() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MessageWrapper.post_lua)
  if (has_post_lua()) {
    clear_has_msg();
    ::dse::MsgPostLuaMessage* temp = msg_.post_lua_;
    msg_.post_lua_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MessageWrapper::unsafe_arena_set_allocated_post_lua(::dse::MsgPostLuaMessage* post_lua) {
  clear_msg();
  if (post_lua) {
    set_has_post_lua();
    msg_.post_lua_ = post_lua;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MessageWrapper.post_lua)
}
inline ::dse::MsgPostLuaMessage* MessageWrapper::mutable_post_lua() {
  if (!has_post_lua()) {
    clear_msg();
    set_has_post_lua();
    msg_.post_lua_ = CreateMaybeMessage< ::dse::MsgPostLuaMessage >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:dse.MessageWrapper.post_lua)
  return msg_.post_lua_;
}

// .dse.MsgS2CResetLuaMessage s2c_reset_lua = 2;
inline bool MessageWrapper::has_s2c_reset_lua() const {
  return msg_case() == kS2CResetLua;
}
inline void MessageWrapper::set_has_s2c_reset_lua() {
  _oneof_case_[0] = kS2CResetLua;
}
inline void MessageWrapper::clear_s2c_reset_lua() {
  if (has_s2c_reset_lua()) {
    if (GetArenaNoVirtual() == NULL) {
      delete msg_.s2c_reset_lua_;
    }
    clear_has_msg();
  }
}
inline const ::dse::MsgS2CResetLuaMessage& MessageWrapper::_internal_s2c_reset_lua() const {
  return *msg_.s2c_reset_lua_;
}
inline ::dse::MsgS2CResetLuaMessage* MessageWrapper::release_s2c_reset_lua() {
  // @@protoc_insertion_point(field_release:dse.MessageWrapper.s2c_reset_lua)
  if (has_s2c_reset_lua()) {
    clear_has_msg();
      ::dse::MsgS2CResetLuaMessage* temp = msg_.s2c_reset_lua_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.s2c_reset_lua_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::dse::MsgS2CResetLuaMessage& MessageWrapper::s2c_reset_lua() const {
  // @@protoc_insertion_point(field_get:dse.MessageWrapper.s2c_reset_lua)
  return has_s2c_reset_lua()
      ? *msg_.s2c_reset_lua_
      : *reinterpret_cast< ::dse::MsgS2CResetLuaMessage*>(&::dse::_MsgS2CResetLuaMessage_default_instance_);
}
inline ::dse::MsgS2CResetLuaMessage* MessageWrapper::unsafe_arena_release_s2c_reset_lua() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MessageWrapper.s2c_reset_lua)
  if (has_s2c_reset_lua()) {
    clear_has_msg();
    ::dse::MsgS2CResetLuaMessage* temp = msg_.s2c_reset_lua_;
    msg_.s2c_reset_lua_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MessageWrapper::unsafe_arena_set_allocated_s2c_reset_lua(::dse::MsgS2CResetLuaMessage* s2c_reset_lua) {
  clear_msg();
  if (s2c_reset_lua) {
    set_has_s2c_reset_lua();
    msg_.s2c_reset_lua_ = s2c_reset_lua;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MessageWrapper.s2c_reset_lua)
}
inline ::dse::MsgS2CResetLuaMessage* MessageWrapper::mutable_s2c_reset_lua() {
  if (!has_s2c_reset_lua()) {
    clear_msg();
    set_has_s2c_reset_lua();
    msg_.s2c_reset_lua_ = CreateMaybeMessage< ::dse::MsgS2CResetLuaMessage >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:dse.MessageWrapper.s2c_reset_lua)
  return msg_.s2c_reset_lua_;
}

// .dse.MsgS2CSyncNetworkFixedStrings s2c_sync_strings = 3;
inline bool MessageWrapper::has_s2c_sync_strings() const {
  return msg_case() == kS2CSyncStrings;
}
inline void MessageWrapper::set_has_s2c_sync_strings() {
  _oneof_case_[0] = kS2CSyncStrings;
}
inline void MessageWrapper::clear_s2c_sync_strings() {
  if (has_s2c_sync_strings()) {
    if (GetArenaNoVirtual() == NULL) {
      delete msg_.s2c_sync_strings_;
    }
    clear_has_msg();
  }
}
inline const ::dse::MsgS2CSyncNetworkFixedStrings& MessageWrapper::_internal_s2c_sync_strings() const {
  return *msg_.s2c_sync_strings_;
}
inline ::dse::MsgS2CSyncNetworkFixedStrings* MessageWrapper::release_s2c_sync_strings() {
  // @@protoc_insertion_point(field_release:dse.MessageWrapper.s2c_sync_strings)
  if (has_s2c_sync_strings()) {
    clear_has_msg();
      ::dse::MsgS2CSyncNetworkFixedStrings* temp = msg_.s2c_sync_strings_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.s2c_sync_strings_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::dse::MsgS2CSyncNetworkFixedStrings& MessageWrapper::s2c_sync_strings() const {
  // @@protoc_insertion_point(field_get:dse.MessageWrapper.s2c_sync_strings)
  return has_s2c_sync_strings()
      ? *msg_.s2c_sync_strings_
      : *reinterpret_cast< ::dse::MsgS2CSyncNetworkFixedStrings*>(&::dse::_MsgS2CSyncNetworkFixedStrings_default_instance_);
}
inline ::dse::MsgS2CSyncNetworkFixedStrings* MessageWrapper::unsafe_arena_release_s2c_sync_strings() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MessageWrapper.s2c_sync_strings)
  if (has_s2c_sync_strings()) {
    clear_has_msg();
    ::dse::MsgS2CSyncNetworkFixedStrings* temp = msg_.s2c_sync_strings_;
    msg_.s2c_sync_strings_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MessageWrapper::unsafe_arena_set_allocated_s2c_sync_strings(::dse::MsgS2CSyncNetworkFixedStrings* s2c_sync_strings) {
  clear_msg();
  if (s2c_sync_strings) {
    set_has_s2c_sync_strings();
    msg_.s2c_sync_strings_ = s2c_sync_strings;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MessageWrapper.s2c_sync_strings)
}
inline ::dse::MsgS2CSyncNetworkFixedStrings* MessageWrapper::mutable_s2c_sync_strings() {
  if (!has_s2c_sync_strings()) {
    clear_msg();
    set_has_s2c_sync_strings();
    msg_.s2c_sync_strings_ = CreateMaybeMessage< ::dse::MsgS2CSyncNetworkFixedStrings >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:dse.MessageWrapper.s2c_sync_strings)
  return msg_.s2c_sync_strings_;
}

// .dse.MsgC2SRequestNetworkFixedStrings c2s_request_strings = 4;
inline bool MessageWrapper::has_c2s_request_strings() const {
  return msg_case() == kC2SRequestStrings;
}
inline void MessageWrapper::set_has_c2s_request_strings() {
  _oneof_case_[0] = kC2SRequestStrings;
}
inline void MessageWrapper::clear_c2s_request_strings() {
  if (has_c2s_request_strings()) {
    if (GetArenaNoVirtual() == NULL) {
      delete msg_.c2s_request_strings_;
    }
    clear_has_msg();
  }
}
inline const ::dse::MsgC2SRequestNetworkFixedStrings& MessageWrapper::_internal_c2s_request_strings() const {
  return *msg_.c2s_request_strings_;
}
inline ::dse::MsgC2SRequestNetworkFixedStrings* MessageWrapper::release_c2s_request_strings() {
  // @@protoc_insertion_point(field_release:dse.MessageWrapper.c2s_request_strings)
  if (has_c2s_request_strings()) {
    clear_has_msg();
      ::dse::MsgC2SRequestNetworkFixedStrings* temp = msg_.c2s_request_strings_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.c2s_request_strings_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::dse::MsgC2SRequestNetworkFixedStrings& MessageWrapper::c2s_request_strings() const {
  // @@protoc_insertion_point(field_get:dse.MessageWrapper.c2s_request_strings)
  return has_c2s_request_strings()
      ? *msg_.c2s_request_strings_
      : *reinterpret_cast< ::dse::MsgC2SRequestNetworkFixedStrings*>(&::dse::_MsgC2SRequestNetworkFixedStrings_default_instance_);
}
inline ::dse::MsgC2SRequestNetworkFixedStrings* MessageWrapper::unsafe_arena_release_c2s_request_strings() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MessageWrapper.c2s_request_strings)
  if (has_c2s_request_strings()) {
    clear_has_msg();
    ::dse::MsgC2SRequestNetworkFixedStrings* temp = msg_.c2s_request_strings_;
    msg_.c2s_request_strings_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MessageWrapper::unsafe_arena_set_allocated_c2s_request_strings(::dse::MsgC2SRequestNetworkFixedStrings* c2s_request_strings) {
  clear_msg();
  if (c2s_request_strings) {
    set_has_c2s_request_strings();
    msg_.c2s_request_strings_ = c2s_request_strings;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MessageWrapper.c2s_request_strings)
}
inline ::dse::MsgC2SRequestNetworkFixedStrings* MessageWrapper::mutable_c2s_request_strings() {
  if (!has_c2s_request_strings()) {
    clear_msg();
    set_has_c2s_request_strings();
    msg_.c2s_request_strings_ = CreateMaybeMessage< ::dse::MsgC2SRequestNetworkFixedStrings >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:dse.MessageWrapper.c2s_request_strings)
  return msg_.c2s_request_strings_;
}

// .dse.MsgC2SExtenderHello c2s_extender_hello = 5;
inline bool MessageWrapper::has_c2s_extender_hello() const {
  return msg_case() == kC2SExtenderHello;
}
inline void MessageWrapper::set_has_c2s_extender_hello() {
  _oneof_case_[0] = kC2SExtenderHello;
}
inline void MessageWrapper::clear_c2s_extender_hello() {
  if (has_c2s_extender_hello()) {
    if (GetArenaNoVirtual() == NULL) {
      delete msg_.c2s_extender_hello_;
    }
    clear_has_msg();
  }
}
inline const ::dse::MsgC2SExtenderHello& MessageWrapper::_internal_c2s_extender_hello() const {
  return *msg_.c2s_extender_hello_;
}
inline ::dse::MsgC2SExtenderHello* MessageWrapper::release_c2s_extender_hello() {
  // @@protoc_insertion_point(field_release:dse.MessageWrapper.c2s_extender_hello)
  if (has_c2s_extender_hello()) {
    clear_has_msg();
      ::dse::MsgC2SExtenderHello* temp = msg_.c2s_extender_hello_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.c2s_extender_hello_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::dse::MsgC2SExtenderHello& MessageWrapper::c2s_extender_hello() const {
  // @@protoc_insertion_point(field_get:dse.MessageWrapper.c2s_extender_hello)
  return has_c2s_extender_hello()
      ? *msg_.c2s_extender_hello_
      : *reinterpret_cast< ::dse::MsgC2SExtenderHello*>(&::dse::_MsgC2SExtenderHello_default_instance_);
}
inline ::dse::MsgC2SExtenderHello* MessageWrapper::unsafe_arena_release_c2s_extender_hello() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MessageWrapper.c2s_extender_hello)
  if (has_c2s_extender_hello()) {
    clear_has_msg();
    ::dse::MsgC2SExtenderHello* temp = msg_.c2s_extender_hello_;
    msg_.c2s_extender_hello_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MessageWrapper::unsafe_arena_set_allocated_c2s_extender_hello(::dse::MsgC2SExtenderHello* c2s_extender_hello) {
  clear_msg();
  if (c2s_extender_hello) {
    set_has_c2s_extender_hello();
    msg_.c2s_extender_hello_ = c2s_extender_hello;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MessageWrapper.c2s_extender_hello)
}
inline ::dse::MsgC2SExtenderHello* MessageWrapper::mutable_c2s_extender_hello() {
  if (!has_c2s_extender_hello()) {
    clear_msg();
    set_has_c2s_extender_hello();
    msg_.c2s_extender_hello_ = CreateMaybeMessage< ::dse::MsgC2SExtenderHello >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:dse.MessageWrapper.c2s_extender_hello)
  return msg_.c2s_extender_hello_;
}

// .dse.MsgS2CSyncStat s2c_sync_stat = 6;
inline bool MessageWrapper::has_s2c_sync_stat() const {
  return msg_case() == kS2CSyncStat;
}
inline void MessageWrapper::set_has_s2c_sync_stat() {
  _oneof_case_[0] = kS2CSyncStat;
}
inline void MessageWrapper::clear_s2c_sync_stat() {
  if (has_s2c_sync_stat()) {
    if (GetArenaNoVirtual() == NULL) {
      delete msg_.s2c_sync_stat_;
    }
    clear_has_msg();
  }
}
inline const ::dse::MsgS2CSyncStat& MessageWrapper::_internal_s2c_sync_stat() const {
  return *msg_.s2c_sync_stat_;
}
inline ::dse::MsgS2CSyncStat* MessageWrapper::release_s2c_sync_stat() {
  // @@protoc_insertion_point(field_release:dse.MessageWrapper.s2c_sync_stat)
  if (has_s2c_sync_stat()) {
    clear_has_msg();
      ::dse::MsgS2CSyncStat* temp = msg_.s2c_sync_stat_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.s2c_sync_stat_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::dse::MsgS2CSyncStat& MessageWrapper::s2c_sync_stat() const {
  // @@protoc_insertion_point(field_get:dse.MessageWrapper.s2c_sync_stat)
  return has_s2c_sync_stat()
      ? *msg_.s2c_sync_stat_
      : *reinterpret_cast< ::dse::MsgS2CSyncStat*>(&::dse::_MsgS2CSyncStat_default_instance_);
}
inline ::dse::MsgS2CSyncStat* MessageWrapper::unsafe_arena_release_s2c_sync_stat() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MessageWrapper.s2c_sync_stat)
  if (has_s2c_sync_stat()) {
    clear_has_msg();
    ::dse::MsgS2CSyncStat* temp = msg_.s2c_sync_stat_;
    msg_.s2c_sync_stat_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MessageWrapper::unsafe_arena_set_allocated_s2c_sync_stat(::dse::MsgS2CSyncStat* s2c_sync_stat) {
  clear_msg();
  if (s2c_sync_stat) {
    set_has_s2c_sync_stat();
    msg_.s2c_sync_stat_ = s2c_sync_stat;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MessageWrapper.s2c_sync_stat)
}
inline ::dse::MsgS2CSyncStat* MessageWrapper::mutable_s2c_sync_stat() {
  if (!has_s2c_sync_stat()) {
    clear_msg();
    set_has_s2c_sync_stat();
    msg_.s2c_sync_stat_ = CreateMaybeMessage< ::dse::MsgS2CSyncStat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:dse.MessageWrapper.s2c_sync_stat)
  return msg_.s2c_sync_stat_;
}

// .dse.MsgS2CKick s2c_kick = 7;
inline bool MessageWrapper::has_s2c_kick() const {
  return msg_case() == kS2CKick;
}
inline void MessageWrapper::set_has_s2c_kick() {
  _oneof_case_[0] = kS2CKick;
}
inline void MessageWrapper::clear_s2c_kick() {
  if (has_s2c_kick()) {
    if (GetArenaNoVirtual() == NULL) {
      delete msg_.s2c_kick_;
    }
    clear_has_msg();
  }
}
inline const ::dse::MsgS2CKick& MessageWrapper::_internal_s2c_kick() const {
  return *msg_.s2c_kick_;
}
inline ::dse::MsgS2CKick* MessageWrapper::release_s2c_kick() {
  // @@protoc_insertion_point(field_release:dse.MessageWrapper.s2c_kick)
  if (has_s2c_kick()) {
    clear_has_msg();
      ::dse::MsgS2CKick* temp = msg_.s2c_kick_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    msg_.s2c_kick_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::dse::MsgS2CKick& MessageWrapper::s2c_kick() const {
  // @@protoc_insertion_point(field_get:dse.MessageWrapper.s2c_kick)
  return has_s2c_kick()
      ? *msg_.s2c_kick_
      : *reinterpret_cast< ::dse::MsgS2CKick*>(&::dse::_MsgS2CKick_default_instance_);
}
inline ::dse::MsgS2CKick* MessageWrapper::unsafe_arena_release_s2c_kick() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dse.MessageWrapper.s2c_kick)
  if (has_s2c_kick()) {
    clear_has_msg();
    ::dse::MsgS2CKick* temp = msg_.s2c_kick_;
    msg_.s2c_kick_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MessageWrapper::unsafe_arena_set_allocated_s2c_kick(::dse::MsgS2CKick* s2c_kick) {
  clear_msg();
  if (s2c_kick) {
    set_has_s2c_kick();
    msg_.s2c_kick_ = s2c_kick;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.MessageWrapper.s2c_kick)
}
inline ::dse::MsgS2CKick* MessageWrapper::mutable_s2c_kick() {
  if (!has_s2c_kick()) {
    clear_msg();
    set_has_s2c_kick();
    msg_.s2c_kick_ = CreateMaybeMessage< ::dse::MsgS2CKick >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:dse.MessageWrapper.s2c_kick)
  return msg_.s2c_kick_;
}

inline bool MessageWrapper::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void MessageWrapper::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline MessageWrapper::MsgCase MessageWrapper::msg_case() const {
  return MessageWrapper::MsgCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dse

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ScriptExtensions_2eproto
