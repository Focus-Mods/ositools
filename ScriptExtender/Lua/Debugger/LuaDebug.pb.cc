// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LuaDebug.proto

#include "LuaDebug.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_LuaDebug_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkConnectResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkContextUpdated;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkDebugOutput;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkDebuggerReady;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkSourceResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgConnectRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgContinue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgEvaluate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgFetchMods;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgRequestSource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgUpdateSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgBreakpoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgModuleInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgSourceFileInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgStackFrame;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgTableKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BkBreakpointTriggered;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BkEvaluateResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BkGetVariablesResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DbgGetVariables;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DbgSetBreakpoints;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MsgChildValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MsgValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MsgVariablesRef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LuaDebug_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BkModInfoResponse;
}  // namespace protobuf_LuaDebug_2eproto
namespace dse {
namespace lua {
namespace dbg {
class MsgTableKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgTableKey>
      _instance;
} _MsgTableKey_default_instance_;
class MsgVariablesRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgVariablesRef>
      _instance;
} _MsgVariablesRef_default_instance_;
class MsgValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgValue>
      _instance;
  bool boolval_;
  ::google::protobuf::int64 intval_;
  float floatval_;
  ::google::protobuf::internal::ArenaStringPtr stringval_;
  const ::dse::lua::dbg::MsgVariablesRef* variables_;
} _MsgValue_default_instance_;
class MsgChildValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgChildValue>
      _instance;
} _MsgChildValue_default_instance_;
class MsgStackFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgStackFrame>
      _instance;
} _MsgStackFrame_default_instance_;
class DbgConnectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgConnectRequest>
      _instance;
} _DbgConnectRequest_default_instance_;
class BkConnectResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkConnectResponse>
      _instance;
} _BkConnectResponse_default_instance_;
class DbgUpdateSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgUpdateSettings>
      _instance;
} _DbgUpdateSettings_default_instance_;
class MsgBreakpointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgBreakpoint>
      _instance;
} _MsgBreakpoint_default_instance_;
class DbgSetBreakpointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgSetBreakpoints>
      _instance;
} _DbgSetBreakpoints_default_instance_;
class BkBreakpointTriggeredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkBreakpointTriggered>
      _instance;
} _BkBreakpointTriggered_default_instance_;
class DbgContinueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgContinue>
      _instance;
} _DbgContinue_default_instance_;
class DbgEvaluateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgEvaluate>
      _instance;
} _DbgEvaluate_default_instance_;
class DbgGetVariablesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgGetVariables>
      _instance;
} _DbgGetVariables_default_instance_;
class BkEvaluateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkEvaluateResponse>
      _instance;
} _BkEvaluateResponse_default_instance_;
class BkGetVariablesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkGetVariablesResponse>
      _instance;
} _BkGetVariablesResponse_default_instance_;
class DbgFetchModsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgFetchMods>
      _instance;
} _DbgFetchMods_default_instance_;
class BkContextUpdatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkContextUpdated>
      _instance;
} _BkContextUpdated_default_instance_;
class MsgModuleInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgModuleInfo>
      _instance;
} _MsgModuleInfo_default_instance_;
class MsgSourceFileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgSourceFileInfo>
      _instance;
} _MsgSourceFileInfo_default_instance_;
class BkModInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkModInfoResponse>
      _instance;
} _BkModInfoResponse_default_instance_;
class BkDebugOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkDebugOutput>
      _instance;
} _BkDebugOutput_default_instance_;
class BkResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkResult>
      _instance;
} _BkResult_default_instance_;
class BkDebuggerReadyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkDebuggerReady>
      _instance;
} _BkDebuggerReady_default_instance_;
class DbgRequestSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgRequestSource>
      _instance;
} _DbgRequestSource_default_instance_;
class BkSourceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkSourceResponse>
      _instance;
} _BkSourceResponse_default_instance_;
class DebuggerToBackendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebuggerToBackend>
      _instance;
  const ::dse::lua::dbg::DbgConnectRequest* connect_;
  const ::dse::lua::dbg::DbgUpdateSettings* updatesettings_;
  const ::dse::lua::dbg::DbgSetBreakpoints* setbreakpoints_;
  const ::dse::lua::dbg::DbgContinue* continue__;
  const ::dse::lua::dbg::DbgEvaluate* evaluate_;
  const ::dse::lua::dbg::DbgFetchMods* fetchmods_;
  const ::dse::lua::dbg::DbgRequestSource* requestsource_;
  const ::dse::lua::dbg::DbgGetVariables* getvariables_;
} _DebuggerToBackend_default_instance_;
class BackendToDebuggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackendToDebugger>
      _instance;
  const ::dse::lua::dbg::BkConnectResponse* connectresponse_;
  const ::dse::lua::dbg::BkBreakpointTriggered* breakpointtriggered_;
  const ::dse::lua::dbg::BkEvaluateResponse* evaluateresponse_;
  const ::dse::lua::dbg::BkContextUpdated* contextupdated_;
  const ::dse::lua::dbg::BkModInfoResponse* modinforesponse_;
  const ::dse::lua::dbg::BkDebugOutput* debugoutput_;
  const ::dse::lua::dbg::BkResult* results_;
  const ::dse::lua::dbg::BkDebuggerReady* debuggerready_;
  const ::dse::lua::dbg::BkSourceResponse* sourceresponse_;
  const ::dse::lua::dbg::BkGetVariablesResponse* getvariablesresponse_;
} _BackendToDebugger_default_instance_;
}  // namespace dbg
}  // namespace lua
}  // namespace dse
namespace protobuf_LuaDebug_2eproto {
static void InitDefaultsMsgTableKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_MsgTableKey_default_instance_;
    new (ptr) ::dse::lua::dbg::MsgTableKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::MsgTableKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgTableKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgTableKey}, {}};

static void InitDefaultsMsgVariablesRef() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_MsgVariablesRef_default_instance_;
    new (ptr) ::dse::lua::dbg::MsgVariablesRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::MsgVariablesRef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgVariablesRef =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgVariablesRef}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgTableKey.base,}};

static void InitDefaultsMsgValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_MsgValue_default_instance_;
    new (ptr) ::dse::lua::dbg::MsgValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::MsgValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgValue}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgVariablesRef.base,}};

static void InitDefaultsMsgChildValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_MsgChildValue_default_instance_;
    new (ptr) ::dse::lua::dbg::MsgChildValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::MsgChildValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgChildValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgChildValue}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgValue.base,}};

static void InitDefaultsMsgStackFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_MsgStackFrame_default_instance_;
    new (ptr) ::dse::lua::dbg::MsgStackFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::MsgStackFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgStackFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgStackFrame}, {}};

static void InitDefaultsDbgConnectRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DbgConnectRequest_default_instance_;
    new (ptr) ::dse::lua::dbg::DbgConnectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DbgConnectRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgConnectRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgConnectRequest}, {}};

static void InitDefaultsBkConnectResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkConnectResponse_default_instance_;
    new (ptr) ::dse::lua::dbg::BkConnectResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkConnectResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkConnectResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkConnectResponse}, {}};

static void InitDefaultsDbgUpdateSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DbgUpdateSettings_default_instance_;
    new (ptr) ::dse::lua::dbg::DbgUpdateSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DbgUpdateSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgUpdateSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgUpdateSettings}, {}};

static void InitDefaultsMsgBreakpoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_MsgBreakpoint_default_instance_;
    new (ptr) ::dse::lua::dbg::MsgBreakpoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::MsgBreakpoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgBreakpoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgBreakpoint}, {}};

static void InitDefaultsDbgSetBreakpoints() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DbgSetBreakpoints_default_instance_;
    new (ptr) ::dse::lua::dbg::DbgSetBreakpoints();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DbgSetBreakpoints::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DbgSetBreakpoints =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDbgSetBreakpoints}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgBreakpoint.base,}};

static void InitDefaultsBkBreakpointTriggered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkBreakpointTriggered_default_instance_;
    new (ptr) ::dse::lua::dbg::BkBreakpointTriggered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkBreakpointTriggered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BkBreakpointTriggered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBkBreakpointTriggered}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgStackFrame.base,}};

static void InitDefaultsDbgContinue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DbgContinue_default_instance_;
    new (ptr) ::dse::lua::dbg::DbgContinue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DbgContinue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgContinue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgContinue}, {}};

static void InitDefaultsDbgEvaluate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DbgEvaluate_default_instance_;
    new (ptr) ::dse::lua::dbg::DbgEvaluate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DbgEvaluate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgEvaluate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgEvaluate}, {}};

static void InitDefaultsDbgGetVariables() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DbgGetVariables_default_instance_;
    new (ptr) ::dse::lua::dbg::DbgGetVariables();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DbgGetVariables::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DbgGetVariables =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDbgGetVariables}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgTableKey.base,}};

static void InitDefaultsBkEvaluateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkEvaluateResponse_default_instance_;
    new (ptr) ::dse::lua::dbg::BkEvaluateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkEvaluateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BkEvaluateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBkEvaluateResponse}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgValue.base,}};

static void InitDefaultsBkGetVariablesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkGetVariablesResponse_default_instance_;
    new (ptr) ::dse::lua::dbg::BkGetVariablesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkGetVariablesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BkGetVariablesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBkGetVariablesResponse}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgChildValue.base,}};

static void InitDefaultsDbgFetchMods() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DbgFetchMods_default_instance_;
    new (ptr) ::dse::lua::dbg::DbgFetchMods();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DbgFetchMods::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgFetchMods =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgFetchMods}, {}};

static void InitDefaultsBkContextUpdated() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkContextUpdated_default_instance_;
    new (ptr) ::dse::lua::dbg::BkContextUpdated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkContextUpdated::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkContextUpdated =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkContextUpdated}, {}};

static void InitDefaultsMsgModuleInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_MsgModuleInfo_default_instance_;
    new (ptr) ::dse::lua::dbg::MsgModuleInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::MsgModuleInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgModuleInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgModuleInfo}, {}};

static void InitDefaultsMsgSourceFileInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_MsgSourceFileInfo_default_instance_;
    new (ptr) ::dse::lua::dbg::MsgSourceFileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::MsgSourceFileInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgSourceFileInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgSourceFileInfo}, {}};

static void InitDefaultsBkModInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkModInfoResponse_default_instance_;
    new (ptr) ::dse::lua::dbg::BkModInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkModInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BkModInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBkModInfoResponse}, {
      &protobuf_LuaDebug_2eproto::scc_info_MsgModuleInfo.base,
      &protobuf_LuaDebug_2eproto::scc_info_MsgSourceFileInfo.base,}};

static void InitDefaultsBkDebugOutput() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkDebugOutput_default_instance_;
    new (ptr) ::dse::lua::dbg::BkDebugOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkDebugOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkDebugOutput =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkDebugOutput}, {}};

static void InitDefaultsBkResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkResult_default_instance_;
    new (ptr) ::dse::lua::dbg::BkResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkResult}, {}};

static void InitDefaultsBkDebuggerReady() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkDebuggerReady_default_instance_;
    new (ptr) ::dse::lua::dbg::BkDebuggerReady();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkDebuggerReady::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkDebuggerReady =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkDebuggerReady}, {}};

static void InitDefaultsDbgRequestSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DbgRequestSource_default_instance_;
    new (ptr) ::dse::lua::dbg::DbgRequestSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DbgRequestSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgRequestSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgRequestSource}, {}};

static void InitDefaultsBkSourceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BkSourceResponse_default_instance_;
    new (ptr) ::dse::lua::dbg::BkSourceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BkSourceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkSourceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkSourceResponse}, {}};

static void InitDefaultsDebuggerToBackend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_DebuggerToBackend_default_instance_;
    new (ptr) ::dse::lua::dbg::DebuggerToBackend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::DebuggerToBackend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_DebuggerToBackend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsDebuggerToBackend}, {
      &protobuf_LuaDebug_2eproto::scc_info_DbgConnectRequest.base,
      &protobuf_LuaDebug_2eproto::scc_info_DbgUpdateSettings.base,
      &protobuf_LuaDebug_2eproto::scc_info_DbgSetBreakpoints.base,
      &protobuf_LuaDebug_2eproto::scc_info_DbgContinue.base,
      &protobuf_LuaDebug_2eproto::scc_info_DbgEvaluate.base,
      &protobuf_LuaDebug_2eproto::scc_info_DbgFetchMods.base,
      &protobuf_LuaDebug_2eproto::scc_info_DbgRequestSource.base,
      &protobuf_LuaDebug_2eproto::scc_info_DbgGetVariables.base,}};

static void InitDefaultsBackendToDebugger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::lua::dbg::_BackendToDebugger_default_instance_;
    new (ptr) ::dse::lua::dbg::BackendToDebugger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::lua::dbg::BackendToDebugger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<10> scc_info_BackendToDebugger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 10, InitDefaultsBackendToDebugger}, {
      &protobuf_LuaDebug_2eproto::scc_info_BkConnectResponse.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkBreakpointTriggered.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkEvaluateResponse.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkContextUpdated.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkModInfoResponse.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkDebugOutput.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkResult.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkDebuggerReady.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkSourceResponse.base,
      &protobuf_LuaDebug_2eproto::scc_info_BkGetVariablesResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgTableKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgVariablesRef.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgChildValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgStackFrame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgConnectRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkConnectResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgUpdateSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgBreakpoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgSetBreakpoints.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkBreakpointTriggered.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgContinue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgEvaluate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgGetVariables.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkEvaluateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkGetVariablesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgFetchMods.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkContextUpdated.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgModuleInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgSourceFileInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkModInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkDebugOutput.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkDebuggerReady.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgRequestSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkSourceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebuggerToBackend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BackendToDebugger.base);
}

}  // namespace protobuf_LuaDebug_2eproto
namespace dse {
namespace lua {
namespace dbg {
bool MsgTableKey_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgTableKey_Type MsgTableKey::NUMERIC;
const MsgTableKey_Type MsgTableKey::TEXT;
const MsgTableKey_Type MsgTableKey::Type_MIN;
const MsgTableKey_Type MsgTableKey::Type_MAX;
const int MsgTableKey::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool MsgChildValue_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgChildValue_Type MsgChildValue::NUMERIC;
const MsgChildValue_Type MsgChildValue::TEXT;
const MsgChildValue_Type MsgChildValue::Type_MIN;
const MsgChildValue_Type MsgChildValue::Type_MAX;
const int MsgChildValue::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool BkBreakpointTriggered_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BkBreakpointTriggered_Reason BkBreakpointTriggered::BREAKPOINT;
const BkBreakpointTriggered_Reason BkBreakpointTriggered::EXCEPTION;
const BkBreakpointTriggered_Reason BkBreakpointTriggered::PAUSE;
const BkBreakpointTriggered_Reason BkBreakpointTriggered::STEP;
const BkBreakpointTriggered_Reason BkBreakpointTriggered::Reason_MIN;
const BkBreakpointTriggered_Reason BkBreakpointTriggered::Reason_MAX;
const int BkBreakpointTriggered::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool DbgContinue_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DbgContinue_Action DbgContinue::CONTINUE;
const DbgContinue_Action DbgContinue::STEP_OVER;
const DbgContinue_Action DbgContinue::STEP_INTO;
const DbgContinue_Action DbgContinue::STEP_OUT;
const DbgContinue_Action DbgContinue::PAUSE;
const DbgContinue_Action DbgContinue::Action_MIN;
const DbgContinue_Action DbgContinue::Action_MAX;
const int DbgContinue::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool BkContextUpdated_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BkContextUpdated_Status BkContextUpdated::UNLOADED;
const BkContextUpdated_Status BkContextUpdated::LOADED;
const BkContextUpdated_Status BkContextUpdated::Status_MIN;
const BkContextUpdated_Status BkContextUpdated::Status_MAX;
const int BkContextUpdated::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool BkDebugOutput_Severity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BkDebugOutput_Severity BkDebugOutput::LEVEL_INFO;
const BkDebugOutput_Severity BkDebugOutput::LEVEL_WARNING;
const BkDebugOutput_Severity BkDebugOutput::LEVEL_ERROR;
const BkDebugOutput_Severity BkDebugOutput::LEVEL_DEBUG;
const BkDebugOutput_Severity BkDebugOutput::Severity_MIN;
const BkDebugOutput_Severity BkDebugOutput::Severity_MAX;
const int BkDebugOutput::Severity_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool StatusCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

bool DbgContext_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

bool MsgValueType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MsgTableKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTableKey::kTypeFieldNumber;
const int MsgTableKey::kIndexFieldNumber;
const int MsgTableKey::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTableKey::MsgTableKey()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_MsgTableKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.MsgTableKey)
}
MsgTableKey::MsgTableKey(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgTableKey.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.MsgTableKey)
}
MsgTableKey::MsgTableKey(const MsgTableKey& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key(),
      GetArenaNoVirtual());
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&index_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.MsgTableKey)
}

void MsgTableKey::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&index_)) + sizeof(type_));
}

MsgTableKey::~MsgTableKey() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.MsgTableKey)
  SharedDtor();
}

void MsgTableKey::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgTableKey::ArenaDtor(void* object) {
  MsgTableKey* _this = reinterpret_cast< MsgTableKey* >(object);
  (void)_this;
}
void MsgTableKey::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgTableKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgTableKey& MsgTableKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgTableKey.base);
  return *internal_default_instance();
}


void MsgTableKey::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.MsgTableKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&index_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MsgTableKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.MsgTableKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.MsgTableKey.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::dse::lua::dbg::MsgTableKey_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgTableKey.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.MsgTableKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.MsgTableKey)
  return false;
#undef DO_
}

void MsgTableKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.MsgTableKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.MsgTableKey.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int64 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->index(), output);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgTableKey.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.MsgTableKey)
}

size_t MsgTableKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.MsgTableKey)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // int64 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  // .dse.lua.dbg.MsgTableKey.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgTableKey::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgTableKey*>(&from));
}

void MsgTableKey::MergeFrom(const MsgTableKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.MsgTableKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    set_key(from.key());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MsgTableKey::CopyFrom(const MsgTableKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.MsgTableKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTableKey::IsInitialized() const {
  return true;
}

void MsgTableKey::Swap(MsgTableKey* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgTableKey* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgTableKey::UnsafeArenaSwap(MsgTableKey* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgTableKey::InternalSwap(MsgTableKey* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgTableKey::GetTypeName() const {
  return "dse.lua.dbg.MsgTableKey";
}


// ===================================================================

void MsgVariablesRef::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgVariablesRef::kVariableRefFieldNumber;
const int MsgVariablesRef::kFrameFieldNumber;
const int MsgVariablesRef::kLocalFieldNumber;
const int MsgVariablesRef::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgVariablesRef::MsgVariablesRef()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_MsgVariablesRef.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.MsgVariablesRef)
}
MsgVariablesRef::MsgVariablesRef(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  key_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgVariablesRef.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.MsgVariablesRef)
}
MsgVariablesRef::MsgVariablesRef(const MsgVariablesRef& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      key_(from.key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&variableref_, &from.variableref_,
    static_cast<size_t>(reinterpret_cast<char*>(&local_) -
    reinterpret_cast<char*>(&variableref_)) + sizeof(local_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.MsgVariablesRef)
}

void MsgVariablesRef::SharedCtor() {
  ::memset(&variableref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_) -
      reinterpret_cast<char*>(&variableref_)) + sizeof(local_));
}

MsgVariablesRef::~MsgVariablesRef() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.MsgVariablesRef)
  SharedDtor();
}

void MsgVariablesRef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MsgVariablesRef::ArenaDtor(void* object) {
  MsgVariablesRef* _this = reinterpret_cast< MsgVariablesRef* >(object);
  (void)_this;
}
void MsgVariablesRef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgVariablesRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgVariablesRef& MsgVariablesRef::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgVariablesRef.base);
  return *internal_default_instance();
}


void MsgVariablesRef::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.MsgVariablesRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  ::memset(&variableref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_) -
      reinterpret_cast<char*>(&variableref_)) + sizeof(local_));
  _internal_metadata_.Clear();
}

bool MsgVariablesRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.MsgVariablesRef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 variableRef = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &variableref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 frame = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 local = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &local_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.lua.dbg.MsgTableKey key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.MsgVariablesRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.MsgVariablesRef)
  return false;
#undef DO_
}

void MsgVariablesRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.MsgVariablesRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 variableRef = 1;
  if (this->variableref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->variableref(), output);
  }

  // int32 frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frame(), output);
  }

  // int32 local = 3;
  if (this->local() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->local(), output);
  }

  // repeated .dse.lua.dbg.MsgTableKey key = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->key(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.MsgVariablesRef)
}

size_t MsgVariablesRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.MsgVariablesRef)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.lua.dbg.MsgTableKey key = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->key_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->key(static_cast<int>(i)));
    }
  }

  // int32 variableRef = 1;
  if (this->variableref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->variableref());
  }

  // int32 frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // int32 local = 3;
  if (this->local() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->local());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgVariablesRef::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgVariablesRef*>(&from));
}

void MsgVariablesRef::MergeFrom(const MsgVariablesRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.MsgVariablesRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  if (from.variableref() != 0) {
    set_variableref(from.variableref());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.local() != 0) {
    set_local(from.local());
  }
}

void MsgVariablesRef::CopyFrom(const MsgVariablesRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.MsgVariablesRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVariablesRef::IsInitialized() const {
  return true;
}

void MsgVariablesRef::Swap(MsgVariablesRef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgVariablesRef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgVariablesRef::UnsafeArenaSwap(MsgVariablesRef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgVariablesRef::InternalSwap(MsgVariablesRef* other) {
  using std::swap;
  CastToBase(&key_)->InternalSwap(CastToBase(&other->key_));
  swap(variableref_, other->variableref_);
  swap(frame_, other->frame_);
  swap(local_, other->local_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgVariablesRef::GetTypeName() const {
  return "dse.lua.dbg.MsgVariablesRef";
}


// ===================================================================

void MsgValue::InitAsDefaultInstance() {
}
void MsgValue::set_allocated_variables(::dse::lua::dbg::MsgVariablesRef* variables) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (variables) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(variables);
    if (message_arena != submessage_arena) {
      variables = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, variables, submessage_arena);
    }
    set_has_variables();
    value_.variables_ = variables;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.MsgValue.variables)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgValue::kTypeIdFieldNumber;
const int MsgValue::kBoolvalFieldNumber;
const int MsgValue::kIntvalFieldNumber;
const int MsgValue::kFloatvalFieldNumber;
const int MsgValue::kStringvalFieldNumber;
const int MsgValue::kVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgValue::MsgValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_MsgValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.MsgValue)
}
MsgValue::MsgValue(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgValue.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.MsgValue)
}
MsgValue::MsgValue(const MsgValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_id_ = from.type_id_;
  clear_has_value();
  switch (from.value_case()) {
    case kBoolval: {
      set_boolval(from.boolval());
      break;
    }
    case kIntval: {
      set_intval(from.intval());
      break;
    }
    case kFloatval: {
      set_floatval(from.floatval());
      break;
    }
    case kStringval: {
      set_stringval(from.stringval());
      break;
    }
    case kVariables: {
      mutable_variables()->::dse::lua::dbg::MsgVariablesRef::MergeFrom(from.variables());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.MsgValue)
}

void MsgValue::SharedCtor() {
  type_id_ = 0;
  clear_has_value();
}

MsgValue::~MsgValue() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.MsgValue)
  SharedDtor();
}

void MsgValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_value()) {
    clear_value();
  }
}

void MsgValue::ArenaDtor(void* object) {
  MsgValue* _this = reinterpret_cast< MsgValue* >(object);
  (void)_this;
}
void MsgValue::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgValue& MsgValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgValue.base);
  return *internal_default_instance();
}


void MsgValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:dse.lua.dbg.MsgValue)
  switch (value_case()) {
    case kBoolval: {
      // No need to clear
      break;
    }
    case kIntval: {
      // No need to clear
      break;
    }
    case kFloatval: {
      // No need to clear
      break;
    }
    case kStringval: {
      value_.stringval_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kVariables: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.variables_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void MsgValue::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.MsgValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_id_ = 0;
  clear_value();
  _internal_metadata_.Clear();
}

bool MsgValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.MsgValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.MsgValueType type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type_id(static_cast< ::dse::lua::dbg::MsgValueType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.boolval_)));
          set_has_boolval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 intval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.intval_)));
          set_has_intval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float floatval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.floatval_)));
          set_has_floatval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stringval = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stringval().data(), static_cast<int>(this->stringval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgValue.stringval"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.MsgVariablesRef variables = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.MsgValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.MsgValue)
  return false;
#undef DO_
}

void MsgValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.MsgValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.MsgValueType type_id = 1;
  if (this->type_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type_id(), output);
  }

  // bool boolval = 2;
  if (has_boolval()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->boolval(), output);
  }

  // int64 intval = 3;
  if (has_intval()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->intval(), output);
  }

  // float floatval = 4;
  if (has_floatval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->floatval(), output);
  }

  // string stringval = 5;
  if (has_stringval()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringval().data(), static_cast<int>(this->stringval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgValue.stringval");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stringval(), output);
  }

  // .dse.lua.dbg.MsgVariablesRef variables = 6;
  if (has_variables()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_variables(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.MsgValue)
}

size_t MsgValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.MsgValue)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.lua.dbg.MsgValueType type_id = 1;
  if (this->type_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type_id());
  }

  switch (value_case()) {
    // bool boolval = 2;
    case kBoolval: {
      total_size += 1 + 1;
      break;
    }
    // int64 intval = 3;
    case kIntval: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->intval());
      break;
    }
    // float floatval = 4;
    case kFloatval: {
      total_size += 1 + 4;
      break;
    }
    // string stringval = 5;
    case kStringval: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringval());
      break;
    }
    // .dse.lua.dbg.MsgVariablesRef variables = 6;
    case kVariables: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.variables_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgValue*>(&from));
}

void MsgValue::MergeFrom(const MsgValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.MsgValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_id() != 0) {
    set_type_id(from.type_id());
  }
  switch (from.value_case()) {
    case kBoolval: {
      set_boolval(from.boolval());
      break;
    }
    case kIntval: {
      set_intval(from.intval());
      break;
    }
    case kFloatval: {
      set_floatval(from.floatval());
      break;
    }
    case kStringval: {
      set_stringval(from.stringval());
      break;
    }
    case kVariables: {
      mutable_variables()->::dse::lua::dbg::MsgVariablesRef::MergeFrom(from.variables());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void MsgValue::CopyFrom(const MsgValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.MsgValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgValue::IsInitialized() const {
  return true;
}

void MsgValue::Swap(MsgValue* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgValue* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgValue::UnsafeArenaSwap(MsgValue* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgValue::InternalSwap(MsgValue* other) {
  using std::swap;
  swap(type_id_, other->type_id_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgValue::GetTypeName() const {
  return "dse.lua.dbg.MsgValue";
}


// ===================================================================

void MsgChildValue::InitAsDefaultInstance() {
  ::dse::lua::dbg::_MsgChildValue_default_instance_._instance.get_mutable()->value_ = const_cast< ::dse::lua::dbg::MsgValue*>(
      ::dse::lua::dbg::MsgValue::internal_default_instance());
}
void MsgChildValue::unsafe_arena_set_allocated_value(
    ::dse::lua::dbg::MsgValue* value) {
  if (GetArenaNoVirtual() == NULL) {
    delete value_;
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.lua.dbg.MsgChildValue.value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgChildValue::kTypeFieldNumber;
const int MsgChildValue::kIndexFieldNumber;
const int MsgChildValue::kNameFieldNumber;
const int MsgChildValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgChildValue::MsgChildValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_MsgChildValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.MsgChildValue)
}
MsgChildValue::MsgChildValue(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgChildValue.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.MsgChildValue)
}
MsgChildValue::MsgChildValue(const MsgChildValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_value()) {
    value_ = new ::dse::lua::dbg::MsgValue(*from.value_);
  } else {
    value_ = NULL;
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&index_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.MsgChildValue)
}

void MsgChildValue::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&value_)) + sizeof(type_));
}

MsgChildValue::~MsgChildValue() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.MsgChildValue)
  SharedDtor();
}

void MsgChildValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void MsgChildValue::ArenaDtor(void* object) {
  MsgChildValue* _this = reinterpret_cast< MsgChildValue* >(object);
  (void)_this;
}
void MsgChildValue::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgChildValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgChildValue& MsgChildValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgChildValue.base);
  return *internal_default_instance();
}


void MsgChildValue::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.MsgChildValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&index_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MsgChildValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.MsgChildValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.MsgChildValue.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::dse::lua::dbg::MsgChildValue_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgChildValue.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.MsgValue value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.MsgChildValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.MsgChildValue)
  return false;
#undef DO_
}

void MsgChildValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.MsgChildValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.MsgChildValue.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int64 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->index(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgChildValue.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // .dse.lua.dbg.MsgValue value = 4;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_value(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.MsgChildValue)
}

size_t MsgChildValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.MsgChildValue)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .dse.lua.dbg.MsgValue value = 4;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // int64 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  // .dse.lua.dbg.MsgChildValue.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgChildValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgChildValue*>(&from));
}

void MsgChildValue::MergeFrom(const MsgChildValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.MsgChildValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_value()) {
    mutable_value()->::dse::lua::dbg::MsgValue::MergeFrom(from.value());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MsgChildValue::CopyFrom(const MsgChildValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.MsgChildValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgChildValue::IsInitialized() const {
  return true;
}

void MsgChildValue::Swap(MsgChildValue* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgChildValue* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgChildValue::UnsafeArenaSwap(MsgChildValue* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgChildValue::InternalSwap(MsgChildValue* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(index_, other->index_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgChildValue::GetTypeName() const {
  return "dse.lua.dbg.MsgChildValue";
}


// ===================================================================

void MsgStackFrame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgStackFrame::kSourceFieldNumber;
const int MsgStackFrame::kPathFieldNumber;
const int MsgStackFrame::kFunctionFieldNumber;
const int MsgStackFrame::kLineFieldNumber;
const int MsgStackFrame::kScopeFirstLineFieldNumber;
const int MsgStackFrame::kScopeLastLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgStackFrame::MsgStackFrame()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_MsgStackFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.MsgStackFrame)
}
MsgStackFrame::MsgStackFrame(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgStackFrame.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.MsgStackFrame)
}
MsgStackFrame::MsgStackFrame(const MsgStackFrame& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source(),
      GetArenaNoVirtual());
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path(),
      GetArenaNoVirtual());
  }
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function().size() > 0) {
    function_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function(),
      GetArenaNoVirtual());
  }
  ::memcpy(&line_, &from.line_,
    static_cast<size_t>(reinterpret_cast<char*>(&scope_last_line_) -
    reinterpret_cast<char*>(&line_)) + sizeof(scope_last_line_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.MsgStackFrame)
}

void MsgStackFrame::SharedCtor() {
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scope_last_line_) -
      reinterpret_cast<char*>(&line_)) + sizeof(scope_last_line_));
}

MsgStackFrame::~MsgStackFrame() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.MsgStackFrame)
  SharedDtor();
}

void MsgStackFrame::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgStackFrame::ArenaDtor(void* object) {
  MsgStackFrame* _this = reinterpret_cast< MsgStackFrame* >(object);
  (void)_this;
}
void MsgStackFrame::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgStackFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgStackFrame& MsgStackFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgStackFrame.base);
  return *internal_default_instance();
}


void MsgStackFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.MsgStackFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  function_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scope_last_line_) -
      reinterpret_cast<char*>(&line_)) + sizeof(scope_last_line_));
  _internal_metadata_.Clear();
}

bool MsgStackFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.MsgStackFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgStackFrame.source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgStackFrame.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string function = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function().data(), static_cast<int>(this->function().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgStackFrame.function"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 line = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 scope_first_line = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scope_first_line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 scope_last_line = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scope_last_line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.MsgStackFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.MsgStackFrame)
  return false;
#undef DO_
}

void MsgStackFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.MsgStackFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string source = 1;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgStackFrame.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgStackFrame.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // string function = 3;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgStackFrame.function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->function(), output);
  }

  // int32 line = 4;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->line(), output);
  }

  // int32 scope_first_line = 5;
  if (this->scope_first_line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->scope_first_line(), output);
  }

  // int32 scope_last_line = 6;
  if (this->scope_last_line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->scope_last_line(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.MsgStackFrame)
}

size_t MsgStackFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.MsgStackFrame)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string source = 1;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string function = 3;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function());
  }

  // int32 line = 4;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line());
  }

  // int32 scope_first_line = 5;
  if (this->scope_first_line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scope_first_line());
  }

  // int32 scope_last_line = 6;
  if (this->scope_last_line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scope_last_line());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgStackFrame::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgStackFrame*>(&from));
}

void MsgStackFrame::MergeFrom(const MsgStackFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.MsgStackFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source().size() > 0) {
    set_source(from.source());
  }
  if (from.path().size() > 0) {
    set_path(from.path());
  }
  if (from.function().size() > 0) {
    set_function(from.function());
  }
  if (from.line() != 0) {
    set_line(from.line());
  }
  if (from.scope_first_line() != 0) {
    set_scope_first_line(from.scope_first_line());
  }
  if (from.scope_last_line() != 0) {
    set_scope_last_line(from.scope_last_line());
  }
}

void MsgStackFrame::CopyFrom(const MsgStackFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.MsgStackFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgStackFrame::IsInitialized() const {
  return true;
}

void MsgStackFrame::Swap(MsgStackFrame* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgStackFrame* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgStackFrame::UnsafeArenaSwap(MsgStackFrame* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgStackFrame::InternalSwap(MsgStackFrame* other) {
  using std::swap;
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  function_.Swap(&other->function_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(line_, other->line_);
  swap(scope_first_line_, other->scope_first_line_);
  swap(scope_last_line_, other->scope_last_line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgStackFrame::GetTypeName() const {
  return "dse.lua.dbg.MsgStackFrame";
}


// ===================================================================

void DbgConnectRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgConnectRequest::kProtocolVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgConnectRequest::DbgConnectRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DbgConnectRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DbgConnectRequest)
}
DbgConnectRequest::DbgConnectRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgConnectRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DbgConnectRequest)
}
DbgConnectRequest::DbgConnectRequest(const DbgConnectRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocol_version_ = from.protocol_version_;
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DbgConnectRequest)
}

void DbgConnectRequest::SharedCtor() {
  protocol_version_ = 0u;
}

DbgConnectRequest::~DbgConnectRequest() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DbgConnectRequest)
  SharedDtor();
}

void DbgConnectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgConnectRequest::ArenaDtor(void* object) {
  DbgConnectRequest* _this = reinterpret_cast< DbgConnectRequest* >(object);
  (void)_this;
}
void DbgConnectRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgConnectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgConnectRequest& DbgConnectRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgConnectRequest.base);
  return *internal_default_instance();
}


void DbgConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DbgConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protocol_version_ = 0u;
  _internal_metadata_.Clear();
}

bool DbgConnectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DbgConnectRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DbgConnectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DbgConnectRequest)
  return false;
#undef DO_
}

void DbgConnectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DbgConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->protocol_version(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DbgConnectRequest)
}

size_t DbgConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DbgConnectRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protocol_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgConnectRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgConnectRequest*>(&from));
}

void DbgConnectRequest::MergeFrom(const DbgConnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DbgConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protocol_version() != 0) {
    set_protocol_version(from.protocol_version());
  }
}

void DbgConnectRequest::CopyFrom(const DbgConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DbgConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgConnectRequest::IsInitialized() const {
  return true;
}

void DbgConnectRequest::Swap(DbgConnectRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgConnectRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgConnectRequest::UnsafeArenaSwap(DbgConnectRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgConnectRequest::InternalSwap(DbgConnectRequest* other) {
  using std::swap;
  swap(protocol_version_, other->protocol_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgConnectRequest::GetTypeName() const {
  return "dse.lua.dbg.DbgConnectRequest";
}


// ===================================================================

void BkConnectResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkConnectResponse::kProtocolVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkConnectResponse::BkConnectResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkConnectResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkConnectResponse)
}
BkConnectResponse::BkConnectResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkConnectResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkConnectResponse)
}
BkConnectResponse::BkConnectResponse(const BkConnectResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocol_version_ = from.protocol_version_;
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkConnectResponse)
}

void BkConnectResponse::SharedCtor() {
  protocol_version_ = 0u;
}

BkConnectResponse::~BkConnectResponse() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkConnectResponse)
  SharedDtor();
}

void BkConnectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkConnectResponse::ArenaDtor(void* object) {
  BkConnectResponse* _this = reinterpret_cast< BkConnectResponse* >(object);
  (void)_this;
}
void BkConnectResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkConnectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkConnectResponse& BkConnectResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkConnectResponse.base);
  return *internal_default_instance();
}


void BkConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protocol_version_ = 0u;
  _internal_metadata_.Clear();
}

bool BkConnectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkConnectResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkConnectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkConnectResponse)
  return false;
#undef DO_
}

void BkConnectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->protocol_version(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkConnectResponse)
}

size_t BkConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkConnectResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protocol_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkConnectResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkConnectResponse*>(&from));
}

void BkConnectResponse::MergeFrom(const BkConnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protocol_version() != 0) {
    set_protocol_version(from.protocol_version());
  }
}

void BkConnectResponse::CopyFrom(const BkConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkConnectResponse::IsInitialized() const {
  return true;
}

void BkConnectResponse::Swap(BkConnectResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkConnectResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkConnectResponse::UnsafeArenaSwap(BkConnectResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkConnectResponse::InternalSwap(BkConnectResponse* other) {
  using std::swap;
  swap(protocol_version_, other->protocol_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkConnectResponse::GetTypeName() const {
  return "dse.lua.dbg.BkConnectResponse";
}


// ===================================================================

void DbgUpdateSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgUpdateSettings::kBreakOnErrorFieldNumber;
const int DbgUpdateSettings::kBreakOnGenericErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgUpdateSettings::DbgUpdateSettings()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DbgUpdateSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DbgUpdateSettings)
}
DbgUpdateSettings::DbgUpdateSettings(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgUpdateSettings.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DbgUpdateSettings)
}
DbgUpdateSettings::DbgUpdateSettings(const DbgUpdateSettings& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&break_on_error_, &from.break_on_error_,
    static_cast<size_t>(reinterpret_cast<char*>(&break_on_generic_error_) -
    reinterpret_cast<char*>(&break_on_error_)) + sizeof(break_on_generic_error_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DbgUpdateSettings)
}

void DbgUpdateSettings::SharedCtor() {
  ::memset(&break_on_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&break_on_generic_error_) -
      reinterpret_cast<char*>(&break_on_error_)) + sizeof(break_on_generic_error_));
}

DbgUpdateSettings::~DbgUpdateSettings() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DbgUpdateSettings)
  SharedDtor();
}

void DbgUpdateSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgUpdateSettings::ArenaDtor(void* object) {
  DbgUpdateSettings* _this = reinterpret_cast< DbgUpdateSettings* >(object);
  (void)_this;
}
void DbgUpdateSettings::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgUpdateSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgUpdateSettings& DbgUpdateSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgUpdateSettings.base);
  return *internal_default_instance();
}


void DbgUpdateSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DbgUpdateSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&break_on_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&break_on_generic_error_) -
      reinterpret_cast<char*>(&break_on_error_)) + sizeof(break_on_generic_error_));
  _internal_metadata_.Clear();
}

bool DbgUpdateSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DbgUpdateSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool break_on_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &break_on_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool break_on_generic_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &break_on_generic_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DbgUpdateSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DbgUpdateSettings)
  return false;
#undef DO_
}

void DbgUpdateSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DbgUpdateSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool break_on_error = 1;
  if (this->break_on_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->break_on_error(), output);
  }

  // bool break_on_generic_error = 2;
  if (this->break_on_generic_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->break_on_generic_error(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DbgUpdateSettings)
}

size_t DbgUpdateSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DbgUpdateSettings)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bool break_on_error = 1;
  if (this->break_on_error() != 0) {
    total_size += 1 + 1;
  }

  // bool break_on_generic_error = 2;
  if (this->break_on_generic_error() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgUpdateSettings::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgUpdateSettings*>(&from));
}

void DbgUpdateSettings::MergeFrom(const DbgUpdateSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DbgUpdateSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.break_on_error() != 0) {
    set_break_on_error(from.break_on_error());
  }
  if (from.break_on_generic_error() != 0) {
    set_break_on_generic_error(from.break_on_generic_error());
  }
}

void DbgUpdateSettings::CopyFrom(const DbgUpdateSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DbgUpdateSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgUpdateSettings::IsInitialized() const {
  return true;
}

void DbgUpdateSettings::Swap(DbgUpdateSettings* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgUpdateSettings* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgUpdateSettings::UnsafeArenaSwap(DbgUpdateSettings* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgUpdateSettings::InternalSwap(DbgUpdateSettings* other) {
  using std::swap;
  swap(break_on_error_, other->break_on_error_);
  swap(break_on_generic_error_, other->break_on_generic_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgUpdateSettings::GetTypeName() const {
  return "dse.lua.dbg.DbgUpdateSettings";
}


// ===================================================================

void MsgBreakpoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgBreakpoint::kPathFieldNumber;
const int MsgBreakpoint::kLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgBreakpoint::MsgBreakpoint()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_MsgBreakpoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.MsgBreakpoint)
}
MsgBreakpoint::MsgBreakpoint(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgBreakpoint.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.MsgBreakpoint)
}
MsgBreakpoint::MsgBreakpoint(const MsgBreakpoint& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path(),
      GetArenaNoVirtual());
  }
  line_ = from.line_;
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.MsgBreakpoint)
}

void MsgBreakpoint::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_ = 0;
}

MsgBreakpoint::~MsgBreakpoint() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.MsgBreakpoint)
  SharedDtor();
}

void MsgBreakpoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgBreakpoint::ArenaDtor(void* object) {
  MsgBreakpoint* _this = reinterpret_cast< MsgBreakpoint* >(object);
  (void)_this;
}
void MsgBreakpoint::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgBreakpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgBreakpoint& MsgBreakpoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgBreakpoint.base);
  return *internal_default_instance();
}


void MsgBreakpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.MsgBreakpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  line_ = 0;
  _internal_metadata_.Clear();
}

bool MsgBreakpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.MsgBreakpoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgBreakpoint.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.MsgBreakpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.MsgBreakpoint)
  return false;
#undef DO_
}

void MsgBreakpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.MsgBreakpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgBreakpoint.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // int32 line = 2;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->line(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.MsgBreakpoint)
}

size_t MsgBreakpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.MsgBreakpoint)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // int32 line = 2;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgBreakpoint::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgBreakpoint*>(&from));
}

void MsgBreakpoint::MergeFrom(const MsgBreakpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.MsgBreakpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    set_path(from.path());
  }
  if (from.line() != 0) {
    set_line(from.line());
  }
}

void MsgBreakpoint::CopyFrom(const MsgBreakpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.MsgBreakpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBreakpoint::IsInitialized() const {
  return true;
}

void MsgBreakpoint::Swap(MsgBreakpoint* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgBreakpoint* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgBreakpoint::UnsafeArenaSwap(MsgBreakpoint* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgBreakpoint::InternalSwap(MsgBreakpoint* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(line_, other->line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgBreakpoint::GetTypeName() const {
  return "dse.lua.dbg.MsgBreakpoint";
}


// ===================================================================

void DbgSetBreakpoints::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgSetBreakpoints::kBreakpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgSetBreakpoints::DbgSetBreakpoints()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DbgSetBreakpoints.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DbgSetBreakpoints)
}
DbgSetBreakpoints::DbgSetBreakpoints(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  breakpoint_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgSetBreakpoints.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DbgSetBreakpoints)
}
DbgSetBreakpoints::DbgSetBreakpoints(const DbgSetBreakpoints& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      breakpoint_(from.breakpoint_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DbgSetBreakpoints)
}

void DbgSetBreakpoints::SharedCtor() {
}

DbgSetBreakpoints::~DbgSetBreakpoints() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DbgSetBreakpoints)
  SharedDtor();
}

void DbgSetBreakpoints::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgSetBreakpoints::ArenaDtor(void* object) {
  DbgSetBreakpoints* _this = reinterpret_cast< DbgSetBreakpoints* >(object);
  (void)_this;
}
void DbgSetBreakpoints::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgSetBreakpoints::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgSetBreakpoints& DbgSetBreakpoints::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgSetBreakpoints.base);
  return *internal_default_instance();
}


void DbgSetBreakpoints::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DbgSetBreakpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  breakpoint_.Clear();
  _internal_metadata_.Clear();
}

bool DbgSetBreakpoints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DbgSetBreakpoints)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dse.lua.dbg.MsgBreakpoint breakpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_breakpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DbgSetBreakpoints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DbgSetBreakpoints)
  return false;
#undef DO_
}

void DbgSetBreakpoints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DbgSetBreakpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dse.lua.dbg.MsgBreakpoint breakpoint = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->breakpoint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->breakpoint(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DbgSetBreakpoints)
}

size_t DbgSetBreakpoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DbgSetBreakpoints)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.lua.dbg.MsgBreakpoint breakpoint = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->breakpoint_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->breakpoint(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgSetBreakpoints::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgSetBreakpoints*>(&from));
}

void DbgSetBreakpoints::MergeFrom(const DbgSetBreakpoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DbgSetBreakpoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  breakpoint_.MergeFrom(from.breakpoint_);
}

void DbgSetBreakpoints::CopyFrom(const DbgSetBreakpoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DbgSetBreakpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgSetBreakpoints::IsInitialized() const {
  return true;
}

void DbgSetBreakpoints::Swap(DbgSetBreakpoints* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgSetBreakpoints* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgSetBreakpoints::UnsafeArenaSwap(DbgSetBreakpoints* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgSetBreakpoints::InternalSwap(DbgSetBreakpoints* other) {
  using std::swap;
  CastToBase(&breakpoint_)->InternalSwap(CastToBase(&other->breakpoint_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgSetBreakpoints::GetTypeName() const {
  return "dse.lua.dbg.DbgSetBreakpoints";
}


// ===================================================================

void BkBreakpointTriggered::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkBreakpointTriggered::kReasonFieldNumber;
const int BkBreakpointTriggered::kStackFieldNumber;
const int BkBreakpointTriggered::kContextFieldNumber;
const int BkBreakpointTriggered::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkBreakpointTriggered::BkBreakpointTriggered()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkBreakpointTriggered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkBreakpointTriggered)
}
BkBreakpointTriggered::BkBreakpointTriggered(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  stack_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkBreakpointTriggered.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkBreakpointTriggered)
}
BkBreakpointTriggered::BkBreakpointTriggered(const BkBreakpointTriggered& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stack_(from.stack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  ::memcpy(&reason_, &from.reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&context_) -
    reinterpret_cast<char*>(&reason_)) + sizeof(context_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkBreakpointTriggered)
}

void BkBreakpointTriggered::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&context_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(context_));
}

BkBreakpointTriggered::~BkBreakpointTriggered() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkBreakpointTriggered)
  SharedDtor();
}

void BkBreakpointTriggered::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BkBreakpointTriggered::ArenaDtor(void* object) {
  BkBreakpointTriggered* _this = reinterpret_cast< BkBreakpointTriggered* >(object);
  (void)_this;
}
void BkBreakpointTriggered::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkBreakpointTriggered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkBreakpointTriggered& BkBreakpointTriggered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkBreakpointTriggered.base);
  return *internal_default_instance();
}


void BkBreakpointTriggered::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkBreakpointTriggered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stack_.Clear();
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&context_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(context_));
  _internal_metadata_.Clear();
}

bool BkBreakpointTriggered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkBreakpointTriggered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.BkBreakpointTriggered.Reason reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::dse::lua::dbg::BkBreakpointTriggered_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.lua.dbg.MsgStackFrame stack = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgContext context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_context(static_cast< ::dse::lua::dbg::DbgContext >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.BkBreakpointTriggered.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkBreakpointTriggered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkBreakpointTriggered)
  return false;
#undef DO_
}

void BkBreakpointTriggered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkBreakpointTriggered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.BkBreakpointTriggered.Reason reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason(), output);
  }

  // repeated .dse.lua.dbg.MsgStackFrame stack = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->stack(static_cast<int>(i)),
      output);
  }

  // .dse.lua.dbg.DbgContext context = 3;
  if (this->context() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->context(), output);
  }

  // string message = 4;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.BkBreakpointTriggered.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->message(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkBreakpointTriggered)
}

size_t BkBreakpointTriggered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkBreakpointTriggered)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.lua.dbg.MsgStackFrame stack = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stack_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stack(static_cast<int>(i)));
    }
  }

  // string message = 4;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .dse.lua.dbg.BkBreakpointTriggered.Reason reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  // .dse.lua.dbg.DbgContext context = 3;
  if (this->context() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->context());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkBreakpointTriggered::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkBreakpointTriggered*>(&from));
}

void BkBreakpointTriggered::MergeFrom(const BkBreakpointTriggered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkBreakpointTriggered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stack_.MergeFrom(from.stack_);
  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
  if (from.context() != 0) {
    set_context(from.context());
  }
}

void BkBreakpointTriggered::CopyFrom(const BkBreakpointTriggered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkBreakpointTriggered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkBreakpointTriggered::IsInitialized() const {
  return true;
}

void BkBreakpointTriggered::Swap(BkBreakpointTriggered* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkBreakpointTriggered* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkBreakpointTriggered::UnsafeArenaSwap(BkBreakpointTriggered* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkBreakpointTriggered::InternalSwap(BkBreakpointTriggered* other) {
  using std::swap;
  CastToBase(&stack_)->InternalSwap(CastToBase(&other->stack_));
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reason_, other->reason_);
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkBreakpointTriggered::GetTypeName() const {
  return "dse.lua.dbg.BkBreakpointTriggered";
}


// ===================================================================

void DbgContinue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgContinue::kContextFieldNumber;
const int DbgContinue::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgContinue::DbgContinue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DbgContinue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DbgContinue)
}
DbgContinue::DbgContinue(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgContinue.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DbgContinue)
}
DbgContinue::DbgContinue(const DbgContinue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&context_, &from.context_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&context_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DbgContinue)
}

void DbgContinue::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&context_)) + sizeof(action_));
}

DbgContinue::~DbgContinue() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DbgContinue)
  SharedDtor();
}

void DbgContinue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgContinue::ArenaDtor(void* object) {
  DbgContinue* _this = reinterpret_cast< DbgContinue* >(object);
  (void)_this;
}
void DbgContinue::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgContinue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgContinue& DbgContinue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgContinue.base);
  return *internal_default_instance();
}


void DbgContinue::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DbgContinue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&context_)) + sizeof(action_));
  _internal_metadata_.Clear();
}

bool DbgContinue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DbgContinue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.DbgContext context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_context(static_cast< ::dse::lua::dbg::DbgContext >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgContinue.Action action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::dse::lua::dbg::DbgContinue_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DbgContinue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DbgContinue)
  return false;
#undef DO_
}

void DbgContinue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DbgContinue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.DbgContext context = 1;
  if (this->context() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->context(), output);
  }

  // .dse.lua.dbg.DbgContinue.Action action = 2;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->action(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DbgContinue)
}

size_t DbgContinue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DbgContinue)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.lua.dbg.DbgContext context = 1;
  if (this->context() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->context());
  }

  // .dse.lua.dbg.DbgContinue.Action action = 2;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgContinue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgContinue*>(&from));
}

void DbgContinue::MergeFrom(const DbgContinue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DbgContinue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.context() != 0) {
    set_context(from.context());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void DbgContinue::CopyFrom(const DbgContinue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DbgContinue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgContinue::IsInitialized() const {
  return true;
}

void DbgContinue::Swap(DbgContinue* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgContinue* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgContinue::UnsafeArenaSwap(DbgContinue* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgContinue::InternalSwap(DbgContinue* other) {
  using std::swap;
  swap(context_, other->context_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgContinue::GetTypeName() const {
  return "dse.lua.dbg.DbgContinue";
}


// ===================================================================

void DbgEvaluate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgEvaluate::kContextFieldNumber;
const int DbgEvaluate::kExpressionFieldNumber;
const int DbgEvaluate::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgEvaluate::DbgEvaluate()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DbgEvaluate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DbgEvaluate)
}
DbgEvaluate::DbgEvaluate(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgEvaluate.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DbgEvaluate)
}
DbgEvaluate::DbgEvaluate(const DbgEvaluate& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expression_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expression().size() > 0) {
    expression_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expression(),
      GetArenaNoVirtual());
  }
  ::memcpy(&context_, &from.context_,
    static_cast<size_t>(reinterpret_cast<char*>(&frame_) -
    reinterpret_cast<char*>(&context_)) + sizeof(frame_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DbgEvaluate)
}

void DbgEvaluate::SharedCtor() {
  expression_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_) -
      reinterpret_cast<char*>(&context_)) + sizeof(frame_));
}

DbgEvaluate::~DbgEvaluate() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DbgEvaluate)
  SharedDtor();
}

void DbgEvaluate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  expression_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DbgEvaluate::ArenaDtor(void* object) {
  DbgEvaluate* _this = reinterpret_cast< DbgEvaluate* >(object);
  (void)_this;
}
void DbgEvaluate::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgEvaluate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgEvaluate& DbgEvaluate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgEvaluate.base);
  return *internal_default_instance();
}


void DbgEvaluate::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DbgEvaluate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expression_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_) -
      reinterpret_cast<char*>(&context_)) + sizeof(frame_));
  _internal_metadata_.Clear();
}

bool DbgEvaluate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DbgEvaluate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.DbgContext context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_context(static_cast< ::dse::lua::dbg::DbgContext >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expression = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expression()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expression().data(), static_cast<int>(this->expression().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.DbgEvaluate.expression"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 frame = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DbgEvaluate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DbgEvaluate)
  return false;
#undef DO_
}

void DbgEvaluate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DbgEvaluate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.DbgContext context = 1;
  if (this->context() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->context(), output);
  }

  // string expression = 2;
  if (this->expression().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expression().data(), static_cast<int>(this->expression().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.DbgEvaluate.expression");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->expression(), output);
  }

  // int32 frame = 3;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->frame(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DbgEvaluate)
}

size_t DbgEvaluate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DbgEvaluate)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string expression = 2;
  if (this->expression().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expression());
  }

  // .dse.lua.dbg.DbgContext context = 1;
  if (this->context() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->context());
  }

  // int32 frame = 3;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgEvaluate::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgEvaluate*>(&from));
}

void DbgEvaluate::MergeFrom(const DbgEvaluate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DbgEvaluate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expression().size() > 0) {
    set_expression(from.expression());
  }
  if (from.context() != 0) {
    set_context(from.context());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
}

void DbgEvaluate::CopyFrom(const DbgEvaluate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DbgEvaluate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgEvaluate::IsInitialized() const {
  return true;
}

void DbgEvaluate::Swap(DbgEvaluate* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgEvaluate* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgEvaluate::UnsafeArenaSwap(DbgEvaluate* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgEvaluate::InternalSwap(DbgEvaluate* other) {
  using std::swap;
  expression_.Swap(&other->expression_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(frame_, other->frame_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgEvaluate::GetTypeName() const {
  return "dse.lua.dbg.DbgEvaluate";
}


// ===================================================================

void DbgGetVariables::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgGetVariables::kContextFieldNumber;
const int DbgGetVariables::kVariableRefFieldNumber;
const int DbgGetVariables::kFrameFieldNumber;
const int DbgGetVariables::kLocalFieldNumber;
const int DbgGetVariables::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgGetVariables::DbgGetVariables()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DbgGetVariables.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DbgGetVariables)
}
DbgGetVariables::DbgGetVariables(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  key_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgGetVariables.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DbgGetVariables)
}
DbgGetVariables::DbgGetVariables(const DbgGetVariables& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      key_(from.key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&context_, &from.context_,
    static_cast<size_t>(reinterpret_cast<char*>(&local_) -
    reinterpret_cast<char*>(&context_)) + sizeof(local_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DbgGetVariables)
}

void DbgGetVariables::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_) -
      reinterpret_cast<char*>(&context_)) + sizeof(local_));
}

DbgGetVariables::~DbgGetVariables() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DbgGetVariables)
  SharedDtor();
}

void DbgGetVariables::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgGetVariables::ArenaDtor(void* object) {
  DbgGetVariables* _this = reinterpret_cast< DbgGetVariables* >(object);
  (void)_this;
}
void DbgGetVariables::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgGetVariables::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgGetVariables& DbgGetVariables::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgGetVariables.base);
  return *internal_default_instance();
}


void DbgGetVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DbgGetVariables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_) -
      reinterpret_cast<char*>(&context_)) + sizeof(local_));
  _internal_metadata_.Clear();
}

bool DbgGetVariables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DbgGetVariables)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.DbgContext context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_context(static_cast< ::dse::lua::dbg::DbgContext >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 variableRef = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &variableref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 frame = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 local = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &local_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.lua.dbg.MsgTableKey key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DbgGetVariables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DbgGetVariables)
  return false;
#undef DO_
}

void DbgGetVariables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DbgGetVariables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.DbgContext context = 1;
  if (this->context() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->context(), output);
  }

  // int32 variableRef = 2;
  if (this->variableref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->variableref(), output);
  }

  // int32 frame = 3;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->frame(), output);
  }

  // int32 local = 4;
  if (this->local() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->local(), output);
  }

  // repeated .dse.lua.dbg.MsgTableKey key = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->key(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DbgGetVariables)
}

size_t DbgGetVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DbgGetVariables)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.lua.dbg.MsgTableKey key = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->key_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->key(static_cast<int>(i)));
    }
  }

  // .dse.lua.dbg.DbgContext context = 1;
  if (this->context() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->context());
  }

  // int32 variableRef = 2;
  if (this->variableref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->variableref());
  }

  // int32 frame = 3;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // int32 local = 4;
  if (this->local() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->local());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgGetVariables::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgGetVariables*>(&from));
}

void DbgGetVariables::MergeFrom(const DbgGetVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DbgGetVariables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  if (from.context() != 0) {
    set_context(from.context());
  }
  if (from.variableref() != 0) {
    set_variableref(from.variableref());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.local() != 0) {
    set_local(from.local());
  }
}

void DbgGetVariables::CopyFrom(const DbgGetVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DbgGetVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgGetVariables::IsInitialized() const {
  return true;
}

void DbgGetVariables::Swap(DbgGetVariables* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgGetVariables* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgGetVariables::UnsafeArenaSwap(DbgGetVariables* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgGetVariables::InternalSwap(DbgGetVariables* other) {
  using std::swap;
  CastToBase(&key_)->InternalSwap(CastToBase(&other->key_));
  swap(context_, other->context_);
  swap(variableref_, other->variableref_);
  swap(frame_, other->frame_);
  swap(local_, other->local_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgGetVariables::GetTypeName() const {
  return "dse.lua.dbg.DbgGetVariables";
}


// ===================================================================

void BkEvaluateResponse::InitAsDefaultInstance() {
  ::dse::lua::dbg::_BkEvaluateResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::dse::lua::dbg::MsgValue*>(
      ::dse::lua::dbg::MsgValue::internal_default_instance());
}
void BkEvaluateResponse::unsafe_arena_set_allocated_result(
    ::dse::lua::dbg::MsgValue* result) {
  if (GetArenaNoVirtual() == NULL) {
    delete result_;
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.lua.dbg.BkEvaluateResponse.result)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkEvaluateResponse::kResultFieldNumber;
const int BkEvaluateResponse::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkEvaluateResponse::BkEvaluateResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkEvaluateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkEvaluateResponse)
}
BkEvaluateResponse::BkEvaluateResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkEvaluateResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkEvaluateResponse)
}
BkEvaluateResponse::BkEvaluateResponse(const BkEvaluateResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message(),
      GetArenaNoVirtual());
  }
  if (from.has_result()) {
    result_ = new ::dse::lua::dbg::MsgValue(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkEvaluateResponse)
}

void BkEvaluateResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = NULL;
}

BkEvaluateResponse::~BkEvaluateResponse() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkEvaluateResponse)
  SharedDtor();
}

void BkEvaluateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
}

void BkEvaluateResponse::ArenaDtor(void* object) {
  BkEvaluateResponse* _this = reinterpret_cast< BkEvaluateResponse* >(object);
  (void)_this;
}
void BkEvaluateResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkEvaluateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkEvaluateResponse& BkEvaluateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkEvaluateResponse.base);
  return *internal_default_instance();
}


void BkEvaluateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkEvaluateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  _internal_metadata_.Clear();
}

bool BkEvaluateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkEvaluateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.MsgValue result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.BkEvaluateResponse.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkEvaluateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkEvaluateResponse)
  return false;
#undef DO_
}

void BkEvaluateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkEvaluateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.MsgValue result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_result(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.BkEvaluateResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkEvaluateResponse)
}

size_t BkEvaluateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkEvaluateResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // .dse.lua.dbg.MsgValue result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkEvaluateResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkEvaluateResponse*>(&from));
}

void BkEvaluateResponse::MergeFrom(const BkEvaluateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkEvaluateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {
    set_error_message(from.error_message());
  }
  if (from.has_result()) {
    mutable_result()->::dse::lua::dbg::MsgValue::MergeFrom(from.result());
  }
}

void BkEvaluateResponse::CopyFrom(const BkEvaluateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkEvaluateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkEvaluateResponse::IsInitialized() const {
  return true;
}

void BkEvaluateResponse::Swap(BkEvaluateResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkEvaluateResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkEvaluateResponse::UnsafeArenaSwap(BkEvaluateResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkEvaluateResponse::InternalSwap(BkEvaluateResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkEvaluateResponse::GetTypeName() const {
  return "dse.lua.dbg.BkEvaluateResponse";
}


// ===================================================================

void BkGetVariablesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkGetVariablesResponse::kResultFieldNumber;
const int BkGetVariablesResponse::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkGetVariablesResponse::BkGetVariablesResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkGetVariablesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkGetVariablesResponse)
}
BkGetVariablesResponse::BkGetVariablesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  result_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkGetVariablesResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkGetVariablesResponse)
}
BkGetVariablesResponse::BkGetVariablesResponse(const BkGetVariablesResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      result_(from.result_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkGetVariablesResponse)
}

void BkGetVariablesResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BkGetVariablesResponse::~BkGetVariablesResponse() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkGetVariablesResponse)
  SharedDtor();
}

void BkGetVariablesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BkGetVariablesResponse::ArenaDtor(void* object) {
  BkGetVariablesResponse* _this = reinterpret_cast< BkGetVariablesResponse* >(object);
  (void)_this;
}
void BkGetVariablesResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkGetVariablesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkGetVariablesResponse& BkGetVariablesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkGetVariablesResponse.base);
  return *internal_default_instance();
}


void BkGetVariablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkGetVariablesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  error_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool BkGetVariablesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkGetVariablesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dse.lua.dbg.MsgChildValue result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.BkGetVariablesResponse.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkGetVariablesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkGetVariablesResponse)
  return false;
#undef DO_
}

void BkGetVariablesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkGetVariablesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dse.lua.dbg.MsgChildValue result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->result(static_cast<int>(i)),
      output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.BkGetVariablesResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkGetVariablesResponse)
}

size_t BkGetVariablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkGetVariablesResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.lua.dbg.MsgChildValue result = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->result(static_cast<int>(i)));
    }
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkGetVariablesResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkGetVariablesResponse*>(&from));
}

void BkGetVariablesResponse::MergeFrom(const BkGetVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkGetVariablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
  if (from.error_message().size() > 0) {
    set_error_message(from.error_message());
  }
}

void BkGetVariablesResponse::CopyFrom(const BkGetVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkGetVariablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkGetVariablesResponse::IsInitialized() const {
  return true;
}

void BkGetVariablesResponse::Swap(BkGetVariablesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkGetVariablesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkGetVariablesResponse::UnsafeArenaSwap(BkGetVariablesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkGetVariablesResponse::InternalSwap(BkGetVariablesResponse* other) {
  using std::swap;
  CastToBase(&result_)->InternalSwap(CastToBase(&other->result_));
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkGetVariablesResponse::GetTypeName() const {
  return "dse.lua.dbg.BkGetVariablesResponse";
}


// ===================================================================

void DbgFetchMods::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgFetchMods::DbgFetchMods()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DbgFetchMods.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DbgFetchMods)
}
DbgFetchMods::DbgFetchMods(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgFetchMods.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DbgFetchMods)
}
DbgFetchMods::DbgFetchMods(const DbgFetchMods& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DbgFetchMods)
}

void DbgFetchMods::SharedCtor() {
}

DbgFetchMods::~DbgFetchMods() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DbgFetchMods)
  SharedDtor();
}

void DbgFetchMods::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgFetchMods::ArenaDtor(void* object) {
  DbgFetchMods* _this = reinterpret_cast< DbgFetchMods* >(object);
  (void)_this;
}
void DbgFetchMods::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgFetchMods::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgFetchMods& DbgFetchMods::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgFetchMods.base);
  return *internal_default_instance();
}


void DbgFetchMods::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DbgFetchMods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DbgFetchMods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DbgFetchMods)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DbgFetchMods)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DbgFetchMods)
  return false;
#undef DO_
}

void DbgFetchMods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DbgFetchMods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DbgFetchMods)
}

size_t DbgFetchMods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DbgFetchMods)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgFetchMods::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgFetchMods*>(&from));
}

void DbgFetchMods::MergeFrom(const DbgFetchMods& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DbgFetchMods)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DbgFetchMods::CopyFrom(const DbgFetchMods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DbgFetchMods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgFetchMods::IsInitialized() const {
  return true;
}

void DbgFetchMods::Swap(DbgFetchMods* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgFetchMods* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgFetchMods::UnsafeArenaSwap(DbgFetchMods* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgFetchMods::InternalSwap(DbgFetchMods* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgFetchMods::GetTypeName() const {
  return "dse.lua.dbg.DbgFetchMods";
}


// ===================================================================

void BkContextUpdated::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkContextUpdated::kContextFieldNumber;
const int BkContextUpdated::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkContextUpdated::BkContextUpdated()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkContextUpdated.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkContextUpdated)
}
BkContextUpdated::BkContextUpdated(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkContextUpdated.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkContextUpdated)
}
BkContextUpdated::BkContextUpdated(const BkContextUpdated& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&context_, &from.context_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&context_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkContextUpdated)
}

void BkContextUpdated::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&context_)) + sizeof(status_));
}

BkContextUpdated::~BkContextUpdated() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkContextUpdated)
  SharedDtor();
}

void BkContextUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkContextUpdated::ArenaDtor(void* object) {
  BkContextUpdated* _this = reinterpret_cast< BkContextUpdated* >(object);
  (void)_this;
}
void BkContextUpdated::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkContextUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkContextUpdated& BkContextUpdated::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkContextUpdated.base);
  return *internal_default_instance();
}


void BkContextUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkContextUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&context_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool BkContextUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkContextUpdated)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.DbgContext context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_context(static_cast< ::dse::lua::dbg::DbgContext >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkContextUpdated.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::dse::lua::dbg::BkContextUpdated_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkContextUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkContextUpdated)
  return false;
#undef DO_
}

void BkContextUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkContextUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.DbgContext context = 1;
  if (this->context() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->context(), output);
  }

  // .dse.lua.dbg.BkContextUpdated.Status status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkContextUpdated)
}

size_t BkContextUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkContextUpdated)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.lua.dbg.DbgContext context = 1;
  if (this->context() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->context());
  }

  // .dse.lua.dbg.BkContextUpdated.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkContextUpdated::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkContextUpdated*>(&from));
}

void BkContextUpdated::MergeFrom(const BkContextUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkContextUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.context() != 0) {
    set_context(from.context());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void BkContextUpdated::CopyFrom(const BkContextUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkContextUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkContextUpdated::IsInitialized() const {
  return true;
}

void BkContextUpdated::Swap(BkContextUpdated* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkContextUpdated* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkContextUpdated::UnsafeArenaSwap(BkContextUpdated* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkContextUpdated::InternalSwap(BkContextUpdated* other) {
  using std::swap;
  swap(context_, other->context_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkContextUpdated::GetTypeName() const {
  return "dse.lua.dbg.BkContextUpdated";
}


// ===================================================================

void MsgModuleInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgModuleInfo::kUuidFieldNumber;
const int MsgModuleInfo::kNameFieldNumber;
const int MsgModuleInfo::kAuthorFieldNumber;
const int MsgModuleInfo::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgModuleInfo::MsgModuleInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_MsgModuleInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.MsgModuleInfo)
}
MsgModuleInfo::MsgModuleInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgModuleInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.MsgModuleInfo)
}
MsgModuleInfo::MsgModuleInfo(const MsgModuleInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author(),
      GetArenaNoVirtual());
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.MsgModuleInfo)
}

void MsgModuleInfo::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MsgModuleInfo::~MsgModuleInfo() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.MsgModuleInfo)
  SharedDtor();
}

void MsgModuleInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgModuleInfo::ArenaDtor(void* object) {
  MsgModuleInfo* _this = reinterpret_cast< MsgModuleInfo* >(object);
  (void)_this;
}
void MsgModuleInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgModuleInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgModuleInfo& MsgModuleInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgModuleInfo.base);
  return *internal_default_instance();
}


void MsgModuleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.MsgModuleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  author_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool MsgModuleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.MsgModuleInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgModuleInfo.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgModuleInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string author = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgModuleInfo.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgModuleInfo.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.MsgModuleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.MsgModuleInfo)
  return false;
#undef DO_
}

void MsgModuleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.MsgModuleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgModuleInfo.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgModuleInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string author = 3;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgModuleInfo.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->author(), output);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgModuleInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->path(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.MsgModuleInfo)
}

size_t MsgModuleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.MsgModuleInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string author = 3;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgModuleInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgModuleInfo*>(&from));
}

void MsgModuleInfo::MergeFrom(const MsgModuleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.MsgModuleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {
    set_uuid(from.uuid());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.author().size() > 0) {
    set_author(from.author());
  }
  if (from.path().size() > 0) {
    set_path(from.path());
  }
}

void MsgModuleInfo::CopyFrom(const MsgModuleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.MsgModuleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgModuleInfo::IsInitialized() const {
  return true;
}

void MsgModuleInfo::Swap(MsgModuleInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgModuleInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgModuleInfo::UnsafeArenaSwap(MsgModuleInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgModuleInfo::InternalSwap(MsgModuleInfo* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  author_.Swap(&other->author_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgModuleInfo::GetTypeName() const {
  return "dse.lua.dbg.MsgModuleInfo";
}


// ===================================================================

void MsgSourceFileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgSourceFileInfo::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgSourceFileInfo::MsgSourceFileInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_MsgSourceFileInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.MsgSourceFileInfo)
}
MsgSourceFileInfo::MsgSourceFileInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgSourceFileInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.MsgSourceFileInfo)
}
MsgSourceFileInfo::MsgSourceFileInfo(const MsgSourceFileInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.MsgSourceFileInfo)
}

void MsgSourceFileInfo::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MsgSourceFileInfo::~MsgSourceFileInfo() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.MsgSourceFileInfo)
  SharedDtor();
}

void MsgSourceFileInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgSourceFileInfo::ArenaDtor(void* object) {
  MsgSourceFileInfo* _this = reinterpret_cast< MsgSourceFileInfo* >(object);
  (void)_this;
}
void MsgSourceFileInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgSourceFileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgSourceFileInfo& MsgSourceFileInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_MsgSourceFileInfo.base);
  return *internal_default_instance();
}


void MsgSourceFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.MsgSourceFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool MsgSourceFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.MsgSourceFileInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.MsgSourceFileInfo.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.MsgSourceFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.MsgSourceFileInfo)
  return false;
#undef DO_
}

void MsgSourceFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.MsgSourceFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.MsgSourceFileInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.MsgSourceFileInfo)
}

size_t MsgSourceFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.MsgSourceFileInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgSourceFileInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgSourceFileInfo*>(&from));
}

void MsgSourceFileInfo::MergeFrom(const MsgSourceFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.MsgSourceFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    set_path(from.path());
  }
}

void MsgSourceFileInfo::CopyFrom(const MsgSourceFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.MsgSourceFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSourceFileInfo::IsInitialized() const {
  return true;
}

void MsgSourceFileInfo::Swap(MsgSourceFileInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgSourceFileInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgSourceFileInfo::UnsafeArenaSwap(MsgSourceFileInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgSourceFileInfo::InternalSwap(MsgSourceFileInfo* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgSourceFileInfo::GetTypeName() const {
  return "dse.lua.dbg.MsgSourceFileInfo";
}


// ===================================================================

void BkModInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkModInfoResponse::kModuleFieldNumber;
const int BkModInfoResponse::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkModInfoResponse::BkModInfoResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkModInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkModInfoResponse)
}
BkModInfoResponse::BkModInfoResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  module_(arena),
  source_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkModInfoResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkModInfoResponse)
}
BkModInfoResponse::BkModInfoResponse(const BkModInfoResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      module_(from.module_),
      source_(from.source_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkModInfoResponse)
}

void BkModInfoResponse::SharedCtor() {
}

BkModInfoResponse::~BkModInfoResponse() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkModInfoResponse)
  SharedDtor();
}

void BkModInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkModInfoResponse::ArenaDtor(void* object) {
  BkModInfoResponse* _this = reinterpret_cast< BkModInfoResponse* >(object);
  (void)_this;
}
void BkModInfoResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkModInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkModInfoResponse& BkModInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkModInfoResponse.base);
  return *internal_default_instance();
}


void BkModInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkModInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_.Clear();
  source_.Clear();
  _internal_metadata_.Clear();
}

bool BkModInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkModInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dse.lua.dbg.MsgModuleInfo module = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_module()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.lua.dbg.MsgSourceFileInfo source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkModInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkModInfoResponse)
  return false;
#undef DO_
}

void BkModInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkModInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dse.lua.dbg.MsgModuleInfo module = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->module(static_cast<int>(i)),
      output);
  }

  // repeated .dse.lua.dbg.MsgSourceFileInfo source = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->source(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkModInfoResponse)
}

size_t BkModInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkModInfoResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.lua.dbg.MsgModuleInfo module = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->module_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->module(static_cast<int>(i)));
    }
  }

  // repeated .dse.lua.dbg.MsgSourceFileInfo source = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->source_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->source(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkModInfoResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkModInfoResponse*>(&from));
}

void BkModInfoResponse::MergeFrom(const BkModInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkModInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_.MergeFrom(from.module_);
  source_.MergeFrom(from.source_);
}

void BkModInfoResponse::CopyFrom(const BkModInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkModInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkModInfoResponse::IsInitialized() const {
  return true;
}

void BkModInfoResponse::Swap(BkModInfoResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkModInfoResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkModInfoResponse::UnsafeArenaSwap(BkModInfoResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkModInfoResponse::InternalSwap(BkModInfoResponse* other) {
  using std::swap;
  CastToBase(&module_)->InternalSwap(CastToBase(&other->module_));
  CastToBase(&source_)->InternalSwap(CastToBase(&other->source_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkModInfoResponse::GetTypeName() const {
  return "dse.lua.dbg.BkModInfoResponse";
}


// ===================================================================

void BkDebugOutput::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkDebugOutput::kMessageFieldNumber;
const int BkDebugOutput::kSeverityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkDebugOutput::BkDebugOutput()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkDebugOutput.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkDebugOutput)
}
BkDebugOutput::BkDebugOutput(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkDebugOutput.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkDebugOutput)
}
BkDebugOutput::BkDebugOutput(const BkDebugOutput& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  severity_ = from.severity_;
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkDebugOutput)
}

void BkDebugOutput::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_ = 0;
}

BkDebugOutput::~BkDebugOutput() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkDebugOutput)
  SharedDtor();
}

void BkDebugOutput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BkDebugOutput::ArenaDtor(void* object) {
  BkDebugOutput* _this = reinterpret_cast< BkDebugOutput* >(object);
  (void)_this;
}
void BkDebugOutput::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkDebugOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkDebugOutput& BkDebugOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkDebugOutput.base);
  return *internal_default_instance();
}


void BkDebugOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkDebugOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  severity_ = 0;
  _internal_metadata_.Clear();
}

bool BkDebugOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkDebugOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.BkDebugOutput.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkDebugOutput.Severity severity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::dse::lua::dbg::BkDebugOutput_Severity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkDebugOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkDebugOutput)
  return false;
#undef DO_
}

void BkDebugOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkDebugOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.BkDebugOutput.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // .dse.lua.dbg.BkDebugOutput.Severity severity = 2;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->severity(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkDebugOutput)
}

size_t BkDebugOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkDebugOutput)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .dse.lua.dbg.BkDebugOutput.Severity severity = 2;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkDebugOutput::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkDebugOutput*>(&from));
}

void BkDebugOutput::MergeFrom(const BkDebugOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkDebugOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
}

void BkDebugOutput::CopyFrom(const BkDebugOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkDebugOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkDebugOutput::IsInitialized() const {
  return true;
}

void BkDebugOutput::Swap(BkDebugOutput* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkDebugOutput* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkDebugOutput::UnsafeArenaSwap(BkDebugOutput* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkDebugOutput::InternalSwap(BkDebugOutput* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(severity_, other->severity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkDebugOutput::GetTypeName() const {
  return "dse.lua.dbg.BkDebugOutput";
}


// ===================================================================

void BkResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkResult::kStatusCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkResult::BkResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkResult)
}
BkResult::BkResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkResult.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkResult)
}
BkResult::BkResult(const BkResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_code_ = from.status_code_;
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkResult)
}

void BkResult::SharedCtor() {
  status_code_ = 0;
}

BkResult::~BkResult() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkResult)
  SharedDtor();
}

void BkResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkResult::ArenaDtor(void* object) {
  BkResult* _this = reinterpret_cast< BkResult* >(object);
  (void)_this;
}
void BkResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkResult& BkResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkResult.base);
  return *internal_default_instance();
}


void BkResult::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_code_ = 0;
  _internal_metadata_.Clear();
}

bool BkResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.lua.dbg.StatusCode status_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status_code(static_cast< ::dse::lua::dbg::StatusCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkResult)
  return false;
#undef DO_
}

void BkResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.lua.dbg.StatusCode status_code = 1;
  if (this->status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status_code(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkResult)
}

size_t BkResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkResult)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.lua.dbg.StatusCode status_code = 1;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkResult*>(&from));
}

void BkResult::MergeFrom(const BkResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status_code() != 0) {
    set_status_code(from.status_code());
  }
}

void BkResult::CopyFrom(const BkResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkResult::IsInitialized() const {
  return true;
}

void BkResult::Swap(BkResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkResult::UnsafeArenaSwap(BkResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkResult::InternalSwap(BkResult* other) {
  using std::swap;
  swap(status_code_, other->status_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkResult::GetTypeName() const {
  return "dse.lua.dbg.BkResult";
}


// ===================================================================

void BkDebuggerReady::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkDebuggerReady::BkDebuggerReady()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkDebuggerReady.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkDebuggerReady)
}
BkDebuggerReady::BkDebuggerReady(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkDebuggerReady.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkDebuggerReady)
}
BkDebuggerReady::BkDebuggerReady(const BkDebuggerReady& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkDebuggerReady)
}

void BkDebuggerReady::SharedCtor() {
}

BkDebuggerReady::~BkDebuggerReady() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkDebuggerReady)
  SharedDtor();
}

void BkDebuggerReady::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkDebuggerReady::ArenaDtor(void* object) {
  BkDebuggerReady* _this = reinterpret_cast< BkDebuggerReady* >(object);
  (void)_this;
}
void BkDebuggerReady::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkDebuggerReady::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkDebuggerReady& BkDebuggerReady::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkDebuggerReady.base);
  return *internal_default_instance();
}


void BkDebuggerReady::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkDebuggerReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool BkDebuggerReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkDebuggerReady)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkDebuggerReady)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkDebuggerReady)
  return false;
#undef DO_
}

void BkDebuggerReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkDebuggerReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkDebuggerReady)
}

size_t BkDebuggerReady::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkDebuggerReady)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkDebuggerReady::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkDebuggerReady*>(&from));
}

void BkDebuggerReady::MergeFrom(const BkDebuggerReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkDebuggerReady)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BkDebuggerReady::CopyFrom(const BkDebuggerReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkDebuggerReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkDebuggerReady::IsInitialized() const {
  return true;
}

void BkDebuggerReady::Swap(BkDebuggerReady* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkDebuggerReady* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkDebuggerReady::UnsafeArenaSwap(BkDebuggerReady* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkDebuggerReady::InternalSwap(BkDebuggerReady* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkDebuggerReady::GetTypeName() const {
  return "dse.lua.dbg.BkDebuggerReady";
}


// ===================================================================

void DbgRequestSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgRequestSource::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgRequestSource::DbgRequestSource()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DbgRequestSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DbgRequestSource)
}
DbgRequestSource::DbgRequestSource(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgRequestSource.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DbgRequestSource)
}
DbgRequestSource::DbgRequestSource(const DbgRequestSource& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DbgRequestSource)
}

void DbgRequestSource::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DbgRequestSource::~DbgRequestSource() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DbgRequestSource)
  SharedDtor();
}

void DbgRequestSource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DbgRequestSource::ArenaDtor(void* object) {
  DbgRequestSource* _this = reinterpret_cast< DbgRequestSource* >(object);
  (void)_this;
}
void DbgRequestSource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgRequestSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgRequestSource& DbgRequestSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DbgRequestSource.base);
  return *internal_default_instance();
}


void DbgRequestSource::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DbgRequestSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DbgRequestSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DbgRequestSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.DbgRequestSource.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DbgRequestSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DbgRequestSource)
  return false;
#undef DO_
}

void DbgRequestSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DbgRequestSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.DbgRequestSource.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DbgRequestSource)
}

size_t DbgRequestSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DbgRequestSource)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgRequestSource::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgRequestSource*>(&from));
}

void DbgRequestSource::MergeFrom(const DbgRequestSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DbgRequestSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void DbgRequestSource::CopyFrom(const DbgRequestSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DbgRequestSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgRequestSource::IsInitialized() const {
  return true;
}

void DbgRequestSource::Swap(DbgRequestSource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgRequestSource* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgRequestSource::UnsafeArenaSwap(DbgRequestSource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgRequestSource::InternalSwap(DbgRequestSource* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgRequestSource::GetTypeName() const {
  return "dse.lua.dbg.DbgRequestSource";
}


// ===================================================================

void BkSourceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkSourceResponse::kNameFieldNumber;
const int BkSourceResponse::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkSourceResponse::BkSourceResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BkSourceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BkSourceResponse)
}
BkSourceResponse::BkSourceResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkSourceResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BkSourceResponse)
}
BkSourceResponse::BkSourceResponse(const BkSourceResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BkSourceResponse)
}

void BkSourceResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BkSourceResponse::~BkSourceResponse() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BkSourceResponse)
  SharedDtor();
}

void BkSourceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BkSourceResponse::ArenaDtor(void* object) {
  BkSourceResponse* _this = reinterpret_cast< BkSourceResponse* >(object);
  (void)_this;
}
void BkSourceResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkSourceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkSourceResponse& BkSourceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BkSourceResponse.base);
  return *internal_default_instance();
}


void BkSourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BkSourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  body_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool BkSourceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BkSourceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.BkSourceResponse.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.lua.dbg.BkSourceResponse.body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BkSourceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BkSourceResponse)
  return false;
#undef DO_
}

void BkSourceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BkSourceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.BkSourceResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.lua.dbg.BkSourceResponse.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->body(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BkSourceResponse)
}

size_t BkSourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BkSourceResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string body = 2;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkSourceResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkSourceResponse*>(&from));
}

void BkSourceResponse::MergeFrom(const BkSourceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BkSourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.body().size() > 0) {
    set_body(from.body());
  }
}

void BkSourceResponse::CopyFrom(const BkSourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BkSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkSourceResponse::IsInitialized() const {
  return true;
}

void BkSourceResponse::Swap(BkSourceResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkSourceResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkSourceResponse::UnsafeArenaSwap(BkSourceResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkSourceResponse::InternalSwap(BkSourceResponse* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkSourceResponse::GetTypeName() const {
  return "dse.lua.dbg.BkSourceResponse";
}


// ===================================================================

void DebuggerToBackend::InitAsDefaultInstance() {
}
void DebuggerToBackend::set_allocated_connect(::dse::lua::dbg::DbgConnectRequest* connect) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (connect) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(connect);
    if (message_arena != submessage_arena) {
      connect = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connect, submessage_arena);
    }
    set_has_connect();
    msg_.connect_ = connect;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.DebuggerToBackend.connect)
}
void DebuggerToBackend::set_allocated_updatesettings(::dse::lua::dbg::DbgUpdateSettings* updatesettings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (updatesettings) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(updatesettings);
    if (message_arena != submessage_arena) {
      updatesettings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updatesettings, submessage_arena);
    }
    set_has_updatesettings();
    msg_.updatesettings_ = updatesettings;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.DebuggerToBackend.updateSettings)
}
void DebuggerToBackend::set_allocated_setbreakpoints(::dse::lua::dbg::DbgSetBreakpoints* setbreakpoints) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (setbreakpoints) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(setbreakpoints);
    if (message_arena != submessage_arena) {
      setbreakpoints = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, setbreakpoints, submessage_arena);
    }
    set_has_setbreakpoints();
    msg_.setbreakpoints_ = setbreakpoints;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.DebuggerToBackend.setBreakpoints)
}
void DebuggerToBackend::set_allocated_continue_(::dse::lua::dbg::DbgContinue* continue_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (continue_) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(continue_);
    if (message_arena != submessage_arena) {
      continue_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, continue_, submessage_arena);
    }
    set_has_continue_();
    msg_.continue__ = continue_;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.DebuggerToBackend.continue)
}
void DebuggerToBackend::set_allocated_evaluate(::dse::lua::dbg::DbgEvaluate* evaluate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (evaluate) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(evaluate);
    if (message_arena != submessage_arena) {
      evaluate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, evaluate, submessage_arena);
    }
    set_has_evaluate();
    msg_.evaluate_ = evaluate;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.DebuggerToBackend.evaluate)
}
void DebuggerToBackend::set_allocated_fetchmods(::dse::lua::dbg::DbgFetchMods* fetchmods) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (fetchmods) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(fetchmods);
    if (message_arena != submessage_arena) {
      fetchmods = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fetchmods, submessage_arena);
    }
    set_has_fetchmods();
    msg_.fetchmods_ = fetchmods;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.DebuggerToBackend.fetchMods)
}
void DebuggerToBackend::set_allocated_requestsource(::dse::lua::dbg::DbgRequestSource* requestsource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (requestsource) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(requestsource);
    if (message_arena != submessage_arena) {
      requestsource = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, requestsource, submessage_arena);
    }
    set_has_requestsource();
    msg_.requestsource_ = requestsource;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.DebuggerToBackend.requestSource)
}
void DebuggerToBackend::set_allocated_getvariables(::dse::lua::dbg::DbgGetVariables* getvariables) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (getvariables) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(getvariables);
    if (message_arena != submessage_arena) {
      getvariables = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getvariables, submessage_arena);
    }
    set_has_getvariables();
    msg_.getvariables_ = getvariables;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.DebuggerToBackend.getVariables)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebuggerToBackend::kSeqNoFieldNumber;
const int DebuggerToBackend::kReplySeqNoFieldNumber;
const int DebuggerToBackend::kConnectFieldNumber;
const int DebuggerToBackend::kUpdateSettingsFieldNumber;
const int DebuggerToBackend::kSetBreakpointsFieldNumber;
const int DebuggerToBackend::kContinueFieldNumber;
const int DebuggerToBackend::kEvaluateFieldNumber;
const int DebuggerToBackend::kFetchModsFieldNumber;
const int DebuggerToBackend::kRequestSourceFieldNumber;
const int DebuggerToBackend::kGetVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebuggerToBackend::DebuggerToBackend()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_DebuggerToBackend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.DebuggerToBackend)
}
DebuggerToBackend::DebuggerToBackend(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DebuggerToBackend.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.DebuggerToBackend)
}
DebuggerToBackend::DebuggerToBackend(const DebuggerToBackend& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seq_no_, &from.seq_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&reply_seq_no_) -
    reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_has_msg();
  switch (from.msg_case()) {
    case kConnect: {
      mutable_connect()->::dse::lua::dbg::DbgConnectRequest::MergeFrom(from.connect());
      break;
    }
    case kUpdateSettings: {
      mutable_updatesettings()->::dse::lua::dbg::DbgUpdateSettings::MergeFrom(from.updatesettings());
      break;
    }
    case kSetBreakpoints: {
      mutable_setbreakpoints()->::dse::lua::dbg::DbgSetBreakpoints::MergeFrom(from.setbreakpoints());
      break;
    }
    case kContinue: {
      mutable_continue_()->::dse::lua::dbg::DbgContinue::MergeFrom(from.continue_());
      break;
    }
    case kEvaluate: {
      mutable_evaluate()->::dse::lua::dbg::DbgEvaluate::MergeFrom(from.evaluate());
      break;
    }
    case kFetchMods: {
      mutable_fetchmods()->::dse::lua::dbg::DbgFetchMods::MergeFrom(from.fetchmods());
      break;
    }
    case kRequestSource: {
      mutable_requestsource()->::dse::lua::dbg::DbgRequestSource::MergeFrom(from.requestsource());
      break;
    }
    case kGetVariables: {
      mutable_getvariables()->::dse::lua::dbg::DbgGetVariables::MergeFrom(from.getvariables());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.DebuggerToBackend)
}

void DebuggerToBackend::SharedCtor() {
  ::memset(&seq_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_seq_no_) -
      reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_has_msg();
}

DebuggerToBackend::~DebuggerToBackend() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.DebuggerToBackend)
  SharedDtor();
}

void DebuggerToBackend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_msg()) {
    clear_msg();
  }
}

void DebuggerToBackend::ArenaDtor(void* object) {
  DebuggerToBackend* _this = reinterpret_cast< DebuggerToBackend* >(object);
  (void)_this;
}
void DebuggerToBackend::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DebuggerToBackend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DebuggerToBackend& DebuggerToBackend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_DebuggerToBackend.base);
  return *internal_default_instance();
}


void DebuggerToBackend::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:dse.lua.dbg.DebuggerToBackend)
  switch (msg_case()) {
    case kConnect: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.connect_;
      }
      break;
    }
    case kUpdateSettings: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.updatesettings_;
      }
      break;
    }
    case kSetBreakpoints: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.setbreakpoints_;
      }
      break;
    }
    case kContinue: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.continue__;
      }
      break;
    }
    case kEvaluate: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.evaluate_;
      }
      break;
    }
    case kFetchMods: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.fetchmods_;
      }
      break;
    }
    case kRequestSource: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.requestsource_;
      }
      break;
    }
    case kGetVariables: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.getvariables_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void DebuggerToBackend::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.DebuggerToBackend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seq_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_seq_no_) -
      reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_msg();
  _internal_metadata_.Clear();
}

bool DebuggerToBackend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.DebuggerToBackend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seq_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reply_seq_no = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reply_seq_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgConnectRequest connect = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgUpdateSettings updateSettings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updatesettings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgSetBreakpoints setBreakpoints = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setbreakpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgContinue continue = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_continue_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgEvaluate evaluate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evaluate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgFetchMods fetchMods = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fetchmods()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgRequestSource requestSource = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_requestsource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.DbgGetVariables getVariables = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getvariables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.DebuggerToBackend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.DebuggerToBackend)
  return false;
#undef DO_
}

void DebuggerToBackend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.DebuggerToBackend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq_no = 1;
  if (this->seq_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq_no(), output);
  }

  // uint32 reply_seq_no = 2;
  if (this->reply_seq_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reply_seq_no(), output);
  }

  // .dse.lua.dbg.DbgConnectRequest connect = 3;
  if (has_connect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_connect(), output);
  }

  // .dse.lua.dbg.DbgUpdateSettings updateSettings = 4;
  if (has_updatesettings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_updatesettings(), output);
  }

  // .dse.lua.dbg.DbgSetBreakpoints setBreakpoints = 5;
  if (has_setbreakpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_setbreakpoints(), output);
  }

  // .dse.lua.dbg.DbgContinue continue = 6;
  if (has_continue_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_continue_(), output);
  }

  // .dse.lua.dbg.DbgEvaluate evaluate = 7;
  if (has_evaluate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->_internal_evaluate(), output);
  }

  // .dse.lua.dbg.DbgFetchMods fetchMods = 8;
  if (has_fetchmods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, this->_internal_fetchmods(), output);
  }

  // .dse.lua.dbg.DbgRequestSource requestSource = 9;
  if (has_requestsource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9, this->_internal_requestsource(), output);
  }

  // .dse.lua.dbg.DbgGetVariables getVariables = 10;
  if (has_getvariables()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->_internal_getvariables(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.DebuggerToBackend)
}

size_t DebuggerToBackend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.DebuggerToBackend)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 seq_no = 1;
  if (this->seq_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq_no());
  }

  // uint32 reply_seq_no = 2;
  if (this->reply_seq_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reply_seq_no());
  }

  switch (msg_case()) {
    // .dse.lua.dbg.DbgConnectRequest connect = 3;
    case kConnect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.connect_);
      break;
    }
    // .dse.lua.dbg.DbgUpdateSettings updateSettings = 4;
    case kUpdateSettings: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.updatesettings_);
      break;
    }
    // .dse.lua.dbg.DbgSetBreakpoints setBreakpoints = 5;
    case kSetBreakpoints: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.setbreakpoints_);
      break;
    }
    // .dse.lua.dbg.DbgContinue continue = 6;
    case kContinue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.continue__);
      break;
    }
    // .dse.lua.dbg.DbgEvaluate evaluate = 7;
    case kEvaluate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.evaluate_);
      break;
    }
    // .dse.lua.dbg.DbgFetchMods fetchMods = 8;
    case kFetchMods: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.fetchmods_);
      break;
    }
    // .dse.lua.dbg.DbgRequestSource requestSource = 9;
    case kRequestSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.requestsource_);
      break;
    }
    // .dse.lua.dbg.DbgGetVariables getVariables = 10;
    case kGetVariables: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.getvariables_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebuggerToBackend::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DebuggerToBackend*>(&from));
}

void DebuggerToBackend::MergeFrom(const DebuggerToBackend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.DebuggerToBackend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seq_no() != 0) {
    set_seq_no(from.seq_no());
  }
  if (from.reply_seq_no() != 0) {
    set_reply_seq_no(from.reply_seq_no());
  }
  switch (from.msg_case()) {
    case kConnect: {
      mutable_connect()->::dse::lua::dbg::DbgConnectRequest::MergeFrom(from.connect());
      break;
    }
    case kUpdateSettings: {
      mutable_updatesettings()->::dse::lua::dbg::DbgUpdateSettings::MergeFrom(from.updatesettings());
      break;
    }
    case kSetBreakpoints: {
      mutable_setbreakpoints()->::dse::lua::dbg::DbgSetBreakpoints::MergeFrom(from.setbreakpoints());
      break;
    }
    case kContinue: {
      mutable_continue_()->::dse::lua::dbg::DbgContinue::MergeFrom(from.continue_());
      break;
    }
    case kEvaluate: {
      mutable_evaluate()->::dse::lua::dbg::DbgEvaluate::MergeFrom(from.evaluate());
      break;
    }
    case kFetchMods: {
      mutable_fetchmods()->::dse::lua::dbg::DbgFetchMods::MergeFrom(from.fetchmods());
      break;
    }
    case kRequestSource: {
      mutable_requestsource()->::dse::lua::dbg::DbgRequestSource::MergeFrom(from.requestsource());
      break;
    }
    case kGetVariables: {
      mutable_getvariables()->::dse::lua::dbg::DbgGetVariables::MergeFrom(from.getvariables());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void DebuggerToBackend::CopyFrom(const DebuggerToBackend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.DebuggerToBackend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebuggerToBackend::IsInitialized() const {
  return true;
}

void DebuggerToBackend::Swap(DebuggerToBackend* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DebuggerToBackend* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DebuggerToBackend::UnsafeArenaSwap(DebuggerToBackend* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DebuggerToBackend::InternalSwap(DebuggerToBackend* other) {
  using std::swap;
  swap(seq_no_, other->seq_no_);
  swap(reply_seq_no_, other->reply_seq_no_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DebuggerToBackend::GetTypeName() const {
  return "dse.lua.dbg.DebuggerToBackend";
}


// ===================================================================

void BackendToDebugger::InitAsDefaultInstance() {
}
void BackendToDebugger::set_allocated_connectresponse(::dse::lua::dbg::BkConnectResponse* connectresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (connectresponse) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(connectresponse);
    if (message_arena != submessage_arena) {
      connectresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connectresponse, submessage_arena);
    }
    set_has_connectresponse();
    msg_.connectresponse_ = connectresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.connectResponse)
}
void BackendToDebugger::set_allocated_breakpointtriggered(::dse::lua::dbg::BkBreakpointTriggered* breakpointtriggered) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (breakpointtriggered) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(breakpointtriggered);
    if (message_arena != submessage_arena) {
      breakpointtriggered = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, breakpointtriggered, submessage_arena);
    }
    set_has_breakpointtriggered();
    msg_.breakpointtriggered_ = breakpointtriggered;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.breakpointTriggered)
}
void BackendToDebugger::set_allocated_evaluateresponse(::dse::lua::dbg::BkEvaluateResponse* evaluateresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (evaluateresponse) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(evaluateresponse);
    if (message_arena != submessage_arena) {
      evaluateresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, evaluateresponse, submessage_arena);
    }
    set_has_evaluateresponse();
    msg_.evaluateresponse_ = evaluateresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.evaluateResponse)
}
void BackendToDebugger::set_allocated_contextupdated(::dse::lua::dbg::BkContextUpdated* contextupdated) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (contextupdated) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(contextupdated);
    if (message_arena != submessage_arena) {
      contextupdated = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contextupdated, submessage_arena);
    }
    set_has_contextupdated();
    msg_.contextupdated_ = contextupdated;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.contextUpdated)
}
void BackendToDebugger::set_allocated_modinforesponse(::dse::lua::dbg::BkModInfoResponse* modinforesponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (modinforesponse) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(modinforesponse);
    if (message_arena != submessage_arena) {
      modinforesponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, modinforesponse, submessage_arena);
    }
    set_has_modinforesponse();
    msg_.modinforesponse_ = modinforesponse;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.modInfoResponse)
}
void BackendToDebugger::set_allocated_debugoutput(::dse::lua::dbg::BkDebugOutput* debugoutput) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (debugoutput) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(debugoutput);
    if (message_arena != submessage_arena) {
      debugoutput = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debugoutput, submessage_arena);
    }
    set_has_debugoutput();
    msg_.debugoutput_ = debugoutput;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.debugOutput)
}
void BackendToDebugger::set_allocated_results(::dse::lua::dbg::BkResult* results) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (results) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(results);
    if (message_arena != submessage_arena) {
      results = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, results, submessage_arena);
    }
    set_has_results();
    msg_.results_ = results;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.results)
}
void BackendToDebugger::set_allocated_debuggerready(::dse::lua::dbg::BkDebuggerReady* debuggerready) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (debuggerready) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(debuggerready);
    if (message_arena != submessage_arena) {
      debuggerready = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debuggerready, submessage_arena);
    }
    set_has_debuggerready();
    msg_.debuggerready_ = debuggerready;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.debuggerReady)
}
void BackendToDebugger::set_allocated_sourceresponse(::dse::lua::dbg::BkSourceResponse* sourceresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (sourceresponse) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(sourceresponse);
    if (message_arena != submessage_arena) {
      sourceresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sourceresponse, submessage_arena);
    }
    set_has_sourceresponse();
    msg_.sourceresponse_ = sourceresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.sourceResponse)
}
void BackendToDebugger::set_allocated_getvariablesresponse(::dse::lua::dbg::BkGetVariablesResponse* getvariablesresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (getvariablesresponse) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(getvariablesresponse);
    if (message_arena != submessage_arena) {
      getvariablesresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getvariablesresponse, submessage_arena);
    }
    set_has_getvariablesresponse();
    msg_.getvariablesresponse_ = getvariablesresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.lua.dbg.BackendToDebugger.getVariablesResponse)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackendToDebugger::kSeqNoFieldNumber;
const int BackendToDebugger::kReplySeqNoFieldNumber;
const int BackendToDebugger::kConnectResponseFieldNumber;
const int BackendToDebugger::kBreakpointTriggeredFieldNumber;
const int BackendToDebugger::kEvaluateResponseFieldNumber;
const int BackendToDebugger::kContextUpdatedFieldNumber;
const int BackendToDebugger::kModInfoResponseFieldNumber;
const int BackendToDebugger::kDebugOutputFieldNumber;
const int BackendToDebugger::kResultsFieldNumber;
const int BackendToDebugger::kDebuggerReadyFieldNumber;
const int BackendToDebugger::kSourceResponseFieldNumber;
const int BackendToDebugger::kGetVariablesResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackendToDebugger::BackendToDebugger()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LuaDebug_2eproto::scc_info_BackendToDebugger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.lua.dbg.BackendToDebugger)
}
BackendToDebugger::BackendToDebugger(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BackendToDebugger.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.lua.dbg.BackendToDebugger)
}
BackendToDebugger::BackendToDebugger(const BackendToDebugger& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seq_no_, &from.seq_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&reply_seq_no_) -
    reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_has_msg();
  switch (from.msg_case()) {
    case kConnectResponse: {
      mutable_connectresponse()->::dse::lua::dbg::BkConnectResponse::MergeFrom(from.connectresponse());
      break;
    }
    case kBreakpointTriggered: {
      mutable_breakpointtriggered()->::dse::lua::dbg::BkBreakpointTriggered::MergeFrom(from.breakpointtriggered());
      break;
    }
    case kEvaluateResponse: {
      mutable_evaluateresponse()->::dse::lua::dbg::BkEvaluateResponse::MergeFrom(from.evaluateresponse());
      break;
    }
    case kContextUpdated: {
      mutable_contextupdated()->::dse::lua::dbg::BkContextUpdated::MergeFrom(from.contextupdated());
      break;
    }
    case kModInfoResponse: {
      mutable_modinforesponse()->::dse::lua::dbg::BkModInfoResponse::MergeFrom(from.modinforesponse());
      break;
    }
    case kDebugOutput: {
      mutable_debugoutput()->::dse::lua::dbg::BkDebugOutput::MergeFrom(from.debugoutput());
      break;
    }
    case kResults: {
      mutable_results()->::dse::lua::dbg::BkResult::MergeFrom(from.results());
      break;
    }
    case kDebuggerReady: {
      mutable_debuggerready()->::dse::lua::dbg::BkDebuggerReady::MergeFrom(from.debuggerready());
      break;
    }
    case kSourceResponse: {
      mutable_sourceresponse()->::dse::lua::dbg::BkSourceResponse::MergeFrom(from.sourceresponse());
      break;
    }
    case kGetVariablesResponse: {
      mutable_getvariablesresponse()->::dse::lua::dbg::BkGetVariablesResponse::MergeFrom(from.getvariablesresponse());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dse.lua.dbg.BackendToDebugger)
}

void BackendToDebugger::SharedCtor() {
  ::memset(&seq_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_seq_no_) -
      reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_has_msg();
}

BackendToDebugger::~BackendToDebugger() {
  // @@protoc_insertion_point(destructor:dse.lua.dbg.BackendToDebugger)
  SharedDtor();
}

void BackendToDebugger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_msg()) {
    clear_msg();
  }
}

void BackendToDebugger::ArenaDtor(void* object) {
  BackendToDebugger* _this = reinterpret_cast< BackendToDebugger* >(object);
  (void)_this;
}
void BackendToDebugger::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BackendToDebugger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BackendToDebugger& BackendToDebugger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LuaDebug_2eproto::scc_info_BackendToDebugger.base);
  return *internal_default_instance();
}


void BackendToDebugger::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:dse.lua.dbg.BackendToDebugger)
  switch (msg_case()) {
    case kConnectResponse: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.connectresponse_;
      }
      break;
    }
    case kBreakpointTriggered: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.breakpointtriggered_;
      }
      break;
    }
    case kEvaluateResponse: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.evaluateresponse_;
      }
      break;
    }
    case kContextUpdated: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.contextupdated_;
      }
      break;
    }
    case kModInfoResponse: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.modinforesponse_;
      }
      break;
    }
    case kDebugOutput: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.debugoutput_;
      }
      break;
    }
    case kResults: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.results_;
      }
      break;
    }
    case kDebuggerReady: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.debuggerready_;
      }
      break;
    }
    case kSourceResponse: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.sourceresponse_;
      }
      break;
    }
    case kGetVariablesResponse: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.getvariablesresponse_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void BackendToDebugger::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.lua.dbg.BackendToDebugger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seq_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_seq_no_) -
      reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_msg();
  _internal_metadata_.Clear();
}

bool BackendToDebugger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.lua.dbg.BackendToDebugger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seq_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reply_seq_no = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reply_seq_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkConnectResponse connectResponse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connectresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkBreakpointTriggered breakpointTriggered = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_breakpointtriggered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkEvaluateResponse evaluateResponse = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evaluateresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkContextUpdated contextUpdated = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contextupdated()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkModInfoResponse modInfoResponse = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_modinforesponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkDebugOutput debugOutput = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debugoutput()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkResult results = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkDebuggerReady debuggerReady = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debuggerready()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkSourceResponse sourceResponse = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sourceresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.lua.dbg.BkGetVariablesResponse getVariablesResponse = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getvariablesresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.lua.dbg.BackendToDebugger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.lua.dbg.BackendToDebugger)
  return false;
#undef DO_
}

void BackendToDebugger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.lua.dbg.BackendToDebugger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq_no = 1;
  if (this->seq_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq_no(), output);
  }

  // uint32 reply_seq_no = 2;
  if (this->reply_seq_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reply_seq_no(), output);
  }

  // .dse.lua.dbg.BkConnectResponse connectResponse = 3;
  if (has_connectresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_connectresponse(), output);
  }

  // .dse.lua.dbg.BkBreakpointTriggered breakpointTriggered = 4;
  if (has_breakpointtriggered()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_breakpointtriggered(), output);
  }

  // .dse.lua.dbg.BkEvaluateResponse evaluateResponse = 5;
  if (has_evaluateresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_evaluateresponse(), output);
  }

  // .dse.lua.dbg.BkContextUpdated contextUpdated = 6;
  if (has_contextupdated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_contextupdated(), output);
  }

  // .dse.lua.dbg.BkModInfoResponse modInfoResponse = 7;
  if (has_modinforesponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->_internal_modinforesponse(), output);
  }

  // .dse.lua.dbg.BkDebugOutput debugOutput = 8;
  if (has_debugoutput()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, this->_internal_debugoutput(), output);
  }

  // .dse.lua.dbg.BkResult results = 9;
  if (has_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9, this->_internal_results(), output);
  }

  // .dse.lua.dbg.BkDebuggerReady debuggerReady = 10;
  if (has_debuggerready()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->_internal_debuggerready(), output);
  }

  // .dse.lua.dbg.BkSourceResponse sourceResponse = 11;
  if (has_sourceresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->_internal_sourceresponse(), output);
  }

  // .dse.lua.dbg.BkGetVariablesResponse getVariablesResponse = 12;
  if (has_getvariablesresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->_internal_getvariablesresponse(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.lua.dbg.BackendToDebugger)
}

size_t BackendToDebugger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.lua.dbg.BackendToDebugger)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 seq_no = 1;
  if (this->seq_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq_no());
  }

  // uint32 reply_seq_no = 2;
  if (this->reply_seq_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reply_seq_no());
  }

  switch (msg_case()) {
    // .dse.lua.dbg.BkConnectResponse connectResponse = 3;
    case kConnectResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.connectresponse_);
      break;
    }
    // .dse.lua.dbg.BkBreakpointTriggered breakpointTriggered = 4;
    case kBreakpointTriggered: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.breakpointtriggered_);
      break;
    }
    // .dse.lua.dbg.BkEvaluateResponse evaluateResponse = 5;
    case kEvaluateResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.evaluateresponse_);
      break;
    }
    // .dse.lua.dbg.BkContextUpdated contextUpdated = 6;
    case kContextUpdated: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.contextupdated_);
      break;
    }
    // .dse.lua.dbg.BkModInfoResponse modInfoResponse = 7;
    case kModInfoResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.modinforesponse_);
      break;
    }
    // .dse.lua.dbg.BkDebugOutput debugOutput = 8;
    case kDebugOutput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.debugoutput_);
      break;
    }
    // .dse.lua.dbg.BkResult results = 9;
    case kResults: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.results_);
      break;
    }
    // .dse.lua.dbg.BkDebuggerReady debuggerReady = 10;
    case kDebuggerReady: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.debuggerready_);
      break;
    }
    // .dse.lua.dbg.BkSourceResponse sourceResponse = 11;
    case kSourceResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.sourceresponse_);
      break;
    }
    // .dse.lua.dbg.BkGetVariablesResponse getVariablesResponse = 12;
    case kGetVariablesResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.getvariablesresponse_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BackendToDebugger::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BackendToDebugger*>(&from));
}

void BackendToDebugger::MergeFrom(const BackendToDebugger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.lua.dbg.BackendToDebugger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seq_no() != 0) {
    set_seq_no(from.seq_no());
  }
  if (from.reply_seq_no() != 0) {
    set_reply_seq_no(from.reply_seq_no());
  }
  switch (from.msg_case()) {
    case kConnectResponse: {
      mutable_connectresponse()->::dse::lua::dbg::BkConnectResponse::MergeFrom(from.connectresponse());
      break;
    }
    case kBreakpointTriggered: {
      mutable_breakpointtriggered()->::dse::lua::dbg::BkBreakpointTriggered::MergeFrom(from.breakpointtriggered());
      break;
    }
    case kEvaluateResponse: {
      mutable_evaluateresponse()->::dse::lua::dbg::BkEvaluateResponse::MergeFrom(from.evaluateresponse());
      break;
    }
    case kContextUpdated: {
      mutable_contextupdated()->::dse::lua::dbg::BkContextUpdated::MergeFrom(from.contextupdated());
      break;
    }
    case kModInfoResponse: {
      mutable_modinforesponse()->::dse::lua::dbg::BkModInfoResponse::MergeFrom(from.modinforesponse());
      break;
    }
    case kDebugOutput: {
      mutable_debugoutput()->::dse::lua::dbg::BkDebugOutput::MergeFrom(from.debugoutput());
      break;
    }
    case kResults: {
      mutable_results()->::dse::lua::dbg::BkResult::MergeFrom(from.results());
      break;
    }
    case kDebuggerReady: {
      mutable_debuggerready()->::dse::lua::dbg::BkDebuggerReady::MergeFrom(from.debuggerready());
      break;
    }
    case kSourceResponse: {
      mutable_sourceresponse()->::dse::lua::dbg::BkSourceResponse::MergeFrom(from.sourceresponse());
      break;
    }
    case kGetVariablesResponse: {
      mutable_getvariablesresponse()->::dse::lua::dbg::BkGetVariablesResponse::MergeFrom(from.getvariablesresponse());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void BackendToDebugger::CopyFrom(const BackendToDebugger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.lua.dbg.BackendToDebugger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackendToDebugger::IsInitialized() const {
  return true;
}

void BackendToDebugger::Swap(BackendToDebugger* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BackendToDebugger* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BackendToDebugger::UnsafeArenaSwap(BackendToDebugger* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BackendToDebugger::InternalSwap(BackendToDebugger* other) {
  using std::swap;
  swap(seq_no_, other->seq_no_);
  swap(reply_seq_no_, other->reply_seq_no_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BackendToDebugger::GetTypeName() const {
  return "dse.lua.dbg.BackendToDebugger";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dbg
}  // namespace lua
}  // namespace dse
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::MsgTableKey* Arena::CreateMaybeMessage< ::dse::lua::dbg::MsgTableKey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::MsgTableKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::MsgVariablesRef* Arena::CreateMaybeMessage< ::dse::lua::dbg::MsgVariablesRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::MsgVariablesRef >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::MsgValue* Arena::CreateMaybeMessage< ::dse::lua::dbg::MsgValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::MsgValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::MsgChildValue* Arena::CreateMaybeMessage< ::dse::lua::dbg::MsgChildValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::MsgChildValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::MsgStackFrame* Arena::CreateMaybeMessage< ::dse::lua::dbg::MsgStackFrame >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::MsgStackFrame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DbgConnectRequest* Arena::CreateMaybeMessage< ::dse::lua::dbg::DbgConnectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DbgConnectRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkConnectResponse* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkConnectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkConnectResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DbgUpdateSettings* Arena::CreateMaybeMessage< ::dse::lua::dbg::DbgUpdateSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DbgUpdateSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::MsgBreakpoint* Arena::CreateMaybeMessage< ::dse::lua::dbg::MsgBreakpoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::MsgBreakpoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DbgSetBreakpoints* Arena::CreateMaybeMessage< ::dse::lua::dbg::DbgSetBreakpoints >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DbgSetBreakpoints >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkBreakpointTriggered* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkBreakpointTriggered >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkBreakpointTriggered >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DbgContinue* Arena::CreateMaybeMessage< ::dse::lua::dbg::DbgContinue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DbgContinue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DbgEvaluate* Arena::CreateMaybeMessage< ::dse::lua::dbg::DbgEvaluate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DbgEvaluate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DbgGetVariables* Arena::CreateMaybeMessage< ::dse::lua::dbg::DbgGetVariables >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DbgGetVariables >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkEvaluateResponse* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkEvaluateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkEvaluateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkGetVariablesResponse* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkGetVariablesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkGetVariablesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DbgFetchMods* Arena::CreateMaybeMessage< ::dse::lua::dbg::DbgFetchMods >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DbgFetchMods >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkContextUpdated* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkContextUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkContextUpdated >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::MsgModuleInfo* Arena::CreateMaybeMessage< ::dse::lua::dbg::MsgModuleInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::MsgModuleInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::MsgSourceFileInfo* Arena::CreateMaybeMessage< ::dse::lua::dbg::MsgSourceFileInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::MsgSourceFileInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkModInfoResponse* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkModInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkModInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkDebugOutput* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkDebugOutput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkDebugOutput >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkResult* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkDebuggerReady* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkDebuggerReady >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkDebuggerReady >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DbgRequestSource* Arena::CreateMaybeMessage< ::dse::lua::dbg::DbgRequestSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DbgRequestSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BkSourceResponse* Arena::CreateMaybeMessage< ::dse::lua::dbg::BkSourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BkSourceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::DebuggerToBackend* Arena::CreateMaybeMessage< ::dse::lua::dbg::DebuggerToBackend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::DebuggerToBackend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::lua::dbg::BackendToDebugger* Arena::CreateMaybeMessage< ::dse::lua::dbg::BackendToDebugger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::lua::dbg::BackendToDebugger >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
