// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osidebug.proto

#include "osidebug.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_osidebug_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkBeginDatabaseContents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkDebugOutput;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkDebugSessionEnded;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkEndDatabaseContents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkEvaluateFinished;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkGlobalBreakpointTriggered;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkStoryLoaded;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkSyncStoryFinished;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BkVersionInfoResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgContinue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgGetDatabaseContents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgIdentifyRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgSetGlobalBreakpoints;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DbgSyncStory;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgActionInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgBreakpoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgDatabaseInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgNodeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgTypedValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BkDatabaseRow;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BkEvaluateRow;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DbgEvaluate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DbgSetBreakpoints;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MsgFrame;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MsgGoalInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MsgRuleInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MsgTuple;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BkBreakpointTriggered;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osidebug_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_BkSyncStoryData;
}  // namespace protobuf_osidebug_2eproto
namespace dse {
namespace osidbg {
class MsgTypedValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgTypedValue>
      _instance;
  ::google::protobuf::int64 intval_;
  float floatval_;
  ::google::protobuf::internal::ArenaStringPtr stringval_;
} _MsgTypedValue_default_instance_;
class MsgTupleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgTuple>
      _instance;
} _MsgTuple_default_instance_;
class MsgFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgFrame>
      _instance;
} _MsgFrame_default_instance_;
class DbgIdentifyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgIdentifyRequest>
      _instance;
} _DbgIdentifyRequest_default_instance_;
class BkVersionInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkVersionInfoResponse>
      _instance;
} _BkVersionInfoResponse_default_instance_;
class DbgSetGlobalBreakpointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgSetGlobalBreakpoints>
      _instance;
} _DbgSetGlobalBreakpoints_default_instance_;
class MsgBreakpointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgBreakpoint>
      _instance;
} _MsgBreakpoint_default_instance_;
class DbgSetBreakpointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgSetBreakpoints>
      _instance;
} _DbgSetBreakpoints_default_instance_;
class BkBreakpointTriggeredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkBreakpointTriggered>
      _instance;
} _BkBreakpointTriggered_default_instance_;
class BkGlobalBreakpointTriggeredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkGlobalBreakpointTriggered>
      _instance;
} _BkGlobalBreakpointTriggered_default_instance_;
class DbgContinueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgContinue>
      _instance;
} _DbgContinue_default_instance_;
class DbgGetDatabaseContentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgGetDatabaseContents>
      _instance;
} _DbgGetDatabaseContents_default_instance_;
class DbgSyncStoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgSyncStory>
      _instance;
} _DbgSyncStory_default_instance_;
class DbgEvaluateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DbgEvaluate>
      _instance;
} _DbgEvaluate_default_instance_;
class BkResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkResult>
      _instance;
} _BkResult_default_instance_;
class BkStoryLoadedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkStoryLoaded>
      _instance;
} _BkStoryLoaded_default_instance_;
class BkDebugSessionEndedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkDebugSessionEnded>
      _instance;
} _BkDebugSessionEnded_default_instance_;
class MsgActionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgActionInfo>
      _instance;
} _MsgActionInfo_default_instance_;
class MsgGoalInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgGoalInfo>
      _instance;
} _MsgGoalInfo_default_instance_;
class MsgDatabaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgDatabaseInfo>
      _instance;
} _MsgDatabaseInfo_default_instance_;
class MsgNodeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgNodeInfo>
      _instance;
} _MsgNodeInfo_default_instance_;
class MsgRuleInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgRuleInfo>
      _instance;
} _MsgRuleInfo_default_instance_;
class BkSyncStoryDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkSyncStoryData>
      _instance;
} _BkSyncStoryData_default_instance_;
class BkSyncStoryFinishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkSyncStoryFinished>
      _instance;
} _BkSyncStoryFinished_default_instance_;
class BkDebugOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkDebugOutput>
      _instance;
} _BkDebugOutput_default_instance_;
class BkBeginDatabaseContentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkBeginDatabaseContents>
      _instance;
} _BkBeginDatabaseContents_default_instance_;
class BkDatabaseRowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkDatabaseRow>
      _instance;
} _BkDatabaseRow_default_instance_;
class BkEndDatabaseContentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkEndDatabaseContents>
      _instance;
} _BkEndDatabaseContents_default_instance_;
class BkEvaluateRowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkEvaluateRow>
      _instance;
} _BkEvaluateRow_default_instance_;
class BkEvaluateFinishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BkEvaluateFinished>
      _instance;
} _BkEvaluateFinished_default_instance_;
class DebuggerToBackendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebuggerToBackend>
      _instance;
  const ::dse::osidbg::DbgIdentifyRequest* identify_;
  const ::dse::osidbg::DbgSetGlobalBreakpoints* setglobalbreakpoints_;
  const ::dse::osidbg::DbgSetBreakpoints* setbreakpoints_;
  const ::dse::osidbg::DbgContinue* continue__;
  const ::dse::osidbg::DbgGetDatabaseContents* getdatabasecontents_;
  const ::dse::osidbg::DbgSyncStory* syncstory_;
  const ::dse::osidbg::DbgEvaluate* evaluate_;
} _DebuggerToBackend_default_instance_;
class BackendToDebuggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackendToDebugger>
      _instance;
  const ::dse::osidbg::BkVersionInfoResponse* versioninfo_;
  const ::dse::osidbg::BkBreakpointTriggered* breakpointtriggered_;
  const ::dse::osidbg::BkResult* results_;
  const ::dse::osidbg::BkStoryLoaded* storyloaded_;
  const ::dse::osidbg::BkDebugSessionEnded* debugsessionended_;
  const ::dse::osidbg::BkGlobalBreakpointTriggered* globalbreakpointtriggered_;
  const ::dse::osidbg::BkSyncStoryData* syncstorydata_;
  const ::dse::osidbg::BkSyncStoryFinished* syncstoryfinished_;
  const ::dse::osidbg::BkDebugOutput* debugoutput_;
  const ::dse::osidbg::BkBeginDatabaseContents* begindatabasecontents_;
  const ::dse::osidbg::BkDatabaseRow* databaserow_;
  const ::dse::osidbg::BkEndDatabaseContents* enddatabasecontents_;
  const ::dse::osidbg::BkEvaluateRow* evaluaterow_;
  const ::dse::osidbg::BkEvaluateFinished* evaluatefinished_;
} _BackendToDebugger_default_instance_;
}  // namespace osidbg
}  // namespace dse
namespace protobuf_osidebug_2eproto {
static void InitDefaultsMsgTypedValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgTypedValue_default_instance_;
    new (ptr) ::dse::osidbg::MsgTypedValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgTypedValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgTypedValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgTypedValue}, {}};

static void InitDefaultsMsgTuple() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgTuple_default_instance_;
    new (ptr) ::dse::osidbg::MsgTuple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgTuple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgTuple =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgTuple}, {
      &protobuf_osidebug_2eproto::scc_info_MsgTypedValue.base,}};

static void InitDefaultsMsgFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgFrame_default_instance_;
    new (ptr) ::dse::osidbg::MsgFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgFrame}, {
      &protobuf_osidebug_2eproto::scc_info_MsgTuple.base,}};

static void InitDefaultsDbgIdentifyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_DbgIdentifyRequest_default_instance_;
    new (ptr) ::dse::osidbg::DbgIdentifyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::DbgIdentifyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgIdentifyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgIdentifyRequest}, {}};

static void InitDefaultsBkVersionInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkVersionInfoResponse_default_instance_;
    new (ptr) ::dse::osidbg::BkVersionInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkVersionInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkVersionInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkVersionInfoResponse}, {}};

static void InitDefaultsDbgSetGlobalBreakpoints() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_DbgSetGlobalBreakpoints_default_instance_;
    new (ptr) ::dse::osidbg::DbgSetGlobalBreakpoints();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::DbgSetGlobalBreakpoints::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgSetGlobalBreakpoints =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgSetGlobalBreakpoints}, {}};

static void InitDefaultsMsgBreakpoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgBreakpoint_default_instance_;
    new (ptr) ::dse::osidbg::MsgBreakpoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgBreakpoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgBreakpoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgBreakpoint}, {}};

static void InitDefaultsDbgSetBreakpoints() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_DbgSetBreakpoints_default_instance_;
    new (ptr) ::dse::osidbg::DbgSetBreakpoints();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::DbgSetBreakpoints::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DbgSetBreakpoints =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDbgSetBreakpoints}, {
      &protobuf_osidebug_2eproto::scc_info_MsgBreakpoint.base,}};

static void InitDefaultsBkBreakpointTriggered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkBreakpointTriggered_default_instance_;
    new (ptr) ::dse::osidbg::BkBreakpointTriggered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkBreakpointTriggered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BkBreakpointTriggered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBkBreakpointTriggered}, {
      &protobuf_osidebug_2eproto::scc_info_MsgFrame.base,
      &protobuf_osidebug_2eproto::scc_info_MsgTuple.base,}};

static void InitDefaultsBkGlobalBreakpointTriggered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkGlobalBreakpointTriggered_default_instance_;
    new (ptr) ::dse::osidbg::BkGlobalBreakpointTriggered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkGlobalBreakpointTriggered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkGlobalBreakpointTriggered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkGlobalBreakpointTriggered}, {}};

static void InitDefaultsDbgContinue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_DbgContinue_default_instance_;
    new (ptr) ::dse::osidbg::DbgContinue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::DbgContinue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgContinue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgContinue}, {}};

static void InitDefaultsDbgGetDatabaseContents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_DbgGetDatabaseContents_default_instance_;
    new (ptr) ::dse::osidbg::DbgGetDatabaseContents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::DbgGetDatabaseContents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgGetDatabaseContents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgGetDatabaseContents}, {}};

static void InitDefaultsDbgSyncStory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_DbgSyncStory_default_instance_;
    new (ptr) ::dse::osidbg::DbgSyncStory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::DbgSyncStory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DbgSyncStory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDbgSyncStory}, {}};

static void InitDefaultsDbgEvaluate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_DbgEvaluate_default_instance_;
    new (ptr) ::dse::osidbg::DbgEvaluate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::DbgEvaluate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DbgEvaluate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDbgEvaluate}, {
      &protobuf_osidebug_2eproto::scc_info_MsgTuple.base,}};

static void InitDefaultsBkResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkResult_default_instance_;
    new (ptr) ::dse::osidbg::BkResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkResult}, {}};

static void InitDefaultsBkStoryLoaded() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkStoryLoaded_default_instance_;
    new (ptr) ::dse::osidbg::BkStoryLoaded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkStoryLoaded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkStoryLoaded =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkStoryLoaded}, {}};

static void InitDefaultsBkDebugSessionEnded() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkDebugSessionEnded_default_instance_;
    new (ptr) ::dse::osidbg::BkDebugSessionEnded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkDebugSessionEnded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkDebugSessionEnded =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkDebugSessionEnded}, {}};

static void InitDefaultsMsgActionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgActionInfo_default_instance_;
    new (ptr) ::dse::osidbg::MsgActionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgActionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgActionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgActionInfo}, {}};

static void InitDefaultsMsgGoalInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgGoalInfo_default_instance_;
    new (ptr) ::dse::osidbg::MsgGoalInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgGoalInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgGoalInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgGoalInfo}, {
      &protobuf_osidebug_2eproto::scc_info_MsgActionInfo.base,}};

static void InitDefaultsMsgDatabaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgDatabaseInfo_default_instance_;
    new (ptr) ::dse::osidbg::MsgDatabaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgDatabaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgDatabaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgDatabaseInfo}, {}};

static void InitDefaultsMsgNodeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgNodeInfo_default_instance_;
    new (ptr) ::dse::osidbg::MsgNodeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgNodeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgNodeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgNodeInfo}, {}};

static void InitDefaultsMsgRuleInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_MsgRuleInfo_default_instance_;
    new (ptr) ::dse::osidbg::MsgRuleInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::MsgRuleInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgRuleInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgRuleInfo}, {
      &protobuf_osidebug_2eproto::scc_info_MsgActionInfo.base,}};

static void InitDefaultsBkSyncStoryData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkSyncStoryData_default_instance_;
    new (ptr) ::dse::osidbg::BkSyncStoryData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkSyncStoryData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_BkSyncStoryData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsBkSyncStoryData}, {
      &protobuf_osidebug_2eproto::scc_info_MsgGoalInfo.base,
      &protobuf_osidebug_2eproto::scc_info_MsgDatabaseInfo.base,
      &protobuf_osidebug_2eproto::scc_info_MsgNodeInfo.base,
      &protobuf_osidebug_2eproto::scc_info_MsgRuleInfo.base,}};

static void InitDefaultsBkSyncStoryFinished() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkSyncStoryFinished_default_instance_;
    new (ptr) ::dse::osidbg::BkSyncStoryFinished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkSyncStoryFinished::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkSyncStoryFinished =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkSyncStoryFinished}, {}};

static void InitDefaultsBkDebugOutput() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkDebugOutput_default_instance_;
    new (ptr) ::dse::osidbg::BkDebugOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkDebugOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkDebugOutput =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkDebugOutput}, {}};

static void InitDefaultsBkBeginDatabaseContents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkBeginDatabaseContents_default_instance_;
    new (ptr) ::dse::osidbg::BkBeginDatabaseContents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkBeginDatabaseContents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkBeginDatabaseContents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkBeginDatabaseContents}, {}};

static void InitDefaultsBkDatabaseRow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkDatabaseRow_default_instance_;
    new (ptr) ::dse::osidbg::BkDatabaseRow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkDatabaseRow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BkDatabaseRow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBkDatabaseRow}, {
      &protobuf_osidebug_2eproto::scc_info_MsgTuple.base,}};

static void InitDefaultsBkEndDatabaseContents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkEndDatabaseContents_default_instance_;
    new (ptr) ::dse::osidbg::BkEndDatabaseContents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkEndDatabaseContents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkEndDatabaseContents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkEndDatabaseContents}, {}};

static void InitDefaultsBkEvaluateRow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkEvaluateRow_default_instance_;
    new (ptr) ::dse::osidbg::BkEvaluateRow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkEvaluateRow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BkEvaluateRow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBkEvaluateRow}, {
      &protobuf_osidebug_2eproto::scc_info_MsgTuple.base,}};

static void InitDefaultsBkEvaluateFinished() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BkEvaluateFinished_default_instance_;
    new (ptr) ::dse::osidbg::BkEvaluateFinished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BkEvaluateFinished::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BkEvaluateFinished =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBkEvaluateFinished}, {}};

static void InitDefaultsDebuggerToBackend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_DebuggerToBackend_default_instance_;
    new (ptr) ::dse::osidbg::DebuggerToBackend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::DebuggerToBackend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_DebuggerToBackend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsDebuggerToBackend}, {
      &protobuf_osidebug_2eproto::scc_info_DbgIdentifyRequest.base,
      &protobuf_osidebug_2eproto::scc_info_DbgSetGlobalBreakpoints.base,
      &protobuf_osidebug_2eproto::scc_info_DbgSetBreakpoints.base,
      &protobuf_osidebug_2eproto::scc_info_DbgContinue.base,
      &protobuf_osidebug_2eproto::scc_info_DbgGetDatabaseContents.base,
      &protobuf_osidebug_2eproto::scc_info_DbgSyncStory.base,
      &protobuf_osidebug_2eproto::scc_info_DbgEvaluate.base,}};

static void InitDefaultsBackendToDebugger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dse::osidbg::_BackendToDebugger_default_instance_;
    new (ptr) ::dse::osidbg::BackendToDebugger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dse::osidbg::BackendToDebugger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<14> scc_info_BackendToDebugger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 14, InitDefaultsBackendToDebugger}, {
      &protobuf_osidebug_2eproto::scc_info_BkVersionInfoResponse.base,
      &protobuf_osidebug_2eproto::scc_info_BkBreakpointTriggered.base,
      &protobuf_osidebug_2eproto::scc_info_BkResult.base,
      &protobuf_osidebug_2eproto::scc_info_BkStoryLoaded.base,
      &protobuf_osidebug_2eproto::scc_info_BkDebugSessionEnded.base,
      &protobuf_osidebug_2eproto::scc_info_BkGlobalBreakpointTriggered.base,
      &protobuf_osidebug_2eproto::scc_info_BkSyncStoryData.base,
      &protobuf_osidebug_2eproto::scc_info_BkSyncStoryFinished.base,
      &protobuf_osidebug_2eproto::scc_info_BkDebugOutput.base,
      &protobuf_osidebug_2eproto::scc_info_BkBeginDatabaseContents.base,
      &protobuf_osidebug_2eproto::scc_info_BkDatabaseRow.base,
      &protobuf_osidebug_2eproto::scc_info_BkEndDatabaseContents.base,
      &protobuf_osidebug_2eproto::scc_info_BkEvaluateRow.base,
      &protobuf_osidebug_2eproto::scc_info_BkEvaluateFinished.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgTypedValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgTuple.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgFrame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgIdentifyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkVersionInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgSetGlobalBreakpoints.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgBreakpoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgSetBreakpoints.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkBreakpointTriggered.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkGlobalBreakpointTriggered.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgContinue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgGetDatabaseContents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgSyncStory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DbgEvaluate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkStoryLoaded.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkDebugSessionEnded.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgActionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgGoalInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgDatabaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgNodeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgRuleInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkSyncStoryData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkSyncStoryFinished.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkDebugOutput.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkBeginDatabaseContents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkDatabaseRow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkEndDatabaseContents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkEvaluateRow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BkEvaluateFinished.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebuggerToBackend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BackendToDebugger.base);
}

}  // namespace protobuf_osidebug_2eproto
namespace dse {
namespace osidbg {
bool MsgFrame_FrameType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgFrame_FrameType MsgFrame::IS_VALID;
const MsgFrame_FrameType MsgFrame::PUSHDOWN;
const MsgFrame_FrameType MsgFrame::INSERT;
const MsgFrame_FrameType MsgFrame::DELETE_;
const MsgFrame_FrameType MsgFrame::PUSHDOWN_DELETE;
const MsgFrame_FrameType MsgFrame::RULE_ACTION;
const MsgFrame_FrameType MsgFrame::GOAL_INIT_ACTION;
const MsgFrame_FrameType MsgFrame::GOAL_EXIT_ACTION;
const MsgFrame_FrameType MsgFrame::FrameType_MIN;
const MsgFrame_FrameType MsgFrame::FrameType_MAX;
const int MsgFrame::FrameType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool DbgSetGlobalBreakpoints_GlobalBreakpointType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::NONE;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::STORY_LOADED;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::VALID;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::PUSHDOWN;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::INSERT;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::RULE_ACTION;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::INIT_CALL;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::EXIT_CALL;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::GAME_INIT;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::GAME_EXIT;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::DELETE_;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::FAILED_QUERY;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::GlobalBreakpointType_MIN;
const DbgSetGlobalBreakpoints_GlobalBreakpointType DbgSetGlobalBreakpoints::GlobalBreakpointType_MAX;
const int DbgSetGlobalBreakpoints::GlobalBreakpointType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool MsgBreakpoint_BreakpointType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgBreakpoint_BreakpointType MsgBreakpoint::NONE;
const MsgBreakpoint_BreakpointType MsgBreakpoint::VALID;
const MsgBreakpoint_BreakpointType MsgBreakpoint::PUSHDOWN;
const MsgBreakpoint_BreakpointType MsgBreakpoint::INSERT;
const MsgBreakpoint_BreakpointType MsgBreakpoint::RULE_ACTION;
const MsgBreakpoint_BreakpointType MsgBreakpoint::INIT_CALL;
const MsgBreakpoint_BreakpointType MsgBreakpoint::EXIT_CALL;
const MsgBreakpoint_BreakpointType MsgBreakpoint::DELETE_;
const MsgBreakpoint_BreakpointType MsgBreakpoint::FAILED_QUERY;
const MsgBreakpoint_BreakpointType MsgBreakpoint::BreakpointType_MIN;
const MsgBreakpoint_BreakpointType MsgBreakpoint::BreakpointType_MAX;
const int MsgBreakpoint::BreakpointType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool BkBreakpointTriggered_QueryStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BkBreakpointTriggered_QueryStatus BkBreakpointTriggered::NOT_A_QUERY;
const BkBreakpointTriggered_QueryStatus BkBreakpointTriggered::SUCCEEDED;
const BkBreakpointTriggered_QueryStatus BkBreakpointTriggered::FAILED;
const BkBreakpointTriggered_QueryStatus BkBreakpointTriggered::QueryStatus_MIN;
const BkBreakpointTriggered_QueryStatus BkBreakpointTriggered::QueryStatus_MAX;
const int BkBreakpointTriggered::QueryStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool BkGlobalBreakpointTriggered_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BkGlobalBreakpointTriggered_Reason BkGlobalBreakpointTriggered::STORY_LOADED;
const BkGlobalBreakpointTriggered_Reason BkGlobalBreakpointTriggered::GAME_INIT;
const BkGlobalBreakpointTriggered_Reason BkGlobalBreakpointTriggered::GAME_EXIT;
const BkGlobalBreakpointTriggered_Reason BkGlobalBreakpointTriggered::Reason_MIN;
const BkGlobalBreakpointTriggered_Reason BkGlobalBreakpointTriggered::Reason_MAX;
const int BkGlobalBreakpointTriggered::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool DbgContinue_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DbgContinue_Action DbgContinue::CONTINUE;
const DbgContinue_Action DbgContinue::STEP_OVER;
const DbgContinue_Action DbgContinue::STEP_INTO;
const DbgContinue_Action DbgContinue::STEP_OUT;
const DbgContinue_Action DbgContinue::PAUSE;
const DbgContinue_Action DbgContinue::Action_MIN;
const DbgContinue_Action DbgContinue::Action_MAX;
const int DbgContinue::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool DbgContinue_Flags_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DbgContinue_Flags DbgContinue::NONE;
const DbgContinue_Flags DbgContinue::SKIP_RULE_PUSHDOWN;
const DbgContinue_Flags DbgContinue::SKIP_DB_PROPAGATION;
const DbgContinue_Flags DbgContinue::Flags_MIN;
const DbgContinue_Flags DbgContinue::Flags_MAX;
const int DbgContinue::Flags_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool DbgEvaluate_EvalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DbgEvaluate_EvalType DbgEvaluate::IS_VALID;
const DbgEvaluate_EvalType DbgEvaluate::PUSHDOWN;
const DbgEvaluate_EvalType DbgEvaluate::INSERT;
const DbgEvaluate_EvalType DbgEvaluate::DELETE_;
const DbgEvaluate_EvalType DbgEvaluate::EvalType_MIN;
const DbgEvaluate_EvalType DbgEvaluate::EvalType_MAX;
const int DbgEvaluate::EvalType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool StatusCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MsgTypedValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTypedValue::kTypeIdFieldNumber;
const int MsgTypedValue::kIntvalFieldNumber;
const int MsgTypedValue::kFloatvalFieldNumber;
const int MsgTypedValue::kStringvalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTypedValue::MsgTypedValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgTypedValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgTypedValue)
}
MsgTypedValue::MsgTypedValue(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgTypedValue.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgTypedValue)
}
MsgTypedValue::MsgTypedValue(const MsgTypedValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_id_ = from.type_id_;
  clear_has_value();
  switch (from.value_case()) {
    case kIntval: {
      set_intval(from.intval());
      break;
    }
    case kFloatval: {
      set_floatval(from.floatval());
      break;
    }
    case kStringval: {
      set_stringval(from.stringval());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgTypedValue)
}

void MsgTypedValue::SharedCtor() {
  type_id_ = 0u;
  clear_has_value();
}

MsgTypedValue::~MsgTypedValue() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgTypedValue)
  SharedDtor();
}

void MsgTypedValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_value()) {
    clear_value();
  }
}

void MsgTypedValue::ArenaDtor(void* object) {
  MsgTypedValue* _this = reinterpret_cast< MsgTypedValue* >(object);
  (void)_this;
}
void MsgTypedValue::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgTypedValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgTypedValue& MsgTypedValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgTypedValue.base);
  return *internal_default_instance();
}


void MsgTypedValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:dse.osidbg.MsgTypedValue)
  switch (value_case()) {
    case kIntval: {
      // No need to clear
      break;
    }
    case kFloatval: {
      // No need to clear
      break;
    }
    case kStringval: {
      value_.stringval_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void MsgTypedValue::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgTypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_id_ = 0u;
  clear_value();
  _internal_metadata_.Clear();
}

bool MsgTypedValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgTypedValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 intval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.intval_)));
          set_has_intval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float floatval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.floatval_)));
          set_has_floatval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stringval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stringval().data(), static_cast<int>(this->stringval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.osidbg.MsgTypedValue.stringval"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgTypedValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgTypedValue)
  return false;
#undef DO_
}

void MsgTypedValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgTypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_id = 1;
  if (this->type_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_id(), output);
  }

  // int64 intval = 2;
  if (has_intval()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->intval(), output);
  }

  // float floatval = 3;
  if (has_floatval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->floatval(), output);
  }

  // string stringval = 4;
  if (has_stringval()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringval().data(), static_cast<int>(this->stringval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.osidbg.MsgTypedValue.stringval");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->stringval(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgTypedValue)
}

size_t MsgTypedValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgTypedValue)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 type_id = 1;
  if (this->type_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_id());
  }

  switch (value_case()) {
    // int64 intval = 2;
    case kIntval: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->intval());
      break;
    }
    // float floatval = 3;
    case kFloatval: {
      total_size += 1 + 4;
      break;
    }
    // string stringval = 4;
    case kStringval: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringval());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgTypedValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgTypedValue*>(&from));
}

void MsgTypedValue::MergeFrom(const MsgTypedValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgTypedValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_id() != 0) {
    set_type_id(from.type_id());
  }
  switch (from.value_case()) {
    case kIntval: {
      set_intval(from.intval());
      break;
    }
    case kFloatval: {
      set_floatval(from.floatval());
      break;
    }
    case kStringval: {
      set_stringval(from.stringval());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void MsgTypedValue::CopyFrom(const MsgTypedValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgTypedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTypedValue::IsInitialized() const {
  return true;
}

void MsgTypedValue::Swap(MsgTypedValue* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgTypedValue* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgTypedValue::UnsafeArenaSwap(MsgTypedValue* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgTypedValue::InternalSwap(MsgTypedValue* other) {
  using std::swap;
  swap(type_id_, other->type_id_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgTypedValue::GetTypeName() const {
  return "dse.osidbg.MsgTypedValue";
}


// ===================================================================

void MsgTuple::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTuple::kColumnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTuple::MsgTuple()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgTuple.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgTuple)
}
MsgTuple::MsgTuple(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  column_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgTuple.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgTuple)
}
MsgTuple::MsgTuple(const MsgTuple& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      column_(from.column_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgTuple)
}

void MsgTuple::SharedCtor() {
}

MsgTuple::~MsgTuple() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgTuple)
  SharedDtor();
}

void MsgTuple::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MsgTuple::ArenaDtor(void* object) {
  MsgTuple* _this = reinterpret_cast< MsgTuple* >(object);
  (void)_this;
}
void MsgTuple::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgTuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgTuple& MsgTuple::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgTuple.base);
  return *internal_default_instance();
}


void MsgTuple::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgTuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  column_.Clear();
  _internal_metadata_.Clear();
}

bool MsgTuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgTuple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dse.osidbg.MsgTypedValue column = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_column()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgTuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgTuple)
  return false;
#undef DO_
}

void MsgTuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgTuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dse.osidbg.MsgTypedValue column = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->column_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->column(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgTuple)
}

size_t MsgTuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgTuple)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.osidbg.MsgTypedValue column = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->column_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->column(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgTuple::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgTuple*>(&from));
}

void MsgTuple::MergeFrom(const MsgTuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgTuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  column_.MergeFrom(from.column_);
}

void MsgTuple::CopyFrom(const MsgTuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTuple::IsInitialized() const {
  return true;
}

void MsgTuple::Swap(MsgTuple* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgTuple* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgTuple::UnsafeArenaSwap(MsgTuple* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgTuple::InternalSwap(MsgTuple* other) {
  using std::swap;
  CastToBase(&column_)->InternalSwap(CastToBase(&other->column_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgTuple::GetTypeName() const {
  return "dse.osidbg.MsgTuple";
}


// ===================================================================

void MsgFrame::InitAsDefaultInstance() {
  ::dse::osidbg::_MsgFrame_default_instance_._instance.get_mutable()->tuple_ = const_cast< ::dse::osidbg::MsgTuple*>(
      ::dse::osidbg::MsgTuple::internal_default_instance());
}
void MsgFrame::unsafe_arena_set_allocated_tuple(
    ::dse::osidbg::MsgTuple* tuple) {
  if (GetArenaNoVirtual() == NULL) {
    delete tuple_;
  }
  tuple_ = tuple;
  if (tuple) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.osidbg.MsgFrame.tuple)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgFrame::kNodeIdFieldNumber;
const int MsgFrame::kTypeFieldNumber;
const int MsgFrame::kTupleFieldNumber;
const int MsgFrame::kGoalIdFieldNumber;
const int MsgFrame::kActionIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgFrame::MsgFrame()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgFrame)
}
MsgFrame::MsgFrame(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgFrame.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgFrame)
}
MsgFrame::MsgFrame(const MsgFrame& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tuple()) {
    tuple_ = new ::dse::osidbg::MsgTuple(*from.tuple_);
  } else {
    tuple_ = NULL;
  }
  ::memcpy(&node_id_, &from.node_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_index_) -
    reinterpret_cast<char*>(&node_id_)) + sizeof(action_index_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgFrame)
}

void MsgFrame::SharedCtor() {
  ::memset(&tuple_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_index_) -
      reinterpret_cast<char*>(&tuple_)) + sizeof(action_index_));
}

MsgFrame::~MsgFrame() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgFrame)
  SharedDtor();
}

void MsgFrame::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete tuple_;
}

void MsgFrame::ArenaDtor(void* object) {
  MsgFrame* _this = reinterpret_cast< MsgFrame* >(object);
  (void)_this;
}
void MsgFrame::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgFrame& MsgFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgFrame.base);
  return *internal_default_instance();
}


void MsgFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tuple_ != NULL) {
    delete tuple_;
  }
  tuple_ = NULL;
  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_index_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(action_index_));
  _internal_metadata_.Clear();
}

bool MsgFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.MsgFrame.FrameType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::dse::osidbg::MsgFrame_FrameType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.MsgTuple tuple = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 goal_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goal_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgFrame)
  return false;
#undef DO_
}

void MsgFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->node_id(), output);
  }

  // .dse.osidbg.MsgFrame.FrameType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .dse.osidbg.MsgTuple tuple = 3;
  if (this->has_tuple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_tuple(), output);
  }

  // uint32 goal_id = 4;
  if (this->goal_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->goal_id(), output);
  }

  // uint32 action_index = 5;
  if (this->action_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->action_index(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgFrame)
}

size_t MsgFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgFrame)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.osidbg.MsgTuple tuple = 3;
  if (this->has_tuple()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tuple_);
  }

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  // .dse.osidbg.MsgFrame.FrameType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 goal_id = 4;
  if (this->goal_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goal_id());
  }

  // uint32 action_index = 5;
  if (this->action_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgFrame::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgFrame*>(&from));
}

void MsgFrame::MergeFrom(const MsgFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tuple()) {
    mutable_tuple()->::dse::osidbg::MsgTuple::MergeFrom(from.tuple());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.goal_id() != 0) {
    set_goal_id(from.goal_id());
  }
  if (from.action_index() != 0) {
    set_action_index(from.action_index());
  }
}

void MsgFrame::CopyFrom(const MsgFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFrame::IsInitialized() const {
  return true;
}

void MsgFrame::Swap(MsgFrame* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgFrame* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgFrame::UnsafeArenaSwap(MsgFrame* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgFrame::InternalSwap(MsgFrame* other) {
  using std::swap;
  swap(tuple_, other->tuple_);
  swap(node_id_, other->node_id_);
  swap(type_, other->type_);
  swap(goal_id_, other->goal_id_);
  swap(action_index_, other->action_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgFrame::GetTypeName() const {
  return "dse.osidbg.MsgFrame";
}


// ===================================================================

void DbgIdentifyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgIdentifyRequest::kProtocolVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgIdentifyRequest::DbgIdentifyRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_DbgIdentifyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.DbgIdentifyRequest)
}
DbgIdentifyRequest::DbgIdentifyRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgIdentifyRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.DbgIdentifyRequest)
}
DbgIdentifyRequest::DbgIdentifyRequest(const DbgIdentifyRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocol_version_ = from.protocol_version_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.DbgIdentifyRequest)
}

void DbgIdentifyRequest::SharedCtor() {
  protocol_version_ = 0u;
}

DbgIdentifyRequest::~DbgIdentifyRequest() {
  // @@protoc_insertion_point(destructor:dse.osidbg.DbgIdentifyRequest)
  SharedDtor();
}

void DbgIdentifyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgIdentifyRequest::ArenaDtor(void* object) {
  DbgIdentifyRequest* _this = reinterpret_cast< DbgIdentifyRequest* >(object);
  (void)_this;
}
void DbgIdentifyRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgIdentifyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgIdentifyRequest& DbgIdentifyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgIdentifyRequest.base);
  return *internal_default_instance();
}


void DbgIdentifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.DbgIdentifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protocol_version_ = 0u;
  _internal_metadata_.Clear();
}

bool DbgIdentifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.DbgIdentifyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.DbgIdentifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.DbgIdentifyRequest)
  return false;
#undef DO_
}

void DbgIdentifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.DbgIdentifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->protocol_version(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.DbgIdentifyRequest)
}

size_t DbgIdentifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.DbgIdentifyRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protocol_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgIdentifyRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgIdentifyRequest*>(&from));
}

void DbgIdentifyRequest::MergeFrom(const DbgIdentifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.DbgIdentifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protocol_version() != 0) {
    set_protocol_version(from.protocol_version());
  }
}

void DbgIdentifyRequest::CopyFrom(const DbgIdentifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.DbgIdentifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgIdentifyRequest::IsInitialized() const {
  return true;
}

void DbgIdentifyRequest::Swap(DbgIdentifyRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgIdentifyRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgIdentifyRequest::UnsafeArenaSwap(DbgIdentifyRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgIdentifyRequest::InternalSwap(DbgIdentifyRequest* other) {
  using std::swap;
  swap(protocol_version_, other->protocol_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgIdentifyRequest::GetTypeName() const {
  return "dse.osidbg.DbgIdentifyRequest";
}


// ===================================================================

void BkVersionInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkVersionInfoResponse::kProtocolVersionFieldNumber;
const int BkVersionInfoResponse::kStoryLoadedFieldNumber;
const int BkVersionInfoResponse::kStoryInitializedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkVersionInfoResponse::BkVersionInfoResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkVersionInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkVersionInfoResponse)
}
BkVersionInfoResponse::BkVersionInfoResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkVersionInfoResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkVersionInfoResponse)
}
BkVersionInfoResponse::BkVersionInfoResponse(const BkVersionInfoResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&protocol_version_, &from.protocol_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&story_initialized_) -
    reinterpret_cast<char*>(&protocol_version_)) + sizeof(story_initialized_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkVersionInfoResponse)
}

void BkVersionInfoResponse::SharedCtor() {
  ::memset(&protocol_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&story_initialized_) -
      reinterpret_cast<char*>(&protocol_version_)) + sizeof(story_initialized_));
}

BkVersionInfoResponse::~BkVersionInfoResponse() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkVersionInfoResponse)
  SharedDtor();
}

void BkVersionInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkVersionInfoResponse::ArenaDtor(void* object) {
  BkVersionInfoResponse* _this = reinterpret_cast< BkVersionInfoResponse* >(object);
  (void)_this;
}
void BkVersionInfoResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkVersionInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkVersionInfoResponse& BkVersionInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkVersionInfoResponse.base);
  return *internal_default_instance();
}


void BkVersionInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkVersionInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&protocol_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&story_initialized_) -
      reinterpret_cast<char*>(&protocol_version_)) + sizeof(story_initialized_));
  _internal_metadata_.Clear();
}

bool BkVersionInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkVersionInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool story_loaded = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &story_loaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool story_initialized = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &story_initialized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkVersionInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkVersionInfoResponse)
  return false;
#undef DO_
}

void BkVersionInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkVersionInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->protocol_version(), output);
  }

  // bool story_loaded = 2;
  if (this->story_loaded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->story_loaded(), output);
  }

  // bool story_initialized = 4;
  if (this->story_initialized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->story_initialized(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkVersionInfoResponse)
}

size_t BkVersionInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkVersionInfoResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 protocol_version = 1;
  if (this->protocol_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protocol_version());
  }

  // bool story_loaded = 2;
  if (this->story_loaded() != 0) {
    total_size += 1 + 1;
  }

  // bool story_initialized = 4;
  if (this->story_initialized() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkVersionInfoResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkVersionInfoResponse*>(&from));
}

void BkVersionInfoResponse::MergeFrom(const BkVersionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkVersionInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protocol_version() != 0) {
    set_protocol_version(from.protocol_version());
  }
  if (from.story_loaded() != 0) {
    set_story_loaded(from.story_loaded());
  }
  if (from.story_initialized() != 0) {
    set_story_initialized(from.story_initialized());
  }
}

void BkVersionInfoResponse::CopyFrom(const BkVersionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkVersionInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkVersionInfoResponse::IsInitialized() const {
  return true;
}

void BkVersionInfoResponse::Swap(BkVersionInfoResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkVersionInfoResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkVersionInfoResponse::UnsafeArenaSwap(BkVersionInfoResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkVersionInfoResponse::InternalSwap(BkVersionInfoResponse* other) {
  using std::swap;
  swap(protocol_version_, other->protocol_version_);
  swap(story_loaded_, other->story_loaded_);
  swap(story_initialized_, other->story_initialized_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkVersionInfoResponse::GetTypeName() const {
  return "dse.osidbg.BkVersionInfoResponse";
}


// ===================================================================

void DbgSetGlobalBreakpoints::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgSetGlobalBreakpoints::kBreakpointMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgSetGlobalBreakpoints::DbgSetGlobalBreakpoints()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_DbgSetGlobalBreakpoints.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.DbgSetGlobalBreakpoints)
}
DbgSetGlobalBreakpoints::DbgSetGlobalBreakpoints(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgSetGlobalBreakpoints.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.DbgSetGlobalBreakpoints)
}
DbgSetGlobalBreakpoints::DbgSetGlobalBreakpoints(const DbgSetGlobalBreakpoints& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  breakpoint_mask_ = from.breakpoint_mask_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.DbgSetGlobalBreakpoints)
}

void DbgSetGlobalBreakpoints::SharedCtor() {
  breakpoint_mask_ = 0u;
}

DbgSetGlobalBreakpoints::~DbgSetGlobalBreakpoints() {
  // @@protoc_insertion_point(destructor:dse.osidbg.DbgSetGlobalBreakpoints)
  SharedDtor();
}

void DbgSetGlobalBreakpoints::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgSetGlobalBreakpoints::ArenaDtor(void* object) {
  DbgSetGlobalBreakpoints* _this = reinterpret_cast< DbgSetGlobalBreakpoints* >(object);
  (void)_this;
}
void DbgSetGlobalBreakpoints::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgSetGlobalBreakpoints::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgSetGlobalBreakpoints& DbgSetGlobalBreakpoints::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgSetGlobalBreakpoints.base);
  return *internal_default_instance();
}


void DbgSetGlobalBreakpoints::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.DbgSetGlobalBreakpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  breakpoint_mask_ = 0u;
  _internal_metadata_.Clear();
}

bool DbgSetGlobalBreakpoints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.DbgSetGlobalBreakpoints)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 breakpoint_mask = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &breakpoint_mask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.DbgSetGlobalBreakpoints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.DbgSetGlobalBreakpoints)
  return false;
#undef DO_
}

void DbgSetGlobalBreakpoints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.DbgSetGlobalBreakpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 breakpoint_mask = 1;
  if (this->breakpoint_mask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->breakpoint_mask(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.DbgSetGlobalBreakpoints)
}

size_t DbgSetGlobalBreakpoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.DbgSetGlobalBreakpoints)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 breakpoint_mask = 1;
  if (this->breakpoint_mask() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->breakpoint_mask());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgSetGlobalBreakpoints::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgSetGlobalBreakpoints*>(&from));
}

void DbgSetGlobalBreakpoints::MergeFrom(const DbgSetGlobalBreakpoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.DbgSetGlobalBreakpoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.breakpoint_mask() != 0) {
    set_breakpoint_mask(from.breakpoint_mask());
  }
}

void DbgSetGlobalBreakpoints::CopyFrom(const DbgSetGlobalBreakpoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.DbgSetGlobalBreakpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgSetGlobalBreakpoints::IsInitialized() const {
  return true;
}

void DbgSetGlobalBreakpoints::Swap(DbgSetGlobalBreakpoints* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgSetGlobalBreakpoints* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgSetGlobalBreakpoints::UnsafeArenaSwap(DbgSetGlobalBreakpoints* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgSetGlobalBreakpoints::InternalSwap(DbgSetGlobalBreakpoints* other) {
  using std::swap;
  swap(breakpoint_mask_, other->breakpoint_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgSetGlobalBreakpoints::GetTypeName() const {
  return "dse.osidbg.DbgSetGlobalBreakpoints";
}


// ===================================================================

void MsgBreakpoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgBreakpoint::kNodeIdFieldNumber;
const int MsgBreakpoint::kBreakpointMaskFieldNumber;
const int MsgBreakpoint::kGoalIdFieldNumber;
const int MsgBreakpoint::kIsInitActionFieldNumber;
const int MsgBreakpoint::kActionIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgBreakpoint::MsgBreakpoint()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgBreakpoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgBreakpoint)
}
MsgBreakpoint::MsgBreakpoint(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgBreakpoint.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgBreakpoint)
}
MsgBreakpoint::MsgBreakpoint(const MsgBreakpoint& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&node_id_, &from.node_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_index_) -
    reinterpret_cast<char*>(&node_id_)) + sizeof(action_index_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgBreakpoint)
}

void MsgBreakpoint::SharedCtor() {
  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_index_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(action_index_));
}

MsgBreakpoint::~MsgBreakpoint() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgBreakpoint)
  SharedDtor();
}

void MsgBreakpoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MsgBreakpoint::ArenaDtor(void* object) {
  MsgBreakpoint* _this = reinterpret_cast< MsgBreakpoint* >(object);
  (void)_this;
}
void MsgBreakpoint::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgBreakpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgBreakpoint& MsgBreakpoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgBreakpoint.base);
  return *internal_default_instance();
}


void MsgBreakpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgBreakpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_index_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(action_index_));
  _internal_metadata_.Clear();
}

bool MsgBreakpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgBreakpoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 breakpoint_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &breakpoint_mask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 goal_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goal_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_init_action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_init_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 action_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgBreakpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgBreakpoint)
  return false;
#undef DO_
}

void MsgBreakpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgBreakpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->node_id(), output);
  }

  // uint32 breakpoint_mask = 2;
  if (this->breakpoint_mask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->breakpoint_mask(), output);
  }

  // uint32 goal_id = 3;
  if (this->goal_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->goal_id(), output);
  }

  // bool is_init_action = 4;
  if (this->is_init_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_init_action(), output);
  }

  // int32 action_index = 5;
  if (this->action_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->action_index(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgBreakpoint)
}

size_t MsgBreakpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgBreakpoint)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  // uint32 breakpoint_mask = 2;
  if (this->breakpoint_mask() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->breakpoint_mask());
  }

  // uint32 goal_id = 3;
  if (this->goal_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goal_id());
  }

  // bool is_init_action = 4;
  if (this->is_init_action() != 0) {
    total_size += 1 + 1;
  }

  // int32 action_index = 5;
  if (this->action_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgBreakpoint::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgBreakpoint*>(&from));
}

void MsgBreakpoint::MergeFrom(const MsgBreakpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgBreakpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
  if (from.breakpoint_mask() != 0) {
    set_breakpoint_mask(from.breakpoint_mask());
  }
  if (from.goal_id() != 0) {
    set_goal_id(from.goal_id());
  }
  if (from.is_init_action() != 0) {
    set_is_init_action(from.is_init_action());
  }
  if (from.action_index() != 0) {
    set_action_index(from.action_index());
  }
}

void MsgBreakpoint::CopyFrom(const MsgBreakpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgBreakpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBreakpoint::IsInitialized() const {
  return true;
}

void MsgBreakpoint::Swap(MsgBreakpoint* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgBreakpoint* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgBreakpoint::UnsafeArenaSwap(MsgBreakpoint* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgBreakpoint::InternalSwap(MsgBreakpoint* other) {
  using std::swap;
  swap(node_id_, other->node_id_);
  swap(breakpoint_mask_, other->breakpoint_mask_);
  swap(goal_id_, other->goal_id_);
  swap(is_init_action_, other->is_init_action_);
  swap(action_index_, other->action_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgBreakpoint::GetTypeName() const {
  return "dse.osidbg.MsgBreakpoint";
}


// ===================================================================

void DbgSetBreakpoints::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgSetBreakpoints::kBreakpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgSetBreakpoints::DbgSetBreakpoints()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_DbgSetBreakpoints.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.DbgSetBreakpoints)
}
DbgSetBreakpoints::DbgSetBreakpoints(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  breakpoint_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgSetBreakpoints.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.DbgSetBreakpoints)
}
DbgSetBreakpoints::DbgSetBreakpoints(const DbgSetBreakpoints& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      breakpoint_(from.breakpoint_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.DbgSetBreakpoints)
}

void DbgSetBreakpoints::SharedCtor() {
}

DbgSetBreakpoints::~DbgSetBreakpoints() {
  // @@protoc_insertion_point(destructor:dse.osidbg.DbgSetBreakpoints)
  SharedDtor();
}

void DbgSetBreakpoints::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgSetBreakpoints::ArenaDtor(void* object) {
  DbgSetBreakpoints* _this = reinterpret_cast< DbgSetBreakpoints* >(object);
  (void)_this;
}
void DbgSetBreakpoints::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgSetBreakpoints::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgSetBreakpoints& DbgSetBreakpoints::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgSetBreakpoints.base);
  return *internal_default_instance();
}


void DbgSetBreakpoints::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.DbgSetBreakpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  breakpoint_.Clear();
  _internal_metadata_.Clear();
}

bool DbgSetBreakpoints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.DbgSetBreakpoints)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dse.osidbg.MsgBreakpoint breakpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_breakpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.DbgSetBreakpoints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.DbgSetBreakpoints)
  return false;
#undef DO_
}

void DbgSetBreakpoints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.DbgSetBreakpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dse.osidbg.MsgBreakpoint breakpoint = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->breakpoint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->breakpoint(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.DbgSetBreakpoints)
}

size_t DbgSetBreakpoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.DbgSetBreakpoints)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.osidbg.MsgBreakpoint breakpoint = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->breakpoint_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->breakpoint(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgSetBreakpoints::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgSetBreakpoints*>(&from));
}

void DbgSetBreakpoints::MergeFrom(const DbgSetBreakpoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.DbgSetBreakpoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  breakpoint_.MergeFrom(from.breakpoint_);
}

void DbgSetBreakpoints::CopyFrom(const DbgSetBreakpoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.DbgSetBreakpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgSetBreakpoints::IsInitialized() const {
  return true;
}

void DbgSetBreakpoints::Swap(DbgSetBreakpoints* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgSetBreakpoints* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgSetBreakpoints::UnsafeArenaSwap(DbgSetBreakpoints* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgSetBreakpoints::InternalSwap(DbgSetBreakpoints* other) {
  using std::swap;
  CastToBase(&breakpoint_)->InternalSwap(CastToBase(&other->breakpoint_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgSetBreakpoints::GetTypeName() const {
  return "dse.osidbg.DbgSetBreakpoints";
}


// ===================================================================

void BkBreakpointTriggered::InitAsDefaultInstance() {
  ::dse::osidbg::_BkBreakpointTriggered_default_instance_._instance.get_mutable()->query_results_ = const_cast< ::dse::osidbg::MsgTuple*>(
      ::dse::osidbg::MsgTuple::internal_default_instance());
}
void BkBreakpointTriggered::unsafe_arena_set_allocated_query_results(
    ::dse::osidbg::MsgTuple* query_results) {
  if (GetArenaNoVirtual() == NULL) {
    delete query_results_;
  }
  query_results_ = query_results;
  if (query_results) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.osidbg.BkBreakpointTriggered.query_results)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkBreakpointTriggered::kCallStackFieldNumber;
const int BkBreakpointTriggered::kQuerySucceededFieldNumber;
const int BkBreakpointTriggered::kQueryResultsFieldNumber;
const int BkBreakpointTriggered::kQueryNodeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkBreakpointTriggered::BkBreakpointTriggered()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkBreakpointTriggered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkBreakpointTriggered)
}
BkBreakpointTriggered::BkBreakpointTriggered(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  call_stack_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkBreakpointTriggered.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkBreakpointTriggered)
}
BkBreakpointTriggered::BkBreakpointTriggered(const BkBreakpointTriggered& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      call_stack_(from.call_stack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_query_results()) {
    query_results_ = new ::dse::osidbg::MsgTuple(*from.query_results_);
  } else {
    query_results_ = NULL;
  }
  ::memcpy(&query_succeeded_, &from.query_succeeded_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_node_id_) -
    reinterpret_cast<char*>(&query_succeeded_)) + sizeof(query_node_id_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkBreakpointTriggered)
}

void BkBreakpointTriggered::SharedCtor() {
  ::memset(&query_results_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_node_id_) -
      reinterpret_cast<char*>(&query_results_)) + sizeof(query_node_id_));
}

BkBreakpointTriggered::~BkBreakpointTriggered() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkBreakpointTriggered)
  SharedDtor();
}

void BkBreakpointTriggered::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete query_results_;
}

void BkBreakpointTriggered::ArenaDtor(void* object) {
  BkBreakpointTriggered* _this = reinterpret_cast< BkBreakpointTriggered* >(object);
  (void)_this;
}
void BkBreakpointTriggered::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkBreakpointTriggered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkBreakpointTriggered& BkBreakpointTriggered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkBreakpointTriggered.base);
  return *internal_default_instance();
}


void BkBreakpointTriggered::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkBreakpointTriggered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  call_stack_.Clear();
  if (GetArenaNoVirtual() == NULL && query_results_ != NULL) {
    delete query_results_;
  }
  query_results_ = NULL;
  ::memset(&query_succeeded_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_node_id_) -
      reinterpret_cast<char*>(&query_succeeded_)) + sizeof(query_node_id_));
  _internal_metadata_.Clear();
}

bool BkBreakpointTriggered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkBreakpointTriggered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dse.osidbg.MsgFrame call_stack = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_call_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkBreakpointTriggered.QueryStatus query_succeeded = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_query_succeeded(static_cast< ::dse::osidbg::BkBreakpointTriggered_QueryStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.MsgTuple query_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 query_node_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkBreakpointTriggered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkBreakpointTriggered)
  return false;
#undef DO_
}

void BkBreakpointTriggered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkBreakpointTriggered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dse.osidbg.MsgFrame call_stack = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->call_stack_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->call_stack(static_cast<int>(i)),
      output);
  }

  // .dse.osidbg.BkBreakpointTriggered.QueryStatus query_succeeded = 2;
  if (this->query_succeeded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->query_succeeded(), output);
  }

  // .dse.osidbg.MsgTuple query_results = 3;
  if (this->has_query_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_query_results(), output);
  }

  // uint32 query_node_id = 4;
  if (this->query_node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->query_node_id(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkBreakpointTriggered)
}

size_t BkBreakpointTriggered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkBreakpointTriggered)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.osidbg.MsgFrame call_stack = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->call_stack_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->call_stack(static_cast<int>(i)));
    }
  }

  // .dse.osidbg.MsgTuple query_results = 3;
  if (this->has_query_results()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *query_results_);
  }

  // .dse.osidbg.BkBreakpointTriggered.QueryStatus query_succeeded = 2;
  if (this->query_succeeded() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->query_succeeded());
  }

  // uint32 query_node_id = 4;
  if (this->query_node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->query_node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkBreakpointTriggered::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkBreakpointTriggered*>(&from));
}

void BkBreakpointTriggered::MergeFrom(const BkBreakpointTriggered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkBreakpointTriggered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  call_stack_.MergeFrom(from.call_stack_);
  if (from.has_query_results()) {
    mutable_query_results()->::dse::osidbg::MsgTuple::MergeFrom(from.query_results());
  }
  if (from.query_succeeded() != 0) {
    set_query_succeeded(from.query_succeeded());
  }
  if (from.query_node_id() != 0) {
    set_query_node_id(from.query_node_id());
  }
}

void BkBreakpointTriggered::CopyFrom(const BkBreakpointTriggered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkBreakpointTriggered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkBreakpointTriggered::IsInitialized() const {
  return true;
}

void BkBreakpointTriggered::Swap(BkBreakpointTriggered* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkBreakpointTriggered* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkBreakpointTriggered::UnsafeArenaSwap(BkBreakpointTriggered* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkBreakpointTriggered::InternalSwap(BkBreakpointTriggered* other) {
  using std::swap;
  CastToBase(&call_stack_)->InternalSwap(CastToBase(&other->call_stack_));
  swap(query_results_, other->query_results_);
  swap(query_succeeded_, other->query_succeeded_);
  swap(query_node_id_, other->query_node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkBreakpointTriggered::GetTypeName() const {
  return "dse.osidbg.BkBreakpointTriggered";
}


// ===================================================================

void BkGlobalBreakpointTriggered::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkGlobalBreakpointTriggered::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkGlobalBreakpointTriggered::BkGlobalBreakpointTriggered()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkGlobalBreakpointTriggered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkGlobalBreakpointTriggered)
}
BkGlobalBreakpointTriggered::BkGlobalBreakpointTriggered(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkGlobalBreakpointTriggered.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkGlobalBreakpointTriggered)
}
BkGlobalBreakpointTriggered::BkGlobalBreakpointTriggered(const BkGlobalBreakpointTriggered& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkGlobalBreakpointTriggered)
}

void BkGlobalBreakpointTriggered::SharedCtor() {
  reason_ = 0;
}

BkGlobalBreakpointTriggered::~BkGlobalBreakpointTriggered() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkGlobalBreakpointTriggered)
  SharedDtor();
}

void BkGlobalBreakpointTriggered::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkGlobalBreakpointTriggered::ArenaDtor(void* object) {
  BkGlobalBreakpointTriggered* _this = reinterpret_cast< BkGlobalBreakpointTriggered* >(object);
  (void)_this;
}
void BkGlobalBreakpointTriggered::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkGlobalBreakpointTriggered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkGlobalBreakpointTriggered& BkGlobalBreakpointTriggered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkGlobalBreakpointTriggered.base);
  return *internal_default_instance();
}


void BkGlobalBreakpointTriggered::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkGlobalBreakpointTriggered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool BkGlobalBreakpointTriggered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkGlobalBreakpointTriggered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.osidbg.BkGlobalBreakpointTriggered.Reason reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::dse::osidbg::BkGlobalBreakpointTriggered_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkGlobalBreakpointTriggered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkGlobalBreakpointTriggered)
  return false;
#undef DO_
}

void BkGlobalBreakpointTriggered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkGlobalBreakpointTriggered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.osidbg.BkGlobalBreakpointTriggered.Reason reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkGlobalBreakpointTriggered)
}

size_t BkGlobalBreakpointTriggered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkGlobalBreakpointTriggered)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.osidbg.BkGlobalBreakpointTriggered.Reason reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkGlobalBreakpointTriggered::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkGlobalBreakpointTriggered*>(&from));
}

void BkGlobalBreakpointTriggered::MergeFrom(const BkGlobalBreakpointTriggered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkGlobalBreakpointTriggered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void BkGlobalBreakpointTriggered::CopyFrom(const BkGlobalBreakpointTriggered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkGlobalBreakpointTriggered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkGlobalBreakpointTriggered::IsInitialized() const {
  return true;
}

void BkGlobalBreakpointTriggered::Swap(BkGlobalBreakpointTriggered* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkGlobalBreakpointTriggered* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkGlobalBreakpointTriggered::UnsafeArenaSwap(BkGlobalBreakpointTriggered* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkGlobalBreakpointTriggered::InternalSwap(BkGlobalBreakpointTriggered* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkGlobalBreakpointTriggered::GetTypeName() const {
  return "dse.osidbg.BkGlobalBreakpointTriggered";
}


// ===================================================================

void DbgContinue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgContinue::kActionFieldNumber;
const int DbgContinue::kBreakpointMaskFieldNumber;
const int DbgContinue::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgContinue::DbgContinue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_DbgContinue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.DbgContinue)
}
DbgContinue::DbgContinue(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgContinue.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.DbgContinue)
}
DbgContinue::DbgContinue(const DbgContinue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&action_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.DbgContinue)
}

void DbgContinue::SharedCtor() {
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&action_)) + sizeof(flags_));
}

DbgContinue::~DbgContinue() {
  // @@protoc_insertion_point(destructor:dse.osidbg.DbgContinue)
  SharedDtor();
}

void DbgContinue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgContinue::ArenaDtor(void* object) {
  DbgContinue* _this = reinterpret_cast< DbgContinue* >(object);
  (void)_this;
}
void DbgContinue::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgContinue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgContinue& DbgContinue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgContinue.base);
  return *internal_default_instance();
}


void DbgContinue::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.DbgContinue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&action_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

bool DbgContinue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.DbgContinue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.osidbg.DbgContinue.Action action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::dse::osidbg::DbgContinue_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 breakpoint_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &breakpoint_mask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.DbgContinue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.DbgContinue)
  return false;
#undef DO_
}

void DbgContinue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.DbgContinue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.osidbg.DbgContinue.Action action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // uint32 breakpoint_mask = 2;
  if (this->breakpoint_mask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->breakpoint_mask(), output);
  }

  // uint32 flags = 3;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.DbgContinue)
}

size_t DbgContinue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.DbgContinue)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.osidbg.DbgContinue.Action action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // uint32 breakpoint_mask = 2;
  if (this->breakpoint_mask() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->breakpoint_mask());
  }

  // uint32 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgContinue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgContinue*>(&from));
}

void DbgContinue::MergeFrom(const DbgContinue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.DbgContinue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.breakpoint_mask() != 0) {
    set_breakpoint_mask(from.breakpoint_mask());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void DbgContinue::CopyFrom(const DbgContinue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.DbgContinue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgContinue::IsInitialized() const {
  return true;
}

void DbgContinue::Swap(DbgContinue* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgContinue* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgContinue::UnsafeArenaSwap(DbgContinue* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgContinue::InternalSwap(DbgContinue* other) {
  using std::swap;
  swap(action_, other->action_);
  swap(breakpoint_mask_, other->breakpoint_mask_);
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgContinue::GetTypeName() const {
  return "dse.osidbg.DbgContinue";
}


// ===================================================================

void DbgGetDatabaseContents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgGetDatabaseContents::kDatabaseIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgGetDatabaseContents::DbgGetDatabaseContents()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_DbgGetDatabaseContents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.DbgGetDatabaseContents)
}
DbgGetDatabaseContents::DbgGetDatabaseContents(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgGetDatabaseContents.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.DbgGetDatabaseContents)
}
DbgGetDatabaseContents::DbgGetDatabaseContents(const DbgGetDatabaseContents& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_id_ = from.database_id_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.DbgGetDatabaseContents)
}

void DbgGetDatabaseContents::SharedCtor() {
  database_id_ = 0u;
}

DbgGetDatabaseContents::~DbgGetDatabaseContents() {
  // @@protoc_insertion_point(destructor:dse.osidbg.DbgGetDatabaseContents)
  SharedDtor();
}

void DbgGetDatabaseContents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgGetDatabaseContents::ArenaDtor(void* object) {
  DbgGetDatabaseContents* _this = reinterpret_cast< DbgGetDatabaseContents* >(object);
  (void)_this;
}
void DbgGetDatabaseContents::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgGetDatabaseContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgGetDatabaseContents& DbgGetDatabaseContents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgGetDatabaseContents.base);
  return *internal_default_instance();
}


void DbgGetDatabaseContents::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.DbgGetDatabaseContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DbgGetDatabaseContents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.DbgGetDatabaseContents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 database_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &database_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.DbgGetDatabaseContents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.DbgGetDatabaseContents)
  return false;
#undef DO_
}

void DbgGetDatabaseContents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.DbgGetDatabaseContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 database_id = 1;
  if (this->database_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->database_id(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.DbgGetDatabaseContents)
}

size_t DbgGetDatabaseContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.DbgGetDatabaseContents)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 database_id = 1;
  if (this->database_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->database_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgGetDatabaseContents::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgGetDatabaseContents*>(&from));
}

void DbgGetDatabaseContents::MergeFrom(const DbgGetDatabaseContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.DbgGetDatabaseContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database_id() != 0) {
    set_database_id(from.database_id());
  }
}

void DbgGetDatabaseContents::CopyFrom(const DbgGetDatabaseContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.DbgGetDatabaseContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgGetDatabaseContents::IsInitialized() const {
  return true;
}

void DbgGetDatabaseContents::Swap(DbgGetDatabaseContents* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgGetDatabaseContents* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgGetDatabaseContents::UnsafeArenaSwap(DbgGetDatabaseContents* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgGetDatabaseContents::InternalSwap(DbgGetDatabaseContents* other) {
  using std::swap;
  swap(database_id_, other->database_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgGetDatabaseContents::GetTypeName() const {
  return "dse.osidbg.DbgGetDatabaseContents";
}


// ===================================================================

void DbgSyncStory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgSyncStory::DbgSyncStory()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_DbgSyncStory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.DbgSyncStory)
}
DbgSyncStory::DbgSyncStory(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgSyncStory.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.DbgSyncStory)
}
DbgSyncStory::DbgSyncStory(const DbgSyncStory& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.DbgSyncStory)
}

void DbgSyncStory::SharedCtor() {
}

DbgSyncStory::~DbgSyncStory() {
  // @@protoc_insertion_point(destructor:dse.osidbg.DbgSyncStory)
  SharedDtor();
}

void DbgSyncStory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DbgSyncStory::ArenaDtor(void* object) {
  DbgSyncStory* _this = reinterpret_cast< DbgSyncStory* >(object);
  (void)_this;
}
void DbgSyncStory::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgSyncStory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgSyncStory& DbgSyncStory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgSyncStory.base);
  return *internal_default_instance();
}


void DbgSyncStory::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.DbgSyncStory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DbgSyncStory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.DbgSyncStory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.DbgSyncStory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.DbgSyncStory)
  return false;
#undef DO_
}

void DbgSyncStory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.DbgSyncStory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.DbgSyncStory)
}

size_t DbgSyncStory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.DbgSyncStory)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgSyncStory::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgSyncStory*>(&from));
}

void DbgSyncStory::MergeFrom(const DbgSyncStory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.DbgSyncStory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DbgSyncStory::CopyFrom(const DbgSyncStory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.DbgSyncStory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgSyncStory::IsInitialized() const {
  return true;
}

void DbgSyncStory::Swap(DbgSyncStory* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgSyncStory* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgSyncStory::UnsafeArenaSwap(DbgSyncStory* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgSyncStory::InternalSwap(DbgSyncStory* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgSyncStory::GetTypeName() const {
  return "dse.osidbg.DbgSyncStory";
}


// ===================================================================

void DbgEvaluate::InitAsDefaultInstance() {
  ::dse::osidbg::_DbgEvaluate_default_instance_._instance.get_mutable()->params_ = const_cast< ::dse::osidbg::MsgTuple*>(
      ::dse::osidbg::MsgTuple::internal_default_instance());
}
void DbgEvaluate::unsafe_arena_set_allocated_params(
    ::dse::osidbg::MsgTuple* params) {
  if (GetArenaNoVirtual() == NULL) {
    delete params_;
  }
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dse.osidbg.DbgEvaluate.params)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbgEvaluate::kTypeFieldNumber;
const int DbgEvaluate::kNodeIdFieldNumber;
const int DbgEvaluate::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbgEvaluate::DbgEvaluate()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_DbgEvaluate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.DbgEvaluate)
}
DbgEvaluate::DbgEvaluate(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgEvaluate.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.DbgEvaluate)
}
DbgEvaluate::DbgEvaluate(const DbgEvaluate& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_params()) {
    params_ = new ::dse::osidbg::MsgTuple(*from.params_);
  } else {
    params_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_id_) -
    reinterpret_cast<char*>(&type_)) + sizeof(node_id_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.DbgEvaluate)
}

void DbgEvaluate::SharedCtor() {
  ::memset(&params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&params_)) + sizeof(node_id_));
}

DbgEvaluate::~DbgEvaluate() {
  // @@protoc_insertion_point(destructor:dse.osidbg.DbgEvaluate)
  SharedDtor();
}

void DbgEvaluate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete params_;
}

void DbgEvaluate::ArenaDtor(void* object) {
  DbgEvaluate* _this = reinterpret_cast< DbgEvaluate* >(object);
  (void)_this;
}
void DbgEvaluate::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DbgEvaluate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DbgEvaluate& DbgEvaluate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DbgEvaluate.base);
  return *internal_default_instance();
}


void DbgEvaluate::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.DbgEvaluate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && params_ != NULL) {
    delete params_;
  }
  params_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(node_id_));
  _internal_metadata_.Clear();
}

bool DbgEvaluate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.DbgEvaluate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.osidbg.DbgEvaluate.EvalType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::dse::osidbg::DbgEvaluate_EvalType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 node_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.MsgTuple params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.DbgEvaluate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.DbgEvaluate)
  return false;
#undef DO_
}

void DbgEvaluate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.DbgEvaluate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.osidbg.DbgEvaluate.EvalType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint32 node_id = 2;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->node_id(), output);
  }

  // .dse.osidbg.MsgTuple params = 3;
  if (this->has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_params(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.DbgEvaluate)
}

size_t DbgEvaluate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.DbgEvaluate)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.osidbg.MsgTuple params = 3;
  if (this->has_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *params_);
  }

  // .dse.osidbg.DbgEvaluate.EvalType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 node_id = 2;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DbgEvaluate::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DbgEvaluate*>(&from));
}

void DbgEvaluate::MergeFrom(const DbgEvaluate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.DbgEvaluate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_params()) {
    mutable_params()->::dse::osidbg::MsgTuple::MergeFrom(from.params());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void DbgEvaluate::CopyFrom(const DbgEvaluate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.DbgEvaluate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbgEvaluate::IsInitialized() const {
  return true;
}

void DbgEvaluate::Swap(DbgEvaluate* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DbgEvaluate* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DbgEvaluate::UnsafeArenaSwap(DbgEvaluate* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DbgEvaluate::InternalSwap(DbgEvaluate* other) {
  using std::swap;
  swap(params_, other->params_);
  swap(type_, other->type_);
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DbgEvaluate::GetTypeName() const {
  return "dse.osidbg.DbgEvaluate";
}


// ===================================================================

void BkResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkResult::kStatusCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkResult::BkResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkResult)
}
BkResult::BkResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkResult.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkResult)
}
BkResult::BkResult(const BkResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_code_ = from.status_code_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkResult)
}

void BkResult::SharedCtor() {
  status_code_ = 0;
}

BkResult::~BkResult() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkResult)
  SharedDtor();
}

void BkResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkResult::ArenaDtor(void* object) {
  BkResult* _this = reinterpret_cast< BkResult* >(object);
  (void)_this;
}
void BkResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkResult& BkResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkResult.base);
  return *internal_default_instance();
}


void BkResult::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_code_ = 0;
  _internal_metadata_.Clear();
}

bool BkResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.osidbg.StatusCode status_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status_code(static_cast< ::dse::osidbg::StatusCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkResult)
  return false;
#undef DO_
}

void BkResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.osidbg.StatusCode status_code = 1;
  if (this->status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status_code(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkResult)
}

size_t BkResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkResult)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.osidbg.StatusCode status_code = 1;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkResult*>(&from));
}

void BkResult::MergeFrom(const BkResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status_code() != 0) {
    set_status_code(from.status_code());
  }
}

void BkResult::CopyFrom(const BkResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkResult::IsInitialized() const {
  return true;
}

void BkResult::Swap(BkResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkResult::UnsafeArenaSwap(BkResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkResult::InternalSwap(BkResult* other) {
  using std::swap;
  swap(status_code_, other->status_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkResult::GetTypeName() const {
  return "dse.osidbg.BkResult";
}


// ===================================================================

void BkStoryLoaded::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkStoryLoaded::BkStoryLoaded()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkStoryLoaded.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkStoryLoaded)
}
BkStoryLoaded::BkStoryLoaded(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkStoryLoaded.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkStoryLoaded)
}
BkStoryLoaded::BkStoryLoaded(const BkStoryLoaded& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkStoryLoaded)
}

void BkStoryLoaded::SharedCtor() {
}

BkStoryLoaded::~BkStoryLoaded() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkStoryLoaded)
  SharedDtor();
}

void BkStoryLoaded::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkStoryLoaded::ArenaDtor(void* object) {
  BkStoryLoaded* _this = reinterpret_cast< BkStoryLoaded* >(object);
  (void)_this;
}
void BkStoryLoaded::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkStoryLoaded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkStoryLoaded& BkStoryLoaded::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkStoryLoaded.base);
  return *internal_default_instance();
}


void BkStoryLoaded::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkStoryLoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool BkStoryLoaded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkStoryLoaded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkStoryLoaded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkStoryLoaded)
  return false;
#undef DO_
}

void BkStoryLoaded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkStoryLoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkStoryLoaded)
}

size_t BkStoryLoaded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkStoryLoaded)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkStoryLoaded::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkStoryLoaded*>(&from));
}

void BkStoryLoaded::MergeFrom(const BkStoryLoaded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkStoryLoaded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BkStoryLoaded::CopyFrom(const BkStoryLoaded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkStoryLoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkStoryLoaded::IsInitialized() const {
  return true;
}

void BkStoryLoaded::Swap(BkStoryLoaded* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkStoryLoaded* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkStoryLoaded::UnsafeArenaSwap(BkStoryLoaded* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkStoryLoaded::InternalSwap(BkStoryLoaded* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkStoryLoaded::GetTypeName() const {
  return "dse.osidbg.BkStoryLoaded";
}


// ===================================================================

void BkDebugSessionEnded::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkDebugSessionEnded::BkDebugSessionEnded()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkDebugSessionEnded.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkDebugSessionEnded)
}
BkDebugSessionEnded::BkDebugSessionEnded(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkDebugSessionEnded.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkDebugSessionEnded)
}
BkDebugSessionEnded::BkDebugSessionEnded(const BkDebugSessionEnded& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkDebugSessionEnded)
}

void BkDebugSessionEnded::SharedCtor() {
}

BkDebugSessionEnded::~BkDebugSessionEnded() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkDebugSessionEnded)
  SharedDtor();
}

void BkDebugSessionEnded::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkDebugSessionEnded::ArenaDtor(void* object) {
  BkDebugSessionEnded* _this = reinterpret_cast< BkDebugSessionEnded* >(object);
  (void)_this;
}
void BkDebugSessionEnded::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkDebugSessionEnded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkDebugSessionEnded& BkDebugSessionEnded::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkDebugSessionEnded.base);
  return *internal_default_instance();
}


void BkDebugSessionEnded::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkDebugSessionEnded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool BkDebugSessionEnded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkDebugSessionEnded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkDebugSessionEnded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkDebugSessionEnded)
  return false;
#undef DO_
}

void BkDebugSessionEnded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkDebugSessionEnded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkDebugSessionEnded)
}

size_t BkDebugSessionEnded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkDebugSessionEnded)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkDebugSessionEnded::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkDebugSessionEnded*>(&from));
}

void BkDebugSessionEnded::MergeFrom(const BkDebugSessionEnded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkDebugSessionEnded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BkDebugSessionEnded::CopyFrom(const BkDebugSessionEnded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkDebugSessionEnded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkDebugSessionEnded::IsInitialized() const {
  return true;
}

void BkDebugSessionEnded::Swap(BkDebugSessionEnded* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkDebugSessionEnded* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkDebugSessionEnded::UnsafeArenaSwap(BkDebugSessionEnded* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkDebugSessionEnded::InternalSwap(BkDebugSessionEnded* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkDebugSessionEnded::GetTypeName() const {
  return "dse.osidbg.BkDebugSessionEnded";
}


// ===================================================================

void MsgActionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgActionInfo::kFunctionFieldNumber;
const int MsgActionInfo::kArityFieldNumber;
const int MsgActionInfo::kGoalIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgActionInfo::MsgActionInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgActionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgActionInfo)
}
MsgActionInfo::MsgActionInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgActionInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgActionInfo)
}
MsgActionInfo::MsgActionInfo(const MsgActionInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function().size() > 0) {
    function_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function(),
      GetArenaNoVirtual());
  }
  ::memcpy(&arity_, &from.arity_,
    static_cast<size_t>(reinterpret_cast<char*>(&goal_id_) -
    reinterpret_cast<char*>(&arity_)) + sizeof(goal_id_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgActionInfo)
}

void MsgActionInfo::SharedCtor() {
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&arity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goal_id_) -
      reinterpret_cast<char*>(&arity_)) + sizeof(goal_id_));
}

MsgActionInfo::~MsgActionInfo() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgActionInfo)
  SharedDtor();
}

void MsgActionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgActionInfo::ArenaDtor(void* object) {
  MsgActionInfo* _this = reinterpret_cast< MsgActionInfo* >(object);
  (void)_this;
}
void MsgActionInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgActionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgActionInfo& MsgActionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgActionInfo.base);
  return *internal_default_instance();
}


void MsgActionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgActionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  function_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&arity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goal_id_) -
      reinterpret_cast<char*>(&arity_)) + sizeof(goal_id_));
  _internal_metadata_.Clear();
}

bool MsgActionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgActionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string function = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function().data(), static_cast<int>(this->function().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.osidbg.MsgActionInfo.function"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 arity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &arity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 goal_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goal_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgActionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgActionInfo)
  return false;
#undef DO_
}

void MsgActionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgActionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.osidbg.MsgActionInfo.function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->function(), output);
  }

  // uint32 arity = 2;
  if (this->arity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->arity(), output);
  }

  // int32 goal_id = 3;
  if (this->goal_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->goal_id(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgActionInfo)
}

size_t MsgActionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgActionInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string function = 1;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function());
  }

  // uint32 arity = 2;
  if (this->arity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->arity());
  }

  // int32 goal_id = 3;
  if (this->goal_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->goal_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgActionInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgActionInfo*>(&from));
}

void MsgActionInfo::MergeFrom(const MsgActionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgActionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.function().size() > 0) {
    set_function(from.function());
  }
  if (from.arity() != 0) {
    set_arity(from.arity());
  }
  if (from.goal_id() != 0) {
    set_goal_id(from.goal_id());
  }
}

void MsgActionInfo::CopyFrom(const MsgActionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgActionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgActionInfo::IsInitialized() const {
  return true;
}

void MsgActionInfo::Swap(MsgActionInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgActionInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgActionInfo::UnsafeArenaSwap(MsgActionInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgActionInfo::InternalSwap(MsgActionInfo* other) {
  using std::swap;
  function_.Swap(&other->function_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(arity_, other->arity_);
  swap(goal_id_, other->goal_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgActionInfo::GetTypeName() const {
  return "dse.osidbg.MsgActionInfo";
}


// ===================================================================

void MsgGoalInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGoalInfo::kIdFieldNumber;
const int MsgGoalInfo::kNameFieldNumber;
const int MsgGoalInfo::kInitActionsFieldNumber;
const int MsgGoalInfo::kExitActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGoalInfo::MsgGoalInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgGoalInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgGoalInfo)
}
MsgGoalInfo::MsgGoalInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  initactions_(arena),
  exitactions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgGoalInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgGoalInfo)
}
MsgGoalInfo::MsgGoalInfo(const MsgGoalInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      initactions_(from.initactions_),
      exitactions_(from.exitactions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgGoalInfo)
}

void MsgGoalInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

MsgGoalInfo::~MsgGoalInfo() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgGoalInfo)
  SharedDtor();
}

void MsgGoalInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGoalInfo::ArenaDtor(void* object) {
  MsgGoalInfo* _this = reinterpret_cast< MsgGoalInfo* >(object);
  (void)_this;
}
void MsgGoalInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgGoalInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGoalInfo& MsgGoalInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgGoalInfo.base);
  return *internal_default_instance();
}


void MsgGoalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgGoalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initactions_.Clear();
  exitactions_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgGoalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgGoalInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.osidbg.MsgGoalInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.osidbg.MsgActionInfo initActions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_initactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.osidbg.MsgActionInfo exitActions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_exitactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgGoalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgGoalInfo)
  return false;
#undef DO_
}

void MsgGoalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgGoalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.osidbg.MsgGoalInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .dse.osidbg.MsgActionInfo initActions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->initactions(static_cast<int>(i)),
      output);
  }

  // repeated .dse.osidbg.MsgActionInfo exitActions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exitactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->exitactions(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgGoalInfo)
}

size_t MsgGoalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgGoalInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.osidbg.MsgActionInfo initActions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->initactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->initactions(static_cast<int>(i)));
    }
  }

  // repeated .dse.osidbg.MsgActionInfo exitActions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->exitactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exitactions(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGoalInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgGoalInfo*>(&from));
}

void MsgGoalInfo::MergeFrom(const MsgGoalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgGoalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initactions_.MergeFrom(from.initactions_);
  exitactions_.MergeFrom(from.exitactions_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MsgGoalInfo::CopyFrom(const MsgGoalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgGoalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGoalInfo::IsInitialized() const {
  return true;
}

void MsgGoalInfo::Swap(MsgGoalInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgGoalInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgGoalInfo::UnsafeArenaSwap(MsgGoalInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgGoalInfo::InternalSwap(MsgGoalInfo* other) {
  using std::swap;
  CastToBase(&initactions_)->InternalSwap(CastToBase(&other->initactions_));
  CastToBase(&exitactions_)->InternalSwap(CastToBase(&other->exitactions_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgGoalInfo::GetTypeName() const {
  return "dse.osidbg.MsgGoalInfo";
}


// ===================================================================

void MsgDatabaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgDatabaseInfo::kIdFieldNumber;
const int MsgDatabaseInfo::kArgumentTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgDatabaseInfo::MsgDatabaseInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgDatabaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgDatabaseInfo)
}
MsgDatabaseInfo::MsgDatabaseInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  argumenttype_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgDatabaseInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgDatabaseInfo)
}
MsgDatabaseInfo::MsgDatabaseInfo(const MsgDatabaseInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      argumenttype_(from.argumenttype_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgDatabaseInfo)
}

void MsgDatabaseInfo::SharedCtor() {
  id_ = 0u;
}

MsgDatabaseInfo::~MsgDatabaseInfo() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgDatabaseInfo)
  SharedDtor();
}

void MsgDatabaseInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MsgDatabaseInfo::ArenaDtor(void* object) {
  MsgDatabaseInfo* _this = reinterpret_cast< MsgDatabaseInfo* >(object);
  (void)_this;
}
void MsgDatabaseInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgDatabaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgDatabaseInfo& MsgDatabaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgDatabaseInfo.base);
  return *internal_default_instance();
}


void MsgDatabaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgDatabaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  argumenttype_.Clear();
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgDatabaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgDatabaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 argumentType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_argumenttype())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_argumenttype())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgDatabaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgDatabaseInfo)
  return false;
#undef DO_
}

void MsgDatabaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgDatabaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated uint32 argumentType = 2;
  if (this->argumenttype_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _argumenttype_cached_byte_size_));
  }
  for (int i = 0, n = this->argumenttype_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->argumenttype(i), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgDatabaseInfo)
}

size_t MsgDatabaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgDatabaseInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated uint32 argumentType = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->argumenttype_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _argumenttype_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgDatabaseInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgDatabaseInfo*>(&from));
}

void MsgDatabaseInfo::MergeFrom(const MsgDatabaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgDatabaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  argumenttype_.MergeFrom(from.argumenttype_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MsgDatabaseInfo::CopyFrom(const MsgDatabaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgDatabaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDatabaseInfo::IsInitialized() const {
  return true;
}

void MsgDatabaseInfo::Swap(MsgDatabaseInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgDatabaseInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgDatabaseInfo::UnsafeArenaSwap(MsgDatabaseInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgDatabaseInfo::InternalSwap(MsgDatabaseInfo* other) {
  using std::swap;
  argumenttype_.InternalSwap(&other->argumenttype_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgDatabaseInfo::GetTypeName() const {
  return "dse.osidbg.MsgDatabaseInfo";
}


// ===================================================================

void MsgNodeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgNodeInfo::kIdFieldNumber;
const int MsgNodeInfo::kTypeFieldNumber;
const int MsgNodeInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgNodeInfo::MsgNodeInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgNodeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgNodeInfo)
}
MsgNodeInfo::MsgNodeInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgNodeInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgNodeInfo)
}
MsgNodeInfo::MsgNodeInfo(const MsgNodeInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgNodeInfo)
}

void MsgNodeInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

MsgNodeInfo::~MsgNodeInfo() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgNodeInfo)
  SharedDtor();
}

void MsgNodeInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgNodeInfo::ArenaDtor(void* object) {
  MsgNodeInfo* _this = reinterpret_cast< MsgNodeInfo* >(object);
  (void)_this;
}
void MsgNodeInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgNodeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgNodeInfo& MsgNodeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgNodeInfo.base);
  return *internal_default_instance();
}


void MsgNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgNodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MsgNodeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgNodeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.osidbg.MsgNodeInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgNodeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgNodeInfo)
  return false;
#undef DO_
}

void MsgNodeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgNodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.osidbg.MsgNodeInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgNodeInfo)
}

size_t MsgNodeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgNodeInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgNodeInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgNodeInfo*>(&from));
}

void MsgNodeInfo::MergeFrom(const MsgNodeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgNodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MsgNodeInfo::CopyFrom(const MsgNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNodeInfo::IsInitialized() const {
  return true;
}

void MsgNodeInfo::Swap(MsgNodeInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgNodeInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgNodeInfo::UnsafeArenaSwap(MsgNodeInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgNodeInfo::InternalSwap(MsgNodeInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgNodeInfo::GetTypeName() const {
  return "dse.osidbg.MsgNodeInfo";
}


// ===================================================================

void MsgRuleInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRuleInfo::kNodeIdFieldNumber;
const int MsgRuleInfo::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRuleInfo::MsgRuleInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_MsgRuleInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.MsgRuleInfo)
}
MsgRuleInfo::MsgRuleInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  actions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgRuleInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.MsgRuleInfo)
}
MsgRuleInfo::MsgRuleInfo(const MsgRuleInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.MsgRuleInfo)
}

void MsgRuleInfo::SharedCtor() {
  node_id_ = 0u;
}

MsgRuleInfo::~MsgRuleInfo() {
  // @@protoc_insertion_point(destructor:dse.osidbg.MsgRuleInfo)
  SharedDtor();
}

void MsgRuleInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MsgRuleInfo::ArenaDtor(void* object) {
  MsgRuleInfo* _this = reinterpret_cast< MsgRuleInfo* >(object);
  (void)_this;
}
void MsgRuleInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MsgRuleInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgRuleInfo& MsgRuleInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_MsgRuleInfo.base);
  return *internal_default_instance();
}


void MsgRuleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.MsgRuleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  node_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgRuleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.MsgRuleInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.osidbg.MsgActionInfo actions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.MsgRuleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.MsgRuleInfo)
  return false;
#undef DO_
}

void MsgRuleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.MsgRuleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->node_id(), output);
  }

  // repeated .dse.osidbg.MsgActionInfo actions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->actions(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.MsgRuleInfo)
}

size_t MsgRuleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.MsgRuleInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.osidbg.MsgActionInfo actions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actions(static_cast<int>(i)));
    }
  }

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgRuleInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgRuleInfo*>(&from));
}

void MsgRuleInfo::MergeFrom(const MsgRuleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.MsgRuleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void MsgRuleInfo::CopyFrom(const MsgRuleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.MsgRuleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRuleInfo::IsInitialized() const {
  return true;
}

void MsgRuleInfo::Swap(MsgRuleInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MsgRuleInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MsgRuleInfo::UnsafeArenaSwap(MsgRuleInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MsgRuleInfo::InternalSwap(MsgRuleInfo* other) {
  using std::swap;
  CastToBase(&actions_)->InternalSwap(CastToBase(&other->actions_));
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgRuleInfo::GetTypeName() const {
  return "dse.osidbg.MsgRuleInfo";
}


// ===================================================================

void BkSyncStoryData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkSyncStoryData::kGoalFieldNumber;
const int BkSyncStoryData::kDatabaseFieldNumber;
const int BkSyncStoryData::kNodeFieldNumber;
const int BkSyncStoryData::kRuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkSyncStoryData::BkSyncStoryData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkSyncStoryData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkSyncStoryData)
}
BkSyncStoryData::BkSyncStoryData(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  goal_(arena),
  database_(arena),
  node_(arena),
  rule_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkSyncStoryData.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkSyncStoryData)
}
BkSyncStoryData::BkSyncStoryData(const BkSyncStoryData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      goal_(from.goal_),
      database_(from.database_),
      node_(from.node_),
      rule_(from.rule_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkSyncStoryData)
}

void BkSyncStoryData::SharedCtor() {
}

BkSyncStoryData::~BkSyncStoryData() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkSyncStoryData)
  SharedDtor();
}

void BkSyncStoryData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkSyncStoryData::ArenaDtor(void* object) {
  BkSyncStoryData* _this = reinterpret_cast< BkSyncStoryData* >(object);
  (void)_this;
}
void BkSyncStoryData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkSyncStoryData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkSyncStoryData& BkSyncStoryData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkSyncStoryData.base);
  return *internal_default_instance();
}


void BkSyncStoryData::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkSyncStoryData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goal_.Clear();
  database_.Clear();
  node_.Clear();
  rule_.Clear();
  _internal_metadata_.Clear();
}

bool BkSyncStoryData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkSyncStoryData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dse.osidbg.MsgGoalInfo goal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_goal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.osidbg.MsgDatabaseInfo database = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_database()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.osidbg.MsgNodeInfo node = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.osidbg.MsgRuleInfo rule = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkSyncStoryData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkSyncStoryData)
  return false;
#undef DO_
}

void BkSyncStoryData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkSyncStoryData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dse.osidbg.MsgGoalInfo goal = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goal_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->goal(static_cast<int>(i)),
      output);
  }

  // repeated .dse.osidbg.MsgDatabaseInfo database = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->database_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->database(static_cast<int>(i)),
      output);
  }

  // repeated .dse.osidbg.MsgNodeInfo node = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->node(static_cast<int>(i)),
      output);
  }

  // repeated .dse.osidbg.MsgRuleInfo rule = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rule_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->rule(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkSyncStoryData)
}

size_t BkSyncStoryData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkSyncStoryData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.osidbg.MsgGoalInfo goal = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->goal_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->goal(static_cast<int>(i)));
    }
  }

  // repeated .dse.osidbg.MsgDatabaseInfo database = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->database_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->database(static_cast<int>(i)));
    }
  }

  // repeated .dse.osidbg.MsgNodeInfo node = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->node_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node(static_cast<int>(i)));
    }
  }

  // repeated .dse.osidbg.MsgRuleInfo rule = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->rule_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rule(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkSyncStoryData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkSyncStoryData*>(&from));
}

void BkSyncStoryData::MergeFrom(const BkSyncStoryData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkSyncStoryData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  goal_.MergeFrom(from.goal_);
  database_.MergeFrom(from.database_);
  node_.MergeFrom(from.node_);
  rule_.MergeFrom(from.rule_);
}

void BkSyncStoryData::CopyFrom(const BkSyncStoryData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkSyncStoryData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkSyncStoryData::IsInitialized() const {
  return true;
}

void BkSyncStoryData::Swap(BkSyncStoryData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkSyncStoryData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkSyncStoryData::UnsafeArenaSwap(BkSyncStoryData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkSyncStoryData::InternalSwap(BkSyncStoryData* other) {
  using std::swap;
  CastToBase(&goal_)->InternalSwap(CastToBase(&other->goal_));
  CastToBase(&database_)->InternalSwap(CastToBase(&other->database_));
  CastToBase(&node_)->InternalSwap(CastToBase(&other->node_));
  CastToBase(&rule_)->InternalSwap(CastToBase(&other->rule_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkSyncStoryData::GetTypeName() const {
  return "dse.osidbg.BkSyncStoryData";
}


// ===================================================================

void BkSyncStoryFinished::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkSyncStoryFinished::BkSyncStoryFinished()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkSyncStoryFinished.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkSyncStoryFinished)
}
BkSyncStoryFinished::BkSyncStoryFinished(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkSyncStoryFinished.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkSyncStoryFinished)
}
BkSyncStoryFinished::BkSyncStoryFinished(const BkSyncStoryFinished& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkSyncStoryFinished)
}

void BkSyncStoryFinished::SharedCtor() {
}

BkSyncStoryFinished::~BkSyncStoryFinished() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkSyncStoryFinished)
  SharedDtor();
}

void BkSyncStoryFinished::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkSyncStoryFinished::ArenaDtor(void* object) {
  BkSyncStoryFinished* _this = reinterpret_cast< BkSyncStoryFinished* >(object);
  (void)_this;
}
void BkSyncStoryFinished::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkSyncStoryFinished::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkSyncStoryFinished& BkSyncStoryFinished::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkSyncStoryFinished.base);
  return *internal_default_instance();
}


void BkSyncStoryFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkSyncStoryFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool BkSyncStoryFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkSyncStoryFinished)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkSyncStoryFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkSyncStoryFinished)
  return false;
#undef DO_
}

void BkSyncStoryFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkSyncStoryFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkSyncStoryFinished)
}

size_t BkSyncStoryFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkSyncStoryFinished)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkSyncStoryFinished::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkSyncStoryFinished*>(&from));
}

void BkSyncStoryFinished::MergeFrom(const BkSyncStoryFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkSyncStoryFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BkSyncStoryFinished::CopyFrom(const BkSyncStoryFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkSyncStoryFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkSyncStoryFinished::IsInitialized() const {
  return true;
}

void BkSyncStoryFinished::Swap(BkSyncStoryFinished* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkSyncStoryFinished* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkSyncStoryFinished::UnsafeArenaSwap(BkSyncStoryFinished* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkSyncStoryFinished::InternalSwap(BkSyncStoryFinished* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkSyncStoryFinished::GetTypeName() const {
  return "dse.osidbg.BkSyncStoryFinished";
}


// ===================================================================

void BkDebugOutput::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkDebugOutput::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkDebugOutput::BkDebugOutput()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkDebugOutput.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkDebugOutput)
}
BkDebugOutput::BkDebugOutput(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkDebugOutput.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkDebugOutput)
}
BkDebugOutput::BkDebugOutput(const BkDebugOutput& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.SetLite(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkDebugOutput)
}

void BkDebugOutput::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BkDebugOutput::~BkDebugOutput() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkDebugOutput)
  SharedDtor();
}

void BkDebugOutput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BkDebugOutput::ArenaDtor(void* object) {
  BkDebugOutput* _this = reinterpret_cast< BkDebugOutput* >(object);
  (void)_this;
}
void BkDebugOutput::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkDebugOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkDebugOutput& BkDebugOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkDebugOutput.base);
  return *internal_default_instance();
}


void BkDebugOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkDebugOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool BkDebugOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkDebugOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dse.osidbg.BkDebugOutput.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkDebugOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkDebugOutput)
  return false;
#undef DO_
}

void BkDebugOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkDebugOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dse.osidbg.BkDebugOutput.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkDebugOutput)
}

size_t BkDebugOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkDebugOutput)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkDebugOutput::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkDebugOutput*>(&from));
}

void BkDebugOutput::MergeFrom(const BkDebugOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkDebugOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    set_message(from.message());
  }
}

void BkDebugOutput::CopyFrom(const BkDebugOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkDebugOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkDebugOutput::IsInitialized() const {
  return true;
}

void BkDebugOutput::Swap(BkDebugOutput* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkDebugOutput* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkDebugOutput::UnsafeArenaSwap(BkDebugOutput* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkDebugOutput::InternalSwap(BkDebugOutput* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkDebugOutput::GetTypeName() const {
  return "dse.osidbg.BkDebugOutput";
}


// ===================================================================

void BkBeginDatabaseContents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkBeginDatabaseContents::kDatabaseIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkBeginDatabaseContents::BkBeginDatabaseContents()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkBeginDatabaseContents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkBeginDatabaseContents)
}
BkBeginDatabaseContents::BkBeginDatabaseContents(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkBeginDatabaseContents.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkBeginDatabaseContents)
}
BkBeginDatabaseContents::BkBeginDatabaseContents(const BkBeginDatabaseContents& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_id_ = from.database_id_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkBeginDatabaseContents)
}

void BkBeginDatabaseContents::SharedCtor() {
  database_id_ = 0u;
}

BkBeginDatabaseContents::~BkBeginDatabaseContents() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkBeginDatabaseContents)
  SharedDtor();
}

void BkBeginDatabaseContents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkBeginDatabaseContents::ArenaDtor(void* object) {
  BkBeginDatabaseContents* _this = reinterpret_cast< BkBeginDatabaseContents* >(object);
  (void)_this;
}
void BkBeginDatabaseContents::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkBeginDatabaseContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkBeginDatabaseContents& BkBeginDatabaseContents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkBeginDatabaseContents.base);
  return *internal_default_instance();
}


void BkBeginDatabaseContents::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkBeginDatabaseContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BkBeginDatabaseContents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkBeginDatabaseContents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 database_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &database_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkBeginDatabaseContents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkBeginDatabaseContents)
  return false;
#undef DO_
}

void BkBeginDatabaseContents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkBeginDatabaseContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 database_id = 1;
  if (this->database_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->database_id(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkBeginDatabaseContents)
}

size_t BkBeginDatabaseContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkBeginDatabaseContents)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 database_id = 1;
  if (this->database_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->database_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkBeginDatabaseContents::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkBeginDatabaseContents*>(&from));
}

void BkBeginDatabaseContents::MergeFrom(const BkBeginDatabaseContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkBeginDatabaseContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database_id() != 0) {
    set_database_id(from.database_id());
  }
}

void BkBeginDatabaseContents::CopyFrom(const BkBeginDatabaseContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkBeginDatabaseContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkBeginDatabaseContents::IsInitialized() const {
  return true;
}

void BkBeginDatabaseContents::Swap(BkBeginDatabaseContents* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkBeginDatabaseContents* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkBeginDatabaseContents::UnsafeArenaSwap(BkBeginDatabaseContents* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkBeginDatabaseContents::InternalSwap(BkBeginDatabaseContents* other) {
  using std::swap;
  swap(database_id_, other->database_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkBeginDatabaseContents::GetTypeName() const {
  return "dse.osidbg.BkBeginDatabaseContents";
}


// ===================================================================

void BkDatabaseRow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkDatabaseRow::kDatabaseIdFieldNumber;
const int BkDatabaseRow::kRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkDatabaseRow::BkDatabaseRow()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkDatabaseRow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkDatabaseRow)
}
BkDatabaseRow::BkDatabaseRow(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  row_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkDatabaseRow.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkDatabaseRow)
}
BkDatabaseRow::BkDatabaseRow(const BkDatabaseRow& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      row_(from.row_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_id_ = from.database_id_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkDatabaseRow)
}

void BkDatabaseRow::SharedCtor() {
  database_id_ = 0u;
}

BkDatabaseRow::~BkDatabaseRow() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkDatabaseRow)
  SharedDtor();
}

void BkDatabaseRow::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkDatabaseRow::ArenaDtor(void* object) {
  BkDatabaseRow* _this = reinterpret_cast< BkDatabaseRow* >(object);
  (void)_this;
}
void BkDatabaseRow::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkDatabaseRow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkDatabaseRow& BkDatabaseRow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkDatabaseRow.base);
  return *internal_default_instance();
}


void BkDatabaseRow::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkDatabaseRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.Clear();
  database_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BkDatabaseRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkDatabaseRow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 database_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &database_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dse.osidbg.MsgTuple row = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkDatabaseRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkDatabaseRow)
  return false;
#undef DO_
}

void BkDatabaseRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkDatabaseRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 database_id = 1;
  if (this->database_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->database_id(), output);
  }

  // repeated .dse.osidbg.MsgTuple row = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->row(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkDatabaseRow)
}

size_t BkDatabaseRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkDatabaseRow)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.osidbg.MsgTuple row = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->row_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row(static_cast<int>(i)));
    }
  }

  // uint32 database_id = 1;
  if (this->database_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->database_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkDatabaseRow::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkDatabaseRow*>(&from));
}

void BkDatabaseRow::MergeFrom(const BkDatabaseRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkDatabaseRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_.MergeFrom(from.row_);
  if (from.database_id() != 0) {
    set_database_id(from.database_id());
  }
}

void BkDatabaseRow::CopyFrom(const BkDatabaseRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkDatabaseRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkDatabaseRow::IsInitialized() const {
  return true;
}

void BkDatabaseRow::Swap(BkDatabaseRow* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkDatabaseRow* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkDatabaseRow::UnsafeArenaSwap(BkDatabaseRow* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkDatabaseRow::InternalSwap(BkDatabaseRow* other) {
  using std::swap;
  CastToBase(&row_)->InternalSwap(CastToBase(&other->row_));
  swap(database_id_, other->database_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkDatabaseRow::GetTypeName() const {
  return "dse.osidbg.BkDatabaseRow";
}


// ===================================================================

void BkEndDatabaseContents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkEndDatabaseContents::kDatabaseIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkEndDatabaseContents::BkEndDatabaseContents()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkEndDatabaseContents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkEndDatabaseContents)
}
BkEndDatabaseContents::BkEndDatabaseContents(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkEndDatabaseContents.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkEndDatabaseContents)
}
BkEndDatabaseContents::BkEndDatabaseContents(const BkEndDatabaseContents& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  database_id_ = from.database_id_;
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkEndDatabaseContents)
}

void BkEndDatabaseContents::SharedCtor() {
  database_id_ = 0u;
}

BkEndDatabaseContents::~BkEndDatabaseContents() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkEndDatabaseContents)
  SharedDtor();
}

void BkEndDatabaseContents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkEndDatabaseContents::ArenaDtor(void* object) {
  BkEndDatabaseContents* _this = reinterpret_cast< BkEndDatabaseContents* >(object);
  (void)_this;
}
void BkEndDatabaseContents::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkEndDatabaseContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkEndDatabaseContents& BkEndDatabaseContents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkEndDatabaseContents.base);
  return *internal_default_instance();
}


void BkEndDatabaseContents::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkEndDatabaseContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  database_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BkEndDatabaseContents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkEndDatabaseContents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 database_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &database_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkEndDatabaseContents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkEndDatabaseContents)
  return false;
#undef DO_
}

void BkEndDatabaseContents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkEndDatabaseContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 database_id = 1;
  if (this->database_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->database_id(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkEndDatabaseContents)
}

size_t BkEndDatabaseContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkEndDatabaseContents)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 database_id = 1;
  if (this->database_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->database_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkEndDatabaseContents::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkEndDatabaseContents*>(&from));
}

void BkEndDatabaseContents::MergeFrom(const BkEndDatabaseContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkEndDatabaseContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.database_id() != 0) {
    set_database_id(from.database_id());
  }
}

void BkEndDatabaseContents::CopyFrom(const BkEndDatabaseContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkEndDatabaseContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkEndDatabaseContents::IsInitialized() const {
  return true;
}

void BkEndDatabaseContents::Swap(BkEndDatabaseContents* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkEndDatabaseContents* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkEndDatabaseContents::UnsafeArenaSwap(BkEndDatabaseContents* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkEndDatabaseContents::InternalSwap(BkEndDatabaseContents* other) {
  using std::swap;
  swap(database_id_, other->database_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkEndDatabaseContents::GetTypeName() const {
  return "dse.osidbg.BkEndDatabaseContents";
}


// ===================================================================

void BkEvaluateRow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkEvaluateRow::kRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkEvaluateRow::BkEvaluateRow()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkEvaluateRow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkEvaluateRow)
}
BkEvaluateRow::BkEvaluateRow(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena),
  row_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkEvaluateRow.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkEvaluateRow)
}
BkEvaluateRow::BkEvaluateRow(const BkEvaluateRow& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      row_(from.row_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkEvaluateRow)
}

void BkEvaluateRow::SharedCtor() {
}

BkEvaluateRow::~BkEvaluateRow() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkEvaluateRow)
  SharedDtor();
}

void BkEvaluateRow::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkEvaluateRow::ArenaDtor(void* object) {
  BkEvaluateRow* _this = reinterpret_cast< BkEvaluateRow* >(object);
  (void)_this;
}
void BkEvaluateRow::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkEvaluateRow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkEvaluateRow& BkEvaluateRow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkEvaluateRow.base);
  return *internal_default_instance();
}


void BkEvaluateRow::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkEvaluateRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.Clear();
  _internal_metadata_.Clear();
}

bool BkEvaluateRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkEvaluateRow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dse.osidbg.MsgTuple row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkEvaluateRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkEvaluateRow)
  return false;
#undef DO_
}

void BkEvaluateRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkEvaluateRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dse.osidbg.MsgTuple row = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->row(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkEvaluateRow)
}

size_t BkEvaluateRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkEvaluateRow)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .dse.osidbg.MsgTuple row = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->row_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkEvaluateRow::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkEvaluateRow*>(&from));
}

void BkEvaluateRow::MergeFrom(const BkEvaluateRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkEvaluateRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_.MergeFrom(from.row_);
}

void BkEvaluateRow::CopyFrom(const BkEvaluateRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkEvaluateRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkEvaluateRow::IsInitialized() const {
  return true;
}

void BkEvaluateRow::Swap(BkEvaluateRow* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkEvaluateRow* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkEvaluateRow::UnsafeArenaSwap(BkEvaluateRow* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkEvaluateRow::InternalSwap(BkEvaluateRow* other) {
  using std::swap;
  CastToBase(&row_)->InternalSwap(CastToBase(&other->row_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkEvaluateRow::GetTypeName() const {
  return "dse.osidbg.BkEvaluateRow";
}


// ===================================================================

void BkEvaluateFinished::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BkEvaluateFinished::kResultCodeFieldNumber;
const int BkEvaluateFinished::kQuerySucceededFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BkEvaluateFinished::BkEvaluateFinished()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BkEvaluateFinished.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BkEvaluateFinished)
}
BkEvaluateFinished::BkEvaluateFinished(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkEvaluateFinished.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BkEvaluateFinished)
}
BkEvaluateFinished::BkEvaluateFinished(const BkEvaluateFinished& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_code_, &from.result_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_succeeded_) -
    reinterpret_cast<char*>(&result_code_)) + sizeof(query_succeeded_));
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BkEvaluateFinished)
}

void BkEvaluateFinished::SharedCtor() {
  ::memset(&result_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_succeeded_) -
      reinterpret_cast<char*>(&result_code_)) + sizeof(query_succeeded_));
}

BkEvaluateFinished::~BkEvaluateFinished() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BkEvaluateFinished)
  SharedDtor();
}

void BkEvaluateFinished::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void BkEvaluateFinished::ArenaDtor(void* object) {
  BkEvaluateFinished* _this = reinterpret_cast< BkEvaluateFinished* >(object);
  (void)_this;
}
void BkEvaluateFinished::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BkEvaluateFinished::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BkEvaluateFinished& BkEvaluateFinished::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BkEvaluateFinished.base);
  return *internal_default_instance();
}


void BkEvaluateFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BkEvaluateFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&result_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_succeeded_) -
      reinterpret_cast<char*>(&result_code_)) + sizeof(query_succeeded_));
  _internal_metadata_.Clear();
}

bool BkEvaluateFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BkEvaluateFinished)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.osidbg.StatusCode result_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result_code(static_cast< ::dse::osidbg::StatusCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool query_succeeded = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_succeeded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BkEvaluateFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BkEvaluateFinished)
  return false;
#undef DO_
}

void BkEvaluateFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BkEvaluateFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.osidbg.StatusCode result_code = 1;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result_code(), output);
  }

  // bool query_succeeded = 2;
  if (this->query_succeeded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->query_succeeded(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BkEvaluateFinished)
}

size_t BkEvaluateFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BkEvaluateFinished)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .dse.osidbg.StatusCode result_code = 1;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result_code());
  }

  // bool query_succeeded = 2;
  if (this->query_succeeded() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BkEvaluateFinished::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BkEvaluateFinished*>(&from));
}

void BkEvaluateFinished::MergeFrom(const BkEvaluateFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BkEvaluateFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
  if (from.query_succeeded() != 0) {
    set_query_succeeded(from.query_succeeded());
  }
}

void BkEvaluateFinished::CopyFrom(const BkEvaluateFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BkEvaluateFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BkEvaluateFinished::IsInitialized() const {
  return true;
}

void BkEvaluateFinished::Swap(BkEvaluateFinished* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BkEvaluateFinished* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BkEvaluateFinished::UnsafeArenaSwap(BkEvaluateFinished* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BkEvaluateFinished::InternalSwap(BkEvaluateFinished* other) {
  using std::swap;
  swap(result_code_, other->result_code_);
  swap(query_succeeded_, other->query_succeeded_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BkEvaluateFinished::GetTypeName() const {
  return "dse.osidbg.BkEvaluateFinished";
}


// ===================================================================

void DebuggerToBackend::InitAsDefaultInstance() {
}
void DebuggerToBackend::set_allocated_identify(::dse::osidbg::DbgIdentifyRequest* identify) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (identify) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(identify);
    if (message_arena != submessage_arena) {
      identify = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, identify, submessage_arena);
    }
    set_has_identify();
    msg_.identify_ = identify;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.DebuggerToBackend.identify)
}
void DebuggerToBackend::set_allocated_setglobalbreakpoints(::dse::osidbg::DbgSetGlobalBreakpoints* setglobalbreakpoints) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (setglobalbreakpoints) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(setglobalbreakpoints);
    if (message_arena != submessage_arena) {
      setglobalbreakpoints = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, setglobalbreakpoints, submessage_arena);
    }
    set_has_setglobalbreakpoints();
    msg_.setglobalbreakpoints_ = setglobalbreakpoints;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.DebuggerToBackend.setGlobalBreakpoints)
}
void DebuggerToBackend::set_allocated_setbreakpoints(::dse::osidbg::DbgSetBreakpoints* setbreakpoints) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (setbreakpoints) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(setbreakpoints);
    if (message_arena != submessage_arena) {
      setbreakpoints = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, setbreakpoints, submessage_arena);
    }
    set_has_setbreakpoints();
    msg_.setbreakpoints_ = setbreakpoints;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.DebuggerToBackend.setBreakpoints)
}
void DebuggerToBackend::set_allocated_continue_(::dse::osidbg::DbgContinue* continue_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (continue_) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(continue_);
    if (message_arena != submessage_arena) {
      continue_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, continue_, submessage_arena);
    }
    set_has_continue_();
    msg_.continue__ = continue_;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.DebuggerToBackend.continue)
}
void DebuggerToBackend::set_allocated_getdatabasecontents(::dse::osidbg::DbgGetDatabaseContents* getdatabasecontents) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (getdatabasecontents) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(getdatabasecontents);
    if (message_arena != submessage_arena) {
      getdatabasecontents = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getdatabasecontents, submessage_arena);
    }
    set_has_getdatabasecontents();
    msg_.getdatabasecontents_ = getdatabasecontents;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.DebuggerToBackend.getDatabaseContents)
}
void DebuggerToBackend::set_allocated_syncstory(::dse::osidbg::DbgSyncStory* syncstory) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (syncstory) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(syncstory);
    if (message_arena != submessage_arena) {
      syncstory = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, syncstory, submessage_arena);
    }
    set_has_syncstory();
    msg_.syncstory_ = syncstory;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.DebuggerToBackend.syncStory)
}
void DebuggerToBackend::set_allocated_evaluate(::dse::osidbg::DbgEvaluate* evaluate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (evaluate) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(evaluate);
    if (message_arena != submessage_arena) {
      evaluate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, evaluate, submessage_arena);
    }
    set_has_evaluate();
    msg_.evaluate_ = evaluate;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.DebuggerToBackend.evaluate)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebuggerToBackend::kIdentifyFieldNumber;
const int DebuggerToBackend::kSetGlobalBreakpointsFieldNumber;
const int DebuggerToBackend::kSetBreakpointsFieldNumber;
const int DebuggerToBackend::kContinueFieldNumber;
const int DebuggerToBackend::kGetDatabaseContentsFieldNumber;
const int DebuggerToBackend::kSyncStoryFieldNumber;
const int DebuggerToBackend::kEvaluateFieldNumber;
const int DebuggerToBackend::kSeqNoFieldNumber;
const int DebuggerToBackend::kReplySeqNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebuggerToBackend::DebuggerToBackend()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_DebuggerToBackend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.DebuggerToBackend)
}
DebuggerToBackend::DebuggerToBackend(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DebuggerToBackend.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.DebuggerToBackend)
}
DebuggerToBackend::DebuggerToBackend(const DebuggerToBackend& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seq_no_, &from.seq_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&reply_seq_no_) -
    reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_has_msg();
  switch (from.msg_case()) {
    case kIdentify: {
      mutable_identify()->::dse::osidbg::DbgIdentifyRequest::MergeFrom(from.identify());
      break;
    }
    case kSetGlobalBreakpoints: {
      mutable_setglobalbreakpoints()->::dse::osidbg::DbgSetGlobalBreakpoints::MergeFrom(from.setglobalbreakpoints());
      break;
    }
    case kSetBreakpoints: {
      mutable_setbreakpoints()->::dse::osidbg::DbgSetBreakpoints::MergeFrom(from.setbreakpoints());
      break;
    }
    case kContinue: {
      mutable_continue_()->::dse::osidbg::DbgContinue::MergeFrom(from.continue_());
      break;
    }
    case kGetDatabaseContents: {
      mutable_getdatabasecontents()->::dse::osidbg::DbgGetDatabaseContents::MergeFrom(from.getdatabasecontents());
      break;
    }
    case kSyncStory: {
      mutable_syncstory()->::dse::osidbg::DbgSyncStory::MergeFrom(from.syncstory());
      break;
    }
    case kEvaluate: {
      mutable_evaluate()->::dse::osidbg::DbgEvaluate::MergeFrom(from.evaluate());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.DebuggerToBackend)
}

void DebuggerToBackend::SharedCtor() {
  ::memset(&seq_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_seq_no_) -
      reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_has_msg();
}

DebuggerToBackend::~DebuggerToBackend() {
  // @@protoc_insertion_point(destructor:dse.osidbg.DebuggerToBackend)
  SharedDtor();
}

void DebuggerToBackend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_msg()) {
    clear_msg();
  }
}

void DebuggerToBackend::ArenaDtor(void* object) {
  DebuggerToBackend* _this = reinterpret_cast< DebuggerToBackend* >(object);
  (void)_this;
}
void DebuggerToBackend::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DebuggerToBackend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DebuggerToBackend& DebuggerToBackend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_DebuggerToBackend.base);
  return *internal_default_instance();
}


void DebuggerToBackend::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:dse.osidbg.DebuggerToBackend)
  switch (msg_case()) {
    case kIdentify: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.identify_;
      }
      break;
    }
    case kSetGlobalBreakpoints: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.setglobalbreakpoints_;
      }
      break;
    }
    case kSetBreakpoints: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.setbreakpoints_;
      }
      break;
    }
    case kContinue: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.continue__;
      }
      break;
    }
    case kGetDatabaseContents: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.getdatabasecontents_;
      }
      break;
    }
    case kSyncStory: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.syncstory_;
      }
      break;
    }
    case kEvaluate: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.evaluate_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void DebuggerToBackend::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.DebuggerToBackend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seq_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_seq_no_) -
      reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_msg();
  _internal_metadata_.Clear();
}

bool DebuggerToBackend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.DebuggerToBackend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.osidbg.DbgIdentifyRequest identify = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identify()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.DbgSetGlobalBreakpoints setGlobalBreakpoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setglobalbreakpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.DbgSetBreakpoints setBreakpoints = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setbreakpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.DbgContinue continue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_continue_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.DbgGetDatabaseContents getDatabaseContents = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getdatabasecontents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seq_no = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reply_seq_no = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reply_seq_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.DbgSyncStory syncStory = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_syncstory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.DbgEvaluate evaluate = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evaluate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.DebuggerToBackend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.DebuggerToBackend)
  return false;
#undef DO_
}

void DebuggerToBackend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.DebuggerToBackend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.osidbg.DbgIdentifyRequest identify = 1;
  if (has_identify()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_identify(), output);
  }

  // .dse.osidbg.DbgSetGlobalBreakpoints setGlobalBreakpoints = 2;
  if (has_setglobalbreakpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_setglobalbreakpoints(), output);
  }

  // .dse.osidbg.DbgSetBreakpoints setBreakpoints = 3;
  if (has_setbreakpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_setbreakpoints(), output);
  }

  // .dse.osidbg.DbgContinue continue = 4;
  if (has_continue_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_continue_(), output);
  }

  // .dse.osidbg.DbgGetDatabaseContents getDatabaseContents = 5;
  if (has_getdatabasecontents()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_getdatabasecontents(), output);
  }

  // uint32 seq_no = 6;
  if (this->seq_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->seq_no(), output);
  }

  // uint32 reply_seq_no = 7;
  if (this->reply_seq_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->reply_seq_no(), output);
  }

  // .dse.osidbg.DbgSyncStory syncStory = 8;
  if (has_syncstory()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, this->_internal_syncstory(), output);
  }

  // .dse.osidbg.DbgEvaluate evaluate = 9;
  if (has_evaluate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9, this->_internal_evaluate(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.DebuggerToBackend)
}

size_t DebuggerToBackend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.DebuggerToBackend)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 seq_no = 6;
  if (this->seq_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq_no());
  }

  // uint32 reply_seq_no = 7;
  if (this->reply_seq_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reply_seq_no());
  }

  switch (msg_case()) {
    // .dse.osidbg.DbgIdentifyRequest identify = 1;
    case kIdentify: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.identify_);
      break;
    }
    // .dse.osidbg.DbgSetGlobalBreakpoints setGlobalBreakpoints = 2;
    case kSetGlobalBreakpoints: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.setglobalbreakpoints_);
      break;
    }
    // .dse.osidbg.DbgSetBreakpoints setBreakpoints = 3;
    case kSetBreakpoints: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.setbreakpoints_);
      break;
    }
    // .dse.osidbg.DbgContinue continue = 4;
    case kContinue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.continue__);
      break;
    }
    // .dse.osidbg.DbgGetDatabaseContents getDatabaseContents = 5;
    case kGetDatabaseContents: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.getdatabasecontents_);
      break;
    }
    // .dse.osidbg.DbgSyncStory syncStory = 8;
    case kSyncStory: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.syncstory_);
      break;
    }
    // .dse.osidbg.DbgEvaluate evaluate = 9;
    case kEvaluate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.evaluate_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebuggerToBackend::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DebuggerToBackend*>(&from));
}

void DebuggerToBackend::MergeFrom(const DebuggerToBackend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.DebuggerToBackend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seq_no() != 0) {
    set_seq_no(from.seq_no());
  }
  if (from.reply_seq_no() != 0) {
    set_reply_seq_no(from.reply_seq_no());
  }
  switch (from.msg_case()) {
    case kIdentify: {
      mutable_identify()->::dse::osidbg::DbgIdentifyRequest::MergeFrom(from.identify());
      break;
    }
    case kSetGlobalBreakpoints: {
      mutable_setglobalbreakpoints()->::dse::osidbg::DbgSetGlobalBreakpoints::MergeFrom(from.setglobalbreakpoints());
      break;
    }
    case kSetBreakpoints: {
      mutable_setbreakpoints()->::dse::osidbg::DbgSetBreakpoints::MergeFrom(from.setbreakpoints());
      break;
    }
    case kContinue: {
      mutable_continue_()->::dse::osidbg::DbgContinue::MergeFrom(from.continue_());
      break;
    }
    case kGetDatabaseContents: {
      mutable_getdatabasecontents()->::dse::osidbg::DbgGetDatabaseContents::MergeFrom(from.getdatabasecontents());
      break;
    }
    case kSyncStory: {
      mutable_syncstory()->::dse::osidbg::DbgSyncStory::MergeFrom(from.syncstory());
      break;
    }
    case kEvaluate: {
      mutable_evaluate()->::dse::osidbg::DbgEvaluate::MergeFrom(from.evaluate());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void DebuggerToBackend::CopyFrom(const DebuggerToBackend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.DebuggerToBackend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebuggerToBackend::IsInitialized() const {
  return true;
}

void DebuggerToBackend::Swap(DebuggerToBackend* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DebuggerToBackend* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DebuggerToBackend::UnsafeArenaSwap(DebuggerToBackend* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DebuggerToBackend::InternalSwap(DebuggerToBackend* other) {
  using std::swap;
  swap(seq_no_, other->seq_no_);
  swap(reply_seq_no_, other->reply_seq_no_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DebuggerToBackend::GetTypeName() const {
  return "dse.osidbg.DebuggerToBackend";
}


// ===================================================================

void BackendToDebugger::InitAsDefaultInstance() {
}
void BackendToDebugger::set_allocated_versioninfo(::dse::osidbg::BkVersionInfoResponse* versioninfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (versioninfo) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(versioninfo);
    if (message_arena != submessage_arena) {
      versioninfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, versioninfo, submessage_arena);
    }
    set_has_versioninfo();
    msg_.versioninfo_ = versioninfo;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.versionInfo)
}
void BackendToDebugger::set_allocated_breakpointtriggered(::dse::osidbg::BkBreakpointTriggered* breakpointtriggered) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (breakpointtriggered) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(breakpointtriggered);
    if (message_arena != submessage_arena) {
      breakpointtriggered = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, breakpointtriggered, submessage_arena);
    }
    set_has_breakpointtriggered();
    msg_.breakpointtriggered_ = breakpointtriggered;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.breakpointTriggered)
}
void BackendToDebugger::set_allocated_results(::dse::osidbg::BkResult* results) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (results) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(results);
    if (message_arena != submessage_arena) {
      results = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, results, submessage_arena);
    }
    set_has_results();
    msg_.results_ = results;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.results)
}
void BackendToDebugger::set_allocated_storyloaded(::dse::osidbg::BkStoryLoaded* storyloaded) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (storyloaded) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(storyloaded);
    if (message_arena != submessage_arena) {
      storyloaded = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, storyloaded, submessage_arena);
    }
    set_has_storyloaded();
    msg_.storyloaded_ = storyloaded;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.storyLoaded)
}
void BackendToDebugger::set_allocated_debugsessionended(::dse::osidbg::BkDebugSessionEnded* debugsessionended) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (debugsessionended) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(debugsessionended);
    if (message_arena != submessage_arena) {
      debugsessionended = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debugsessionended, submessage_arena);
    }
    set_has_debugsessionended();
    msg_.debugsessionended_ = debugsessionended;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.debugSessionEnded)
}
void BackendToDebugger::set_allocated_globalbreakpointtriggered(::dse::osidbg::BkGlobalBreakpointTriggered* globalbreakpointtriggered) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (globalbreakpointtriggered) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(globalbreakpointtriggered);
    if (message_arena != submessage_arena) {
      globalbreakpointtriggered = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, globalbreakpointtriggered, submessage_arena);
    }
    set_has_globalbreakpointtriggered();
    msg_.globalbreakpointtriggered_ = globalbreakpointtriggered;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.globalBreakpointTriggered)
}
void BackendToDebugger::set_allocated_syncstorydata(::dse::osidbg::BkSyncStoryData* syncstorydata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (syncstorydata) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(syncstorydata);
    if (message_arena != submessage_arena) {
      syncstorydata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, syncstorydata, submessage_arena);
    }
    set_has_syncstorydata();
    msg_.syncstorydata_ = syncstorydata;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.syncStoryData)
}
void BackendToDebugger::set_allocated_syncstoryfinished(::dse::osidbg::BkSyncStoryFinished* syncstoryfinished) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (syncstoryfinished) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(syncstoryfinished);
    if (message_arena != submessage_arena) {
      syncstoryfinished = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, syncstoryfinished, submessage_arena);
    }
    set_has_syncstoryfinished();
    msg_.syncstoryfinished_ = syncstoryfinished;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.syncStoryFinished)
}
void BackendToDebugger::set_allocated_debugoutput(::dse::osidbg::BkDebugOutput* debugoutput) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (debugoutput) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(debugoutput);
    if (message_arena != submessage_arena) {
      debugoutput = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debugoutput, submessage_arena);
    }
    set_has_debugoutput();
    msg_.debugoutput_ = debugoutput;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.debugOutput)
}
void BackendToDebugger::set_allocated_begindatabasecontents(::dse::osidbg::BkBeginDatabaseContents* begindatabasecontents) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (begindatabasecontents) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(begindatabasecontents);
    if (message_arena != submessage_arena) {
      begindatabasecontents = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, begindatabasecontents, submessage_arena);
    }
    set_has_begindatabasecontents();
    msg_.begindatabasecontents_ = begindatabasecontents;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.beginDatabaseContents)
}
void BackendToDebugger::set_allocated_databaserow(::dse::osidbg::BkDatabaseRow* databaserow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (databaserow) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(databaserow);
    if (message_arena != submessage_arena) {
      databaserow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, databaserow, submessage_arena);
    }
    set_has_databaserow();
    msg_.databaserow_ = databaserow;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.databaseRow)
}
void BackendToDebugger::set_allocated_enddatabasecontents(::dse::osidbg::BkEndDatabaseContents* enddatabasecontents) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (enddatabasecontents) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(enddatabasecontents);
    if (message_arena != submessage_arena) {
      enddatabasecontents = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enddatabasecontents, submessage_arena);
    }
    set_has_enddatabasecontents();
    msg_.enddatabasecontents_ = enddatabasecontents;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.endDatabaseContents)
}
void BackendToDebugger::set_allocated_evaluaterow(::dse::osidbg::BkEvaluateRow* evaluaterow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (evaluaterow) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(evaluaterow);
    if (message_arena != submessage_arena) {
      evaluaterow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, evaluaterow, submessage_arena);
    }
    set_has_evaluaterow();
    msg_.evaluaterow_ = evaluaterow;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.evaluateRow)
}
void BackendToDebugger::set_allocated_evaluatefinished(::dse::osidbg::BkEvaluateFinished* evaluatefinished) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (evaluatefinished) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(evaluatefinished);
    if (message_arena != submessage_arena) {
      evaluatefinished = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, evaluatefinished, submessage_arena);
    }
    set_has_evaluatefinished();
    msg_.evaluatefinished_ = evaluatefinished;
  }
  // @@protoc_insertion_point(field_set_allocated:dse.osidbg.BackendToDebugger.evaluateFinished)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackendToDebugger::kVersionInfoFieldNumber;
const int BackendToDebugger::kBreakpointTriggeredFieldNumber;
const int BackendToDebugger::kResultsFieldNumber;
const int BackendToDebugger::kStoryLoadedFieldNumber;
const int BackendToDebugger::kDebugSessionEndedFieldNumber;
const int BackendToDebugger::kGlobalBreakpointTriggeredFieldNumber;
const int BackendToDebugger::kSyncStoryDataFieldNumber;
const int BackendToDebugger::kSyncStoryFinishedFieldNumber;
const int BackendToDebugger::kDebugOutputFieldNumber;
const int BackendToDebugger::kBeginDatabaseContentsFieldNumber;
const int BackendToDebugger::kDatabaseRowFieldNumber;
const int BackendToDebugger::kEndDatabaseContentsFieldNumber;
const int BackendToDebugger::kEvaluateRowFieldNumber;
const int BackendToDebugger::kEvaluateFinishedFieldNumber;
const int BackendToDebugger::kSeqNoFieldNumber;
const int BackendToDebugger::kReplySeqNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackendToDebugger::BackendToDebugger()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osidebug_2eproto::scc_info_BackendToDebugger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dse.osidbg.BackendToDebugger)
}
BackendToDebugger::BackendToDebugger(::google::protobuf::Arena* arena)
  : ::google::protobuf::MessageLite(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BackendToDebugger.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:dse.osidbg.BackendToDebugger)
}
BackendToDebugger::BackendToDebugger(const BackendToDebugger& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seq_no_, &from.seq_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&reply_seq_no_) -
    reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_has_msg();
  switch (from.msg_case()) {
    case kVersionInfo: {
      mutable_versioninfo()->::dse::osidbg::BkVersionInfoResponse::MergeFrom(from.versioninfo());
      break;
    }
    case kBreakpointTriggered: {
      mutable_breakpointtriggered()->::dse::osidbg::BkBreakpointTriggered::MergeFrom(from.breakpointtriggered());
      break;
    }
    case kResults: {
      mutable_results()->::dse::osidbg::BkResult::MergeFrom(from.results());
      break;
    }
    case kStoryLoaded: {
      mutable_storyloaded()->::dse::osidbg::BkStoryLoaded::MergeFrom(from.storyloaded());
      break;
    }
    case kDebugSessionEnded: {
      mutable_debugsessionended()->::dse::osidbg::BkDebugSessionEnded::MergeFrom(from.debugsessionended());
      break;
    }
    case kGlobalBreakpointTriggered: {
      mutable_globalbreakpointtriggered()->::dse::osidbg::BkGlobalBreakpointTriggered::MergeFrom(from.globalbreakpointtriggered());
      break;
    }
    case kSyncStoryData: {
      mutable_syncstorydata()->::dse::osidbg::BkSyncStoryData::MergeFrom(from.syncstorydata());
      break;
    }
    case kSyncStoryFinished: {
      mutable_syncstoryfinished()->::dse::osidbg::BkSyncStoryFinished::MergeFrom(from.syncstoryfinished());
      break;
    }
    case kDebugOutput: {
      mutable_debugoutput()->::dse::osidbg::BkDebugOutput::MergeFrom(from.debugoutput());
      break;
    }
    case kBeginDatabaseContents: {
      mutable_begindatabasecontents()->::dse::osidbg::BkBeginDatabaseContents::MergeFrom(from.begindatabasecontents());
      break;
    }
    case kDatabaseRow: {
      mutable_databaserow()->::dse::osidbg::BkDatabaseRow::MergeFrom(from.databaserow());
      break;
    }
    case kEndDatabaseContents: {
      mutable_enddatabasecontents()->::dse::osidbg::BkEndDatabaseContents::MergeFrom(from.enddatabasecontents());
      break;
    }
    case kEvaluateRow: {
      mutable_evaluaterow()->::dse::osidbg::BkEvaluateRow::MergeFrom(from.evaluaterow());
      break;
    }
    case kEvaluateFinished: {
      mutable_evaluatefinished()->::dse::osidbg::BkEvaluateFinished::MergeFrom(from.evaluatefinished());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dse.osidbg.BackendToDebugger)
}

void BackendToDebugger::SharedCtor() {
  ::memset(&seq_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_seq_no_) -
      reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_has_msg();
}

BackendToDebugger::~BackendToDebugger() {
  // @@protoc_insertion_point(destructor:dse.osidbg.BackendToDebugger)
  SharedDtor();
}

void BackendToDebugger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_msg()) {
    clear_msg();
  }
}

void BackendToDebugger::ArenaDtor(void* object) {
  BackendToDebugger* _this = reinterpret_cast< BackendToDebugger* >(object);
  (void)_this;
}
void BackendToDebugger::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BackendToDebugger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BackendToDebugger& BackendToDebugger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osidebug_2eproto::scc_info_BackendToDebugger.base);
  return *internal_default_instance();
}


void BackendToDebugger::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:dse.osidbg.BackendToDebugger)
  switch (msg_case()) {
    case kVersionInfo: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.versioninfo_;
      }
      break;
    }
    case kBreakpointTriggered: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.breakpointtriggered_;
      }
      break;
    }
    case kResults: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.results_;
      }
      break;
    }
    case kStoryLoaded: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.storyloaded_;
      }
      break;
    }
    case kDebugSessionEnded: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.debugsessionended_;
      }
      break;
    }
    case kGlobalBreakpointTriggered: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.globalbreakpointtriggered_;
      }
      break;
    }
    case kSyncStoryData: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.syncstorydata_;
      }
      break;
    }
    case kSyncStoryFinished: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.syncstoryfinished_;
      }
      break;
    }
    case kDebugOutput: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.debugoutput_;
      }
      break;
    }
    case kBeginDatabaseContents: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.begindatabasecontents_;
      }
      break;
    }
    case kDatabaseRow: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.databaserow_;
      }
      break;
    }
    case kEndDatabaseContents: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.enddatabasecontents_;
      }
      break;
    }
    case kEvaluateRow: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.evaluaterow_;
      }
      break;
    }
    case kEvaluateFinished: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.evaluatefinished_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void BackendToDebugger::Clear() {
// @@protoc_insertion_point(message_clear_start:dse.osidbg.BackendToDebugger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seq_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_seq_no_) -
      reinterpret_cast<char*>(&seq_no_)) + sizeof(reply_seq_no_));
  clear_msg();
  _internal_metadata_.Clear();
}

bool BackendToDebugger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dse.osidbg.BackendToDebugger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dse.osidbg.BkVersionInfoResponse versionInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_versioninfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkBreakpointTriggered breakpointTriggered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_breakpointtriggered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkResult results = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkStoryLoaded storyLoaded = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storyloaded()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkDebugSessionEnded debugSessionEnded = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debugsessionended()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkGlobalBreakpointTriggered globalBreakpointTriggered = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_globalbreakpointtriggered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seq_no = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reply_seq_no = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reply_seq_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkSyncStoryData syncStoryData = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_syncstorydata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkSyncStoryFinished syncStoryFinished = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_syncstoryfinished()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkDebugOutput debugOutput = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debugoutput()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkBeginDatabaseContents beginDatabaseContents = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_begindatabasecontents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkDatabaseRow databaseRow = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_databaserow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkEndDatabaseContents endDatabaseContents = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enddatabasecontents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkEvaluateRow evaluateRow = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evaluaterow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dse.osidbg.BkEvaluateFinished evaluateFinished = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evaluatefinished()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dse.osidbg.BackendToDebugger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dse.osidbg.BackendToDebugger)
  return false;
#undef DO_
}

void BackendToDebugger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dse.osidbg.BackendToDebugger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dse.osidbg.BkVersionInfoResponse versionInfo = 1;
  if (has_versioninfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_versioninfo(), output);
  }

  // .dse.osidbg.BkBreakpointTriggered breakpointTriggered = 2;
  if (has_breakpointtriggered()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_breakpointtriggered(), output);
  }

  // .dse.osidbg.BkResult results = 4;
  if (has_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_results(), output);
  }

  // .dse.osidbg.BkStoryLoaded storyLoaded = 5;
  if (has_storyloaded()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_storyloaded(), output);
  }

  // .dse.osidbg.BkDebugSessionEnded debugSessionEnded = 6;
  if (has_debugsessionended()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_debugsessionended(), output);
  }

  // .dse.osidbg.BkGlobalBreakpointTriggered globalBreakpointTriggered = 7;
  if (has_globalbreakpointtriggered()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->_internal_globalbreakpointtriggered(), output);
  }

  // uint32 seq_no = 8;
  if (this->seq_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->seq_no(), output);
  }

  // uint32 reply_seq_no = 9;
  if (this->reply_seq_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->reply_seq_no(), output);
  }

  // .dse.osidbg.BkSyncStoryData syncStoryData = 10;
  if (has_syncstorydata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->_internal_syncstorydata(), output);
  }

  // .dse.osidbg.BkSyncStoryFinished syncStoryFinished = 11;
  if (has_syncstoryfinished()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->_internal_syncstoryfinished(), output);
  }

  // .dse.osidbg.BkDebugOutput debugOutput = 12;
  if (has_debugoutput()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->_internal_debugoutput(), output);
  }

  // .dse.osidbg.BkBeginDatabaseContents beginDatabaseContents = 13;
  if (has_begindatabasecontents()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, this->_internal_begindatabasecontents(), output);
  }

  // .dse.osidbg.BkDatabaseRow databaseRow = 14;
  if (has_databaserow()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, this->_internal_databaserow(), output);
  }

  // .dse.osidbg.BkEndDatabaseContents endDatabaseContents = 15;
  if (has_enddatabasecontents()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, this->_internal_enddatabasecontents(), output);
  }

  // .dse.osidbg.BkEvaluateRow evaluateRow = 16;
  if (has_evaluaterow()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, this->_internal_evaluaterow(), output);
  }

  // .dse.osidbg.BkEvaluateFinished evaluateFinished = 17;
  if (has_evaluatefinished()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, this->_internal_evaluatefinished(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dse.osidbg.BackendToDebugger)
}

size_t BackendToDebugger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dse.osidbg.BackendToDebugger)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 seq_no = 8;
  if (this->seq_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq_no());
  }

  // uint32 reply_seq_no = 9;
  if (this->reply_seq_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reply_seq_no());
  }

  switch (msg_case()) {
    // .dse.osidbg.BkVersionInfoResponse versionInfo = 1;
    case kVersionInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.versioninfo_);
      break;
    }
    // .dse.osidbg.BkBreakpointTriggered breakpointTriggered = 2;
    case kBreakpointTriggered: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.breakpointtriggered_);
      break;
    }
    // .dse.osidbg.BkResult results = 4;
    case kResults: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.results_);
      break;
    }
    // .dse.osidbg.BkStoryLoaded storyLoaded = 5;
    case kStoryLoaded: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.storyloaded_);
      break;
    }
    // .dse.osidbg.BkDebugSessionEnded debugSessionEnded = 6;
    case kDebugSessionEnded: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.debugsessionended_);
      break;
    }
    // .dse.osidbg.BkGlobalBreakpointTriggered globalBreakpointTriggered = 7;
    case kGlobalBreakpointTriggered: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.globalbreakpointtriggered_);
      break;
    }
    // .dse.osidbg.BkSyncStoryData syncStoryData = 10;
    case kSyncStoryData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.syncstorydata_);
      break;
    }
    // .dse.osidbg.BkSyncStoryFinished syncStoryFinished = 11;
    case kSyncStoryFinished: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.syncstoryfinished_);
      break;
    }
    // .dse.osidbg.BkDebugOutput debugOutput = 12;
    case kDebugOutput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.debugoutput_);
      break;
    }
    // .dse.osidbg.BkBeginDatabaseContents beginDatabaseContents = 13;
    case kBeginDatabaseContents: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.begindatabasecontents_);
      break;
    }
    // .dse.osidbg.BkDatabaseRow databaseRow = 14;
    case kDatabaseRow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.databaserow_);
      break;
    }
    // .dse.osidbg.BkEndDatabaseContents endDatabaseContents = 15;
    case kEndDatabaseContents: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.enddatabasecontents_);
      break;
    }
    // .dse.osidbg.BkEvaluateRow evaluateRow = 16;
    case kEvaluateRow: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.evaluaterow_);
      break;
    }
    // .dse.osidbg.BkEvaluateFinished evaluateFinished = 17;
    case kEvaluateFinished: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.evaluatefinished_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BackendToDebugger::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BackendToDebugger*>(&from));
}

void BackendToDebugger::MergeFrom(const BackendToDebugger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dse.osidbg.BackendToDebugger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seq_no() != 0) {
    set_seq_no(from.seq_no());
  }
  if (from.reply_seq_no() != 0) {
    set_reply_seq_no(from.reply_seq_no());
  }
  switch (from.msg_case()) {
    case kVersionInfo: {
      mutable_versioninfo()->::dse::osidbg::BkVersionInfoResponse::MergeFrom(from.versioninfo());
      break;
    }
    case kBreakpointTriggered: {
      mutable_breakpointtriggered()->::dse::osidbg::BkBreakpointTriggered::MergeFrom(from.breakpointtriggered());
      break;
    }
    case kResults: {
      mutable_results()->::dse::osidbg::BkResult::MergeFrom(from.results());
      break;
    }
    case kStoryLoaded: {
      mutable_storyloaded()->::dse::osidbg::BkStoryLoaded::MergeFrom(from.storyloaded());
      break;
    }
    case kDebugSessionEnded: {
      mutable_debugsessionended()->::dse::osidbg::BkDebugSessionEnded::MergeFrom(from.debugsessionended());
      break;
    }
    case kGlobalBreakpointTriggered: {
      mutable_globalbreakpointtriggered()->::dse::osidbg::BkGlobalBreakpointTriggered::MergeFrom(from.globalbreakpointtriggered());
      break;
    }
    case kSyncStoryData: {
      mutable_syncstorydata()->::dse::osidbg::BkSyncStoryData::MergeFrom(from.syncstorydata());
      break;
    }
    case kSyncStoryFinished: {
      mutable_syncstoryfinished()->::dse::osidbg::BkSyncStoryFinished::MergeFrom(from.syncstoryfinished());
      break;
    }
    case kDebugOutput: {
      mutable_debugoutput()->::dse::osidbg::BkDebugOutput::MergeFrom(from.debugoutput());
      break;
    }
    case kBeginDatabaseContents: {
      mutable_begindatabasecontents()->::dse::osidbg::BkBeginDatabaseContents::MergeFrom(from.begindatabasecontents());
      break;
    }
    case kDatabaseRow: {
      mutable_databaserow()->::dse::osidbg::BkDatabaseRow::MergeFrom(from.databaserow());
      break;
    }
    case kEndDatabaseContents: {
      mutable_enddatabasecontents()->::dse::osidbg::BkEndDatabaseContents::MergeFrom(from.enddatabasecontents());
      break;
    }
    case kEvaluateRow: {
      mutable_evaluaterow()->::dse::osidbg::BkEvaluateRow::MergeFrom(from.evaluaterow());
      break;
    }
    case kEvaluateFinished: {
      mutable_evaluatefinished()->::dse::osidbg::BkEvaluateFinished::MergeFrom(from.evaluatefinished());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void BackendToDebugger::CopyFrom(const BackendToDebugger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dse.osidbg.BackendToDebugger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackendToDebugger::IsInitialized() const {
  return true;
}

void BackendToDebugger::Swap(BackendToDebugger* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BackendToDebugger* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BackendToDebugger::UnsafeArenaSwap(BackendToDebugger* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BackendToDebugger::InternalSwap(BackendToDebugger* other) {
  using std::swap;
  swap(seq_no_, other->seq_no_);
  swap(reply_seq_no_, other->reply_seq_no_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string BackendToDebugger::GetTypeName() const {
  return "dse.osidbg.BackendToDebugger";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osidbg
}  // namespace dse
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgTypedValue* Arena::CreateMaybeMessage< ::dse::osidbg::MsgTypedValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgTypedValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgTuple* Arena::CreateMaybeMessage< ::dse::osidbg::MsgTuple >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgTuple >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgFrame* Arena::CreateMaybeMessage< ::dse::osidbg::MsgFrame >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgFrame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::DbgIdentifyRequest* Arena::CreateMaybeMessage< ::dse::osidbg::DbgIdentifyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::DbgIdentifyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkVersionInfoResponse* Arena::CreateMaybeMessage< ::dse::osidbg::BkVersionInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkVersionInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::DbgSetGlobalBreakpoints* Arena::CreateMaybeMessage< ::dse::osidbg::DbgSetGlobalBreakpoints >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::DbgSetGlobalBreakpoints >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgBreakpoint* Arena::CreateMaybeMessage< ::dse::osidbg::MsgBreakpoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgBreakpoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::DbgSetBreakpoints* Arena::CreateMaybeMessage< ::dse::osidbg::DbgSetBreakpoints >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::DbgSetBreakpoints >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkBreakpointTriggered* Arena::CreateMaybeMessage< ::dse::osidbg::BkBreakpointTriggered >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkBreakpointTriggered >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkGlobalBreakpointTriggered* Arena::CreateMaybeMessage< ::dse::osidbg::BkGlobalBreakpointTriggered >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkGlobalBreakpointTriggered >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::DbgContinue* Arena::CreateMaybeMessage< ::dse::osidbg::DbgContinue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::DbgContinue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::DbgGetDatabaseContents* Arena::CreateMaybeMessage< ::dse::osidbg::DbgGetDatabaseContents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::DbgGetDatabaseContents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::DbgSyncStory* Arena::CreateMaybeMessage< ::dse::osidbg::DbgSyncStory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::DbgSyncStory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::DbgEvaluate* Arena::CreateMaybeMessage< ::dse::osidbg::DbgEvaluate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::DbgEvaluate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkResult* Arena::CreateMaybeMessage< ::dse::osidbg::BkResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkStoryLoaded* Arena::CreateMaybeMessage< ::dse::osidbg::BkStoryLoaded >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkStoryLoaded >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkDebugSessionEnded* Arena::CreateMaybeMessage< ::dse::osidbg::BkDebugSessionEnded >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkDebugSessionEnded >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgActionInfo* Arena::CreateMaybeMessage< ::dse::osidbg::MsgActionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgActionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgGoalInfo* Arena::CreateMaybeMessage< ::dse::osidbg::MsgGoalInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgGoalInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgDatabaseInfo* Arena::CreateMaybeMessage< ::dse::osidbg::MsgDatabaseInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgDatabaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgNodeInfo* Arena::CreateMaybeMessage< ::dse::osidbg::MsgNodeInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgNodeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::MsgRuleInfo* Arena::CreateMaybeMessage< ::dse::osidbg::MsgRuleInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::MsgRuleInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkSyncStoryData* Arena::CreateMaybeMessage< ::dse::osidbg::BkSyncStoryData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkSyncStoryData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkSyncStoryFinished* Arena::CreateMaybeMessage< ::dse::osidbg::BkSyncStoryFinished >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkSyncStoryFinished >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkDebugOutput* Arena::CreateMaybeMessage< ::dse::osidbg::BkDebugOutput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkDebugOutput >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkBeginDatabaseContents* Arena::CreateMaybeMessage< ::dse::osidbg::BkBeginDatabaseContents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkBeginDatabaseContents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkDatabaseRow* Arena::CreateMaybeMessage< ::dse::osidbg::BkDatabaseRow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkDatabaseRow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkEndDatabaseContents* Arena::CreateMaybeMessage< ::dse::osidbg::BkEndDatabaseContents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkEndDatabaseContents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkEvaluateRow* Arena::CreateMaybeMessage< ::dse::osidbg::BkEvaluateRow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkEvaluateRow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BkEvaluateFinished* Arena::CreateMaybeMessage< ::dse::osidbg::BkEvaluateFinished >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BkEvaluateFinished >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::DebuggerToBackend* Arena::CreateMaybeMessage< ::dse::osidbg::DebuggerToBackend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::DebuggerToBackend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dse::osidbg::BackendToDebugger* Arena::CreateMaybeMessage< ::dse::osidbg::BackendToDebugger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dse::osidbg::BackendToDebugger >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
