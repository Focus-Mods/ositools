BEGIN_CLS(esv::MovementState)
P_GETTER(Type, LuaGetTypeId)
P_RO(TransactionId)
END_CLS()


BEGIN_CLS(esv::MSMovement)
INHERIT(esv::MovementState)
END_CLS()


BEGIN_CLS(esv::MSMoveTo)
INHERIT(esv::MovementState)
P(Position)
P(Position2)
P_RO(NextAiHandle)
P(NextTargetCheckType)
P(NextCloseEnoughDistMax)
P(NextCloseEnoughDistMin)
P(NextHorizon)
P(Nextfield_46)
P(NextSurfaceNavigationType)
P(NextUseCharacterRadius)
P(CurPosition)
P(AiBounds_M)
P(CurPositionOld)
P_RO(AiHandle)
P(TargetCheckType)
P(CloseEnoughDistMax)
P(CloseEnoughDistMin)
P(CharacterScale)
P(Horizon)
P(AiFlags)
P(CanRun)
P(SurfaceNavigationType)
P(CurPositionOld2)
P(TimeUntilNextPathfinding)
P(PathTimeout2)
P(Speed)
P(MovementAP)
P(TimeUntilNextPathing)
P_RO(AiPathId)
P(CharCurrentPositionXY)
P(field_D4)
P(Paused)
P(CannotMove)
P_RO(IsPathfinding)
P_RO(AiFloodDone)
P(field_DC)
P(field_DD)
P(TargetAiGridFlag0x10)
P(UseCharacterRadius)
P(PositionUpdated)
P(FreeMovement)
P(AutoFreeMovement)
P(field_E4)
P_REF(PathParams)
END_CLS()

BEGIN_CLS(esv::MovementMachine)
P_RO(Active)
P_REF(Layers)
P_RO(CharacterHandle)
END_CLS()


BEGIN_CLS(esv::ActionState)
P_GETTER(Type, LuaGetTypeId)
P_RO(TransactionId)
END_CLS()


BEGIN_CLS(esv::ArmorDivider)
P(DamagePerHit)
END_CLS()


BEGIN_CLS(esv::NumberDivider)
P(Type)
P(Amount)
P(Accumulator)
END_CLS()


BEGIN_CLS(esv::NumberDividers)
P_REF(ArmorAbsorptionDivider)
P_REF(DamageDividers)
END_CLS()


BEGIN_CLS(esv::ASAttack)
INHERIT(esv::ActionState)
P(TargetHandle)
P(TargetPosition)
P_REF(CleaveTargets)
P(IsFinished)
P(AlwaysHit)
P(TimeRemaining)
P(AnimationFinished)
P(TotalHits)
P(TotalHitOffHand)
P(TotalShoots)
P(TotalShootsOffHand)
P(HitCount)
P(HitCountOffHand)
P(ShootCount)
P(ShootCountOffHand)
P(MainWeaponHandle)
P(OffWeaponHandle)
P_REF(MainWeaponDamageList)
P_REF(OffHandDamageList)
P_REF(MainWeaponNumberDividers)
P_REF(OffHandNumberDividers)
P_REF(RangedMainHandDamage)
P_REF(RangedOffHandDamage)
P(MainHandHitType)
P(OffHandHitType)
P_REF(RangedMainHandHitObject)
P_REF(RangedOffHandHitObject)
P(ProjectileUsesHitObject)
P(ProjectileStartPosition)
P(ProjectileTargetPosition)
P(DamageDurability)
P_REF(DelayDeathCharacterHandles)
END_CLS()


BEGIN_CLS(esv::ASDie)
INHERIT(esv::ActionState)
P(DieLogicPending)
P(ExecutedDieLogic)
P(DieActionsPending)
P(PlayingDeathAnimation)
P(CauseeHandle)
END_CLS()


BEGIN_CLS(esv::ASHit)
INHERIT(esv::ActionState)
P(AnimationFlag1)
P(AnimationFlag2)
P(AnimationFlag3)
P(StillAnimation)
P(ShouldResetState)
P(HitStatusHandle)
END_CLS()


BEGIN_CLS(esv::ASIdle)
INHERIT(esv::ActionState)
END_CLS()


BEGIN_CLS(esv::ASAnimation)
INHERIT(esv::ActionState)
P(Animation)
P(AnimationTimeAfterTick)
P(AnimationTime)
P(AnimationDuration)
P(NullAnimation)
P(IsCompleted)
P(NoBlend)
P(field_2F)
P(ExitOnFinish)
END_CLS()


BEGIN_CLS(esv::ActionStateRequest)
INHERIT(esv::ActionState)
P(RequestTimeRemaining)
P_RO(RequestId)
END_CLS()


BEGIN_CLS(esv::ASPickUp)
INHERIT(esv::ActionStateRequest)
P(ItemHandle)
P(TargetItemSlot)
P(Flags)
P(NetID)
P(SplitAmount)
P(MovedItem)
P(StartPosition)
P(TargetPosition)
P(IsFinished)
P(TimeRemaining)
END_CLS()


BEGIN_CLS(esv::ASDrop)
INHERIT(esv::ActionState)
P(ItemHandle)
P(TargetPosition)
P(TargetRotation)
P(Amount)
P(TimeRemaining)
P(IsFinished)
END_CLS()


BEGIN_CLS(esv::ASMoveItem)
INHERIT(esv::ActionStateRequest)
P_REF(Items)
P_REF(Positions)
P_REF(Rotations)
P(Amount)
P(IsFinished)
P(ItemMoveFinished)
END_CLS()


BEGIN_CLS(esv::ASPrepareSkill)
INHERIT(esv::ActionState)
P(SkillId)
P(PrepareAnimationInit)
P(PrepareAnimationLoop)
P(IsFinished)
P(IsEntered)
END_CLS()


BEGIN_CLS(esv::ASUseSkill)
INHERIT(esv::ActionState)
P_REF(OriginalSkill)
P_REF(Skill)
END_CLS()


BEGIN_CLS(esv::ActionMachine::Layer)
P_REF(State)
END_CLS()


BEGIN_CLS(esv::ActionMachine)
P_RO(CharacterHandle)
P_REF(Layers)
END_CLS()
