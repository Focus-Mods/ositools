BEGIN_CLS(esv::MovementState)
P_GETTER(Type, LuaGetTypeId)
P_RO(TransactionId)
END_CLS()


BEGIN_CLS(esv::MSMovement)
INHERIT(esv::MovementState)
P(Velocity)
P(IsMoving)
P(FitToGrid)
P(IsRunning)
P(MoveTo)
P(TimeRemaining)
END_CLS()


BEGIN_CLS(esv::MSMoveTo)
INHERIT(esv::MovementState)
P(Position)
P(Position2)
P_RO(NextAiHandle)
P(NextTargetCheckType)
P(NextCloseEnoughDistMax)
P(NextCloseEnoughDistMin)
P(NextHorizon)
P(Nextfield_46)
P(NextSurfaceNavigationType)
P(NextUseCharacterRadius)
P(CurPosition)
P(AiBounds_M)
P(CurPositionOld)
P_RO(AiHandle)
P(TargetCheckType)
P(CloseEnoughDistMax)
P(CloseEnoughDistMin)
P(CharacterScale)
P(Horizon)
P(AiFlags)
P(CanRun)
P(SurfaceNavigationType)
P(CurPositionOld2)
P(TimeUntilNextPathfinding)
P(PathTimeout2)
P(Speed)
P(MovementAP)
P(TimeUntilNextPathing)
P_RO(AiPathId)
P(CharCurrentPositionXY)
P(field_D4)
P(Paused)
P(CannotMove)
P_RO(IsPathfinding)
P_RO(AiFloodDone)
P(field_DC)
P(field_DD)
P(TargetAiGridFlag0x10)
P(UseCharacterRadius)
P(PositionUpdated)
P(FreeMovement)
P(AutoFreeMovement)
P(field_E4)
P_REF(PathParams)
END_CLS()

BEGIN_CLS(esv::MovementMachine)
P_RO(Active)
P_REF(Layers)
P_RO(CharacterHandle)
END_CLS()


BEGIN_CLS(ecl::MovementState)
P_GETTER(Type, LuaGetTypeId)
P_RO(TransactionId)
END_CLS()


BEGIN_CLS(ecl::MSMoveTo)
INHERIT(ecl::MovementState)
P(Target)
P(AiGridValidatedTarget)
P(SourcePath)
P(AiGridValidatedSourcePath)
P(AiGridValidatedTarget2)
P(AiHandle)
P(TargetCheckType)
P(CloseEnoughDistMax)
P(CloseEnoughDistMin)
P(CharacterRadius)
P(Horizon)
P(AiGridFlags)
P(IsRunning)
P(UseSurfacePathInfluences)
P(UseCharacterRadius)
P(CanOpenDoors)
P(AiGridValidatedTarget_Copy)
P(TimeUntilNextPathfinding2)
P(TimeRemaining_M)
P(TimeUntilNextTargetPoint)
P(CustomAiPathId)
P(SourcePathXZ)
P(IsFinished)
P(PathfindingComplete_M)
P(FoundNextTargetPoint)
P(DisabledStraightPathfinding_M)
P(ParamTarget2)
P(ParamAiHandle)
P(ParamTargetCheckType)
P(ParamCloseEnoughDistMax)
P(ParamCloseEnoughDistMin)
P(ParamHorizon)
P(ParamIsRunning)
P(ParamUseSurfacePathInfluences)
P(ParamUseCharacterRadius)
P(ParamCanOpenDoors)
P(WithinFreeMovementDistance)
P(IsAttack_M)
P(ConsumedMoveDistance)
P(TimeUntilNextPathfinding)
P_REF(IgnoreCollisionAiHandles)
END_CLS()

BEGIN_CLS(ecl::MovementMachine)
P_RO(Active)
P_REF(Layers)
P_RO(CharacterHandle)
END_CLS()
